{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 306,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 306,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 26,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 38,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 49,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 63,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 81,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 102,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 129,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 157,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 175,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 187,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 246,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 260,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 276,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 281,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 286,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 291,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 26,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 49,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 63,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 81,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 102,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 129,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 157,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 187,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 246,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 260,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 276,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 281,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 306,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 63,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 81,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 102,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 129,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 157,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 187,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/common/ZeroCopySourceMock.sol",
            "line": 260,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
