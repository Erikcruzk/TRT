{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 583,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 588,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 588,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 592,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 639,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 678,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 678,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 685,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 692,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 695,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 695,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 698,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 720,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 720,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 727,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 734,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 737,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 737,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 740,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 583,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 639,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 676,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 692,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 718,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 734,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 904,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 765,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 881,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 544,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 545,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 546,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 545,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 546,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 546,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 547,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 548,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 549,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 548,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 549,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 549,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 640,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 641,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 642,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 643,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 644,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 645,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 646,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 647,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 1040,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 1041,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 643,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 560,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 583,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 590,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 609,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 610,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 611,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 612,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 613,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 639,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 658,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 676,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 687,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 689,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 691,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 692,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 700,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 704,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 707,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 718,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 729,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 731,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 733,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 734,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 742,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 746,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 749,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Smartdec-Boomstarter Smart Contracts Security Review/boomstarter-ico-ec2d28f0c3243b8f782cbd44522b5a9ca0fc22a8/contracts/oraclize/usingOraclize.sol",
            "line": 904,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
