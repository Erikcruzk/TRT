{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 27,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 62,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 27,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 62,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 29,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 66,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 27,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 62,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 66,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "security",
            "filename": "../sc_datasets/compiled_DAppSCAN/PeckShield-ERC20_LuckyChip/core-0d957aa387d29297fc6ebfc69140440be6d791c1/contracts/libraries/Multicall2.sol",
            "line": 74,
            "message": "blockhash(block.number) and blockhash(block.number + N) always returns 0.",
            "name": "incorrect-use-of-blockhash"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
