{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 720,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 721,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 722,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 723,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 776,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 601,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 428,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 429,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 502,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 525,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 639,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 666,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 670,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 675,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 721,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 669,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 670,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 671,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 428,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 429,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 502,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 525,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 666,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 670,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-Shopping-project2/openzeppelin-contracts-3.2.0/contracts/mocks/GSNRecipientSignatureMock.sol",
            "line": 721,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
