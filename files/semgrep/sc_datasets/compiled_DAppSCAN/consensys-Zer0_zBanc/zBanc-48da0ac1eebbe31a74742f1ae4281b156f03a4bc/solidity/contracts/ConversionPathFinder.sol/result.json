{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 438,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 445,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 478,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 479,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 73,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 74,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 75,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 214,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 215,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 216,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 217,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 393,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 394,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 438,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 441,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 85,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 96,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 104,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 128,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 139,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 150,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 206,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 224,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 230,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 233,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 230,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 463,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 464,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 465,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 466,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 467,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 468,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 469,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 470,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 471,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 472,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 467,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 468,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 474,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 438,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 441,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 472,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 518,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/ConversionPathFinder.sol",
            "line": 533,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
