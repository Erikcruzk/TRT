{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 104,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 303,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 113,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 219,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 220,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 221,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 222,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 243,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 243,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 293,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 294,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 295,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 296,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 299,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 299,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 217,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 241,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 291,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 217,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 241,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinfabrik-Security Audit \u2013 Send (SDT) Token Sale ICO Smart Contract/sdt-contracts-master/flattened-contracts/TokenVesting.sol",
            "line": 291,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
