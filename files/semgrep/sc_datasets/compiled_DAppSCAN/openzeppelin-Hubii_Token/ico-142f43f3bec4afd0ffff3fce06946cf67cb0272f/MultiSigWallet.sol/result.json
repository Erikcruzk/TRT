{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 106,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 243,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 271,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 107,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 108,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 243,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 244,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 244,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 246,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 106,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 243,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 81,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 82,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 83,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 84,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 107,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 301,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 302,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 303,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 352,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 353,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 354,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 355,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 356,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 357,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 106,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 136,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 156,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 243,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 286,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 300,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 327,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 333,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 351,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/openzeppelin-Hubii_Token/ico-142f43f3bec4afd0ffff3fce06946cf67cb0272f/MultiSigWallet.sol",
            "line": 359,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
