{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/QuillAudits-Lido-WstETH/lido-dao-ea6fa222004b88e6a24b566a51e5b56b0079272d/gasprofile/test-contracts/FooBase.sol",
            "line": 14,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/QuillAudits-Lido-WstETH/lido-dao-ea6fa222004b88e6a24b566a51e5b56b0079272d/gasprofile/test-contracts/FooBase.sol",
            "line": 9,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/QuillAudits-Lido-WstETH/lido-dao-ea6fa222004b88e6a24b566a51e5b56b0079272d/gasprofile/test-contracts/FooBase.sol",
            "line": 9,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
