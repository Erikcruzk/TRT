{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 418,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 426,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 444,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 453,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 464,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 474,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 477,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 952,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 953,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 954,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 955,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 956,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 957,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 958,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 959,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 960,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 988,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1008,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1037,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1061,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1078,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 985,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1005,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1060,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1077,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1109,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1127,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 211,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 214,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 280,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 351,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 440,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 441,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 442,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 443,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 463,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 499,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 514,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 977,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 987,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1003,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1007,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1029,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1033,
            "message": "Consider using the prefix decrement expression whenever the return value is not needed. The prefix decrement expression is cheaper in terms of gas.",
            "name": "use-prefix-decrement-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 985,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1005,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1060,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1077,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1109,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 1127,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 214,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 280,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 440,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 441,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 442,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 443,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 463,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 499,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Quantstamp-Airswap/airswap-protocols-ac62b7109974d9069ff6bc153bc9660acc4e144f/source/registry/contracts/Registry.sol",
            "line": 514,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
