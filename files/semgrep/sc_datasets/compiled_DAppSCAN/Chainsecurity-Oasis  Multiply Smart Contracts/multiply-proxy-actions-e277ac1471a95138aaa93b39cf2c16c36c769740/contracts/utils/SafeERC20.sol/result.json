{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 206,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 215,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 216,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 217,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 218,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 230,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 231,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 240,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 241,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 242,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 243,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 255,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 256,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 257,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 258,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 50,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 54,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 83,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 93,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 125,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 154,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 266,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 54,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 83,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 154,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Oasis  Multiply Smart Contracts/multiply-proxy-actions-e277ac1471a95138aaa93b39cf2c16c36c769740/contracts/utils/SafeERC20.sol",
            "line": 266,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
