{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinbae-Barnbridge_Staking_Pool/Staking0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853/@openzeppelin/contracts/utils/ReentrancyGuard.sol",
            "line": 40,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinbae-Barnbridge_Staking_Pool/Staking0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853/@openzeppelin/contracts/utils/ReentrancyGuard.sol",
            "line": 41,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinbae-Barnbridge_Staking_Pool/Staking0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853/@openzeppelin/contracts/utils/ReentrancyGuard.sol",
            "line": 42,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Coinbae-Barnbridge_Staking_Pool/Staking0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853/@openzeppelin/contracts/utils/ReentrancyGuard.sol",
            "line": 53,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
