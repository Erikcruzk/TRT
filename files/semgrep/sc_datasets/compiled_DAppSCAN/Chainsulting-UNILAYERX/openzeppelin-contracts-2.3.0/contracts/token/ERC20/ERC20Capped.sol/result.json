{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 471,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 472,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 473,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 542,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 543,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 544,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 545,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 109,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 124,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 148,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 166,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 185,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 342,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 343,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 360,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 379,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 400,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 401,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 437,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 445,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 454,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 476,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 543,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 562,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 148,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 342,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 343,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 379,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 400,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 401,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 445,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 454,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/token/ERC20/ERC20Capped.sol",
            "line": 476,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
