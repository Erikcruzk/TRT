{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 240,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 244,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 255,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 260,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 265,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 386,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 317,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 318,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 319,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 320,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 422,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 423,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 424,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 425,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 426,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 427,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 428,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 429,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 430,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 431,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 109,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 124,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 148,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 166,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 185,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 252,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 253,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 254,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 283,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 287,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 291,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 333,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 368,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 423,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 425,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 426,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 428,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 493,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 508,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 509,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 148,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 252,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 253,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 254,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 291,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 368,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 423,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 425,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 428,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/drafts/TokenVesting.sol",
            "line": 509,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
