{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 681,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 682,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 683,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 30,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 45,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 69,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 87,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 106,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 458,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 459,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 476,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 495,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 516,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 517,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 638,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 640,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 181,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 182,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 183,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 184,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 185,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 69,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 458,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 459,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 495,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 516,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 517,
            "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met.",
            "name": "use-short-revert-string"
        },
        {
            "category": "security",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 689,
            "message": "Anyone can burn tokens of other accounts",
            "name": "erc20-public-burn"
        },
        {
            "category": "security",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 690,
            "message": "Anyone can burn tokens of other accounts",
            "name": "erc20-public-burn"
        },
        {
            "category": "security",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/ERC20SnapshotMock.sol",
            "line": 691,
            "message": "Anyone can burn tokens of other accounts",
            "name": "erc20-public-burn"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
