{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 220,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 386,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 396,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 517,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 655,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 683,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 35,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 220,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 221,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 221,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 222,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 283,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 283,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 286,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 286,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 286,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 289,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 291,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 291,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 292,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 292,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 293,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 296,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 296,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 299,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 299,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 300,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 300,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 317,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 317,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 319,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 319,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 321,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 321,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 323,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 387,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 397,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 518,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 520,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 655,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 656,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 656,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 658,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 220,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 282,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 315,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 386,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 396,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 517,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 655,
            "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks.",
            "name": "unnecessary-checked-arithmetic-in-loop"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 87,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 114,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 115,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 123,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 124,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 142,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 143,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 144,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 145,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 289,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 290,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 291,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 292,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 293,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 294,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 295,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 296,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 297,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 298,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 338,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 339,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 340,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 341,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 342,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 343,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 344,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 345,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 346,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 347,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 713,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 714,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 715,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 764,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 765,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 766,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 767,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 768,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 769,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 220,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 223,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 228,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 282,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 315,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 386,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 396,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 517,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 548,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 568,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 655,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 698,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 712,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 739,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 745,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 763,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Blockchain Labs NZ-Gifto/GiftoSmartContract-50e1f1895dd91a0dad0d4f0b2ea620e5827ed1fa/CMultisigWallet_Gifto.sol",
            "line": 771,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
