{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 94,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 95,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 96,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 75,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 76,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 77,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 78,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ArraysImpl.sol",
            "line": 79,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
