{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 102,
            "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`.",
            "name": "use-abi-encodecall-instead-of-encodewithselector"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 148,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 40,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 41,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 42,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 117,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 118,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 119,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 53,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 103,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsulting-MakiSwap/openzeppelin-contracts-3.2.0/contracts/mocks/ReentrancyMock.sol",
            "line": 137,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
