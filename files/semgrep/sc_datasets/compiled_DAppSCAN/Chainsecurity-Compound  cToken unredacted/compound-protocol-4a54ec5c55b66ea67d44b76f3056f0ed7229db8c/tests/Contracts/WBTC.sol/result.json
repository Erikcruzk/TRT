{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 361,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 450,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 572,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "best-practice",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 650,
            "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it.",
            "name": "use-ownable2step"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 367,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 454,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 312,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 313,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 314,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/tests/Contracts/WBTC.sol",
            "line": 691,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
