{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 52,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 53,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 54,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 55,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 90,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 91,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 92,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/ERC20/WETH.sol",
            "line": 93,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
