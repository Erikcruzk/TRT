{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 19,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 20,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 21,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 22,
            "message": "Consider making costructor payable to save gas.",
            "name": "non-payable-constructor"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 30,
            "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec.",
            "name": "use-custom-error-not-require"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 89,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 90,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 91,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 92,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "../sc_datasets/compiled_DAppSCAN/consensys-Codefi_ERC1400_Assessment/UniversalToken-f6de24d50c54471f85985e2303a04bb92c27ac71/contracts/mocks/CertificateControllerMock.sol",
            "line": 93,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
