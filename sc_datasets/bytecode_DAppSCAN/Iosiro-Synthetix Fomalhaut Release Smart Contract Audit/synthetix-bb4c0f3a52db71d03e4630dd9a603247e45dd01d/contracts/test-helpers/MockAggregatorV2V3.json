{
    "<stdin>:AggregatorV2V3Interface": {
        "abi": [
            {
                "constant": true,
                "inputs": [],
                "name": "decimals",
                "outputs": [
                    {
                        "internalType": "uint8",
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "internalType": "uint80",
                        "name": "_roundId",
                        "type": "uint80"
                    }
                ],
                "name": "getRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "roundId",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "answeredInRound",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "latestRound",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "latestRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "roundId",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "answeredInRound",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "bin": ""
    },
    "<stdin>:MockAggregatorV2V3": {
        "abi": [
            {
                "inputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "decimals",
                "outputs": [
                    {
                        "internalType": "uint8",
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "name": "entries",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "roundId",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "answeredInRound",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "internalType": "uint80",
                        "name": "_roundId",
                        "type": "uint80"
                    }
                ],
                "name": "getRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "keyDecimals",
                "outputs": [
                    {
                        "internalType": "uint8",
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "latestRound",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "latestRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "roundId",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "internalType": "uint8",
                        "name": "_decimals",
                        "type": "uint8"
                    }
                ],
                "name": "setDecimals",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "timestamp",
                        "type": "uint256"
                    }
                ],
                "name": "setLatestAnswer",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "timestamp",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "_roundId",
                        "type": "uint80"
                    }
                ],
                "name": "setLatestAnswerWithRound",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "bin": "608060405260008060006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550600080600a6101000a81548160ff021916908360ff16021790555034801561005857600080fd5b506108e8806100686000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638cd221c9116100665780638cd221c9146101885780639a6fc8f5146101be578063b30906d414610258578063e9c58f85146102e6578063feaf968c1461031e5761009e565b80632c746cae146100a3578063313ce567146100c7578063668a0f02146100eb5780637a1395aa146101095780637b28d4831461013a575b600080fd5b6100ab610388565b604051808260ff1660ff16815260200191505060405180910390f35b6100cf61039b565b604051808260ff1660ff16815260200191505060405180910390f35b6100f36103b1565b6040518082815260200191505060405180910390f35b6101386004803603602081101561011f57600080fd5b81019080803560ff1690602001909291905050506103dc565b005b6101866004803603606081101561015057600080fd5b810190808035906020019092919080359060200190929190803569ffffffffffffffffffff1690602001909291905050506103fa565b005b610190610555565b604051808269ffffffffffffffffffff1669ffffffffffffffffffff16815260200191505060405180910390f35b6101f6600480360360208110156101d457600080fd5b81019080803569ffffffffffffffffffff169060200190929190505050610570565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6102846004803603602081101561026e57600080fd5b8101908080359060200190929190505050610667565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b61031c600480360360408110156102fc57600080fd5b8101908080359060200190929190803590602001909291905050506106c9565b005b610326610843565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6000600a9054906101000a900460ff1681565b600080600a9054906101000a900460ff16905090565b60008060009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16905090565b806000600a6101000a81548160ff021916908360ff16021790555050565b806000806101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055506040518060a001604052806000809054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1681526020018481526020018381526020018381526020016000809054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16815250600160008060009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550905050505050565b6000809054906101000a900469ffffffffffffffffffff1681565b600080600080600061058061086c565b600160008869ffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1669ffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1669ffffffffffffffffffff1681525050905080600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b60016020528060005260406000206000915090508060000160009054906101000a900469ffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900469ffffffffffffffffffff16905085565b60008081819054906101000a900469ffffffffffffffffffff168092919060010191906101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550506040518060a001604052806000809054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff1681526020018381526020018281526020018281526020016000809054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16815250600160008060009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055509050505050565b600080600080600061085b6108566103b1565b610570565b945094509450945094509091929394565b6040518060a00160405280600069ffffffffffffffffffff168152602001600081526020016000815260200160008152602001600069ffffffffffffffffffff168152509056fea265627a7a723158206086b12d8dfef01130ab2d6a1be5aeadf873d8d585d38fcff9b577a45c8dcb0564736f6c63430005110032"
    }
}