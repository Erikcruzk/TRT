{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter += 1;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // The counter starts at one to prevent changing it from zero to a non-zero\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 196,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // value, which is a more expensive operation.\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter = 1;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 277,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(rate > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 278,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(wallet != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 279,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(token != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 280,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 281,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _rate = rate;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 282,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _wallet = wallet;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _token = token;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 284,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 487,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // solium-disable-next-line security/no-block-members\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 488,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(openingTime >= block.timestamp);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 489,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(closingTime > openingTime);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 490,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 491,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _openingTime = openingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 492,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _closingTime = closingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 493,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 561,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 562,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _finalized = false;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 563,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 613,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 614,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _primary = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 615,
          "vulnerability_to_line": null,
          "vulnerability_code": "    emit PrimaryTransferred(_primary);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 616,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 750,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(address beneficiary) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 751,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(beneficiary != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 752,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _beneficiary = beneficiary;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 753,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _state = State.Active;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 754,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 851,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 goal) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 852,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(goal > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 853,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _escrow = new RefundEscrow(wallet());\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 854,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _goal = goal;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 855,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_37"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 801,
          "vulnerability_to_line": 806,
          "vulnerability_code": "  function beneficiaryWithdraw() public {\n\n    require(_state == State.Closed);\n\n    _beneficiary.transfer(address(this).balance);\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiaryWithdraw (RefundableCrowdsale.sol#801-806) sends eth to arbitrary user\n\tDangerous calls:\n\t- _beneficiary.transfer(address(this).balance) (RefundableCrowdsale.sol#803-804)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.rate (local variable @ RefundableCrowdsale.sol#276) shadows:\n\t- Crowdsale.rate (function @ RefundableCrowdsale.sol#317-320)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.wallet (local variable @ RefundableCrowdsale.sol#276) shadows:\n\t- Crowdsale.wallet (function @ RefundableCrowdsale.sol#310-313)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.token (local variable @ RefundableCrowdsale.sol#276) shadows:\n\t- Crowdsale.token (function @ RefundableCrowdsale.sol#303-306)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.openingTime (local variable @ RefundableCrowdsale.sol#486) shadows:\n\t- TimedCrowdsale.openingTime (function @ RefundableCrowdsale.sol#498-501)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.closingTime (local variable @ RefundableCrowdsale.sol#486) shadows:\n\t- TimedCrowdsale.closingTime (function @ RefundableCrowdsale.sol#505-508)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 750,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(address beneficiary) public {\n",
          "message": "RefundEscrow.constructor.beneficiary (local variable @ RefundableCrowdsale.sol#750) shadows:\n\t- RefundEscrow.beneficiary (function @ RefundableCrowdsale.sol#766-770)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 851,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 goal) internal {\n",
          "message": "RefundableCrowdsale.constructor.goal (local variable @ RefundableCrowdsale.sol#851) shadows:\n\t- RefundableCrowdsale.goal (function @ RefundableCrowdsale.sol#860-864)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": 494,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n\n    // solium-disable-next-line security/no-block-members\n\n    require(openingTime >= block.timestamp);\n\n    require(closingTime > openingTime);\n\n\n\n    _openingTime = openingTime;\n\n    _closingTime = closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.constructor (RefundableCrowdsale.sol#486-494) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(openingTime >= block.timestamp) (RefundableCrowdsale.sol#488)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 512,
          "vulnerability_to_line": 516,
          "vulnerability_code": "  function isOpen() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.isOpen (RefundableCrowdsale.sol#512-516) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= _openingTime && block.timestamp <= _closingTime (RefundableCrowdsale.sol#514)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 521,
          "vulnerability_to_line": 525,
          "vulnerability_code": "  function hasClosed() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp > _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.hasClosed (RefundableCrowdsale.sol#521-525) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > _closingTime (RefundableCrowdsale.sol#523)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 303,
          "vulnerability_to_line": 306,
          "vulnerability_code": "  function token() public view returns(IERC20) {\n\n    return _token;\n\n  }\n",
          "message": "Crowdsale.token (RefundableCrowdsale.sol#303-306) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 317,
          "vulnerability_to_line": 320,
          "vulnerability_code": "  function rate() public view returns(uint256) {\n\n    return _rate;\n\n  }\n",
          "message": "Crowdsale.rate (RefundableCrowdsale.sol#317-320) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 498,
          "vulnerability_to_line": 501,
          "vulnerability_code": "  function openingTime() public view returns(uint256) {\n\n    return _openingTime;\n\n  }\n",
          "message": "TimedCrowdsale.openingTime (RefundableCrowdsale.sol#498-501) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 505,
          "vulnerability_to_line": 508,
          "vulnerability_code": "  function closingTime() public view returns(uint256) {\n\n    return _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.closingTime (RefundableCrowdsale.sol#505-508) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 576,
          "vulnerability_to_line": 585,
          "vulnerability_code": "  function finalize() public {\n\n    require(!_finalized);\n\n    require(hasClosed());\n\n\n\n    _finalized = true;\n\n\n\n    _finalization();\n\n    emit CrowdsaleFinalized();\n\n  }\n",
          "message": "FinalizableCrowdsale.finalize (RefundableCrowdsale.sol#576-585) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 629,
          "vulnerability_to_line": 632,
          "vulnerability_code": "  function primary() public view returns (address) {\n\n    return _primary;\n\n  }\n",
          "message": "Secondary.primary (RefundableCrowdsale.sol#629-632) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 637,
          "vulnerability_to_line": 642,
          "vulnerability_code": "  function transferPrimary(address recipient) public onlyPrimary {\n\n    require(recipient != address(0));\n\n    _primary = recipient;\n\n    emit PrimaryTransferred(_primary);\n\n  }\n",
          "message": "Secondary.transferPrimary (RefundableCrowdsale.sol#637-642) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 669,
          "vulnerability_to_line": 672,
          "vulnerability_code": "  function depositsOf(address payee) public view returns (uint256) {\n\n    return _deposits[payee];\n\n  }\n",
          "message": "Escrow.depositsOf (RefundableCrowdsale.sol#669-672) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 759,
          "vulnerability_to_line": 763,
          "vulnerability_code": "  function state() public view returns (State) {\n\n    return _state;\n\n  }\n\n\n",
          "message": "RefundEscrow.state (RefundableCrowdsale.sol#759-763) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 766,
          "vulnerability_to_line": 770,
          "vulnerability_code": "  function beneficiary() public view returns (address) {\n\n    return _beneficiary;\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiary (RefundableCrowdsale.sol#766-770) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 783,
          "vulnerability_to_line": 789,
          "vulnerability_code": "  function close() public onlyPrimary {\n\n    require(_state == State.Active);\n\n    _state = State.Closed;\n\n    emit RefundsClosed();\n\n  }\n\n\n",
          "message": "RefundEscrow.close (RefundableCrowdsale.sol#783-789) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 792,
          "vulnerability_to_line": 798,
          "vulnerability_code": "  function enableRefunds() public onlyPrimary {\n\n    require(_state == State.Active);\n\n    _state = State.Refunding;\n\n    emit RefundsEnabled();\n\n  }\n\n\n",
          "message": "RefundEscrow.enableRefunds (RefundableCrowdsale.sol#792-798) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 801,
          "vulnerability_to_line": 806,
          "vulnerability_code": "  function beneficiaryWithdraw() public {\n\n    require(_state == State.Closed);\n\n    _beneficiary.transfer(address(this).balance);\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiaryWithdraw (RefundableCrowdsale.sol#801-806) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 860,
          "vulnerability_to_line": 864,
          "vulnerability_code": "  function goal() public view returns(uint256) {\n\n    return _goal;\n\n  }\n\n\n",
          "message": "RefundableCrowdsale.goal (RefundableCrowdsale.sol#860-864) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 868,
          "vulnerability_to_line": 875,
          "vulnerability_code": "  function claimRefund(address beneficiary) public {\n\n    require(finalized());\n\n    require(!goalReached());\n\n\n\n    _escrow.withdraw(beneficiary);\n\n  }\n\n\n",
          "message": "RefundableCrowdsale.claimRefund (RefundableCrowdsale.sol#868-875) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 371,
          "vulnerability_to_line": 381,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    require(beneficiary != address(0));\n\n    require(weiAmount != 0);\n\n  }\n",
          "message": "Function 'Crowdsale._preValidatePurchase' (RefundableCrowdsale.sol#371-381) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 387,
          "vulnerability_to_line": 396,
          "vulnerability_code": "  function _postValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._postValidatePurchase' (RefundableCrowdsale.sol#387-396) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 402,
          "vulnerability_to_line": 410,
          "vulnerability_code": "  function _deliverTokens(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _token.safeTransfer(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._deliverTokens' (RefundableCrowdsale.sol#402-410) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 416,
          "vulnerability_to_line": 424,
          "vulnerability_code": "  function _processPurchase(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _deliverTokens(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._processPurchase' (RefundableCrowdsale.sol#416-424) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": 438,
          "vulnerability_code": "  function _updatePurchasingState(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._updatePurchasingState' (RefundableCrowdsale.sol#430-438) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 444,
          "vulnerability_to_line": 449,
          "vulnerability_code": "  function _getTokenAmount(uint256 weiAmount)\n\n    internal view returns (uint256)\n\n  {\n\n    return weiAmount.mul(_rate);\n\n  }\n",
          "message": "Function 'Crowdsale._getTokenAmount' (RefundableCrowdsale.sol#444-449) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 453,
          "vulnerability_to_line": 456,
          "vulnerability_code": "  function _forwardFunds() internal {\n\n    _wallet.transfer(msg.value);\n\n  }\n",
          "message": "Function 'Crowdsale._forwardFunds' (RefundableCrowdsale.sol#453-456) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 531,
          "vulnerability_to_line": 541,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    onlyWhileOpen\n\n    view\n\n  {\n\n    super._preValidatePurchase(beneficiary, weiAmount);\n\n  }\n",
          "message": "Function 'TimedCrowdsale._preValidatePurchase' (RefundableCrowdsale.sol#531-541) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 591,
          "vulnerability_to_line": 593,
          "vulnerability_code": "  function _finalization() internal {\n\n  }\n",
          "message": "Function 'FinalizableCrowdsale._finalization' (RefundableCrowdsale.sol#591-593) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 900,
          "vulnerability_to_line": 904,
          "vulnerability_code": "  function _forwardFunds() internal {\n\n    _escrow.deposit.value(msg.value)(msg.sender);\n\n  }\n\n\n",
          "message": "Function 'RefundableCrowdsale._forwardFunds' (RefundableCrowdsale.sol#900-904) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 886,
          "vulnerability_to_line": 897,
          "vulnerability_code": "  function _finalization() internal {\n\n    if (goalReached()) {\n\n      _escrow.close();\n\n      _escrow.beneficiaryWithdraw();\n\n    } else {\n\n      _escrow.enableRefunds();\n\n    }\n\n\n\n    super._finalization();\n\n  }\n\n\n",
          "message": "Function 'RefundableCrowdsale._finalization' (RefundableCrowdsale.sol#886-897) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 181,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 460,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 546,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 597,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 646,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 701,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 724,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 816,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 192,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _guardCounter;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "  IERC20 private _token;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 243,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _wallet;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _rate;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _weiRaised;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 470,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _openingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 471,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _closingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 557,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bool private _finalized;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 604,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _primary;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 667,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => uint256) private _deposits;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 743,
          "vulnerability_to_line": null,
          "vulnerability_code": "  State private _state;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 744,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _beneficiary;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 842,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _goal;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 845,
          "vulnerability_to_line": null,
          "vulnerability_code": "  RefundEscrow private _escrow;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 119,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 662,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 839,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Transaction-Ordering Dependence (TOD)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Concurrency bug",
          "vulnerability_from_line": 693,
          "vulnerability_to_line": null,
          "vulnerability_code": "    payee.transfer(payment);\n",
          "message": null
        },
        {
          "name": "Concurrency bug",
          "vulnerability_from_line": 803,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _beneficiary.transfer(address(this).balance);\n",
          "message": null
        }
      ]
    }
  }
}