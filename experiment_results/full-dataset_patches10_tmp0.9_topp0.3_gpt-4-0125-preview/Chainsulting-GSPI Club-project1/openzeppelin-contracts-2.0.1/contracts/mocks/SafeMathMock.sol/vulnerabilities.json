{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 75,
          "vulnerability_to_line": 77,
          "vulnerability_code": "  function mul(uint256 a, uint256 b) public pure returns (uint256) {\n\n    return SafeMath.mul(a, b);\n",
          "message": "SafeMathMock.mul (SafeMathMock.sol#75-77) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 79,
          "vulnerability_to_line": 81,
          "vulnerability_code": "  function div(uint256 a, uint256 b) public pure returns (uint256) {\n\n    return SafeMath.div(a, b);\n",
          "message": "SafeMathMock.div (SafeMathMock.sol#79-81) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 83,
          "vulnerability_to_line": 85,
          "vulnerability_code": "  function sub(uint256 a, uint256 b) public pure returns (uint256) {\n\n    return SafeMath.sub(a, b);\n",
          "message": "SafeMathMock.sub (SafeMathMock.sol#83-85) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 87,
          "vulnerability_to_line": 89,
          "vulnerability_code": "  function add(uint256 a, uint256 b) public pure returns (uint256) {\n\n    return SafeMath.add(a, b);\n",
          "message": "SafeMathMock.add (SafeMathMock.sol#87-89) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 91,
          "vulnerability_to_line": 93,
          "vulnerability_code": "  function mod(uint256 a, uint256 b) public pure returns (uint256) {\n\n    return SafeMath.mod(a, b);\n",
          "message": "SafeMathMock.mod (SafeMathMock.sol#91-93) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}