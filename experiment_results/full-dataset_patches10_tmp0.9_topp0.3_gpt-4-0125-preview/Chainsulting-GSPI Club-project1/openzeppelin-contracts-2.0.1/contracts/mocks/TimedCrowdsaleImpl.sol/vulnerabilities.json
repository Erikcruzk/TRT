{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter += 1;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // The counter starts at one to prevent changing it from zero to a non-zero\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 196,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // value, which is a more expensive operation.\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter = 1;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 277,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(rate > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 278,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(wallet != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 279,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(token != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 280,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 281,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _rate = rate;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 282,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _wallet = wallet;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _token = token;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 284,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 487,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // solium-disable-next-line security/no-block-members\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 488,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(openingTime >= block.timestamp);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 489,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(closingTime > openingTime);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 490,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 491,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _openingTime = openingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 492,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _closingTime = closingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 493,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 551,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 552,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 openingTime,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 553,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 closingTime,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 554,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 rate,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address wallet,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 556,
          "vulnerability_to_line": null,
          "vulnerability_code": "    IERC20 token\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 557,
          "vulnerability_to_line": null,
          "vulnerability_code": "  )\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 558,
          "vulnerability_to_line": null,
          "vulnerability_code": "    public\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 559,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Crowdsale(rate, wallet, token)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 560,
          "vulnerability_to_line": null,
          "vulnerability_code": "    TimedCrowdsale(openingTime, closingTime)\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_28"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.rate (local variable @ TimedCrowdsaleImpl.sol#276) shadows:\n\t- Crowdsale.rate (function @ TimedCrowdsaleImpl.sol#317-320)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.wallet (local variable @ TimedCrowdsaleImpl.sol#276) shadows:\n\t- Crowdsale.wallet (function @ TimedCrowdsaleImpl.sol#310-313)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.token (local variable @ TimedCrowdsaleImpl.sol#276) shadows:\n\t- Crowdsale.token (function @ TimedCrowdsaleImpl.sol#303-306)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.openingTime (local variable @ TimedCrowdsaleImpl.sol#486) shadows:\n\t- TimedCrowdsale.openingTime (function @ TimedCrowdsaleImpl.sol#498-501)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.closingTime (local variable @ TimedCrowdsaleImpl.sol#486) shadows:\n\t- TimedCrowdsale.closingTime (function @ TimedCrowdsaleImpl.sol#505-508)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 552,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 openingTime,\n",
          "message": "TimedCrowdsaleImpl.constructor.openingTime (local variable @ TimedCrowdsaleImpl.sol#552) shadows:\n\t- TimedCrowdsale.openingTime (function @ TimedCrowdsaleImpl.sol#498-501)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 553,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 closingTime,\n",
          "message": "TimedCrowdsaleImpl.constructor.closingTime (local variable @ TimedCrowdsaleImpl.sol#553) shadows:\n\t- TimedCrowdsale.closingTime (function @ TimedCrowdsaleImpl.sol#505-508)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 554,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 rate,\n",
          "message": "TimedCrowdsaleImpl.constructor.rate (local variable @ TimedCrowdsaleImpl.sol#554) shadows:\n\t- Crowdsale.rate (function @ TimedCrowdsaleImpl.sol#317-320)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address wallet,\n",
          "message": "TimedCrowdsaleImpl.constructor.wallet (local variable @ TimedCrowdsaleImpl.sol#555) shadows:\n\t- Crowdsale.wallet (function @ TimedCrowdsaleImpl.sol#310-313)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 556,
          "vulnerability_to_line": 557,
          "vulnerability_code": "    IERC20 token\n",
          "message": "TimedCrowdsaleImpl.constructor.token (local variable @ TimedCrowdsaleImpl.sol#556-557) shadows:\n\t- Crowdsale.token (function @ TimedCrowdsaleImpl.sol#303-306)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 486,
          "vulnerability_to_line": 494,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n\n    // solium-disable-next-line security/no-block-members\n\n    require(openingTime >= block.timestamp);\n\n    require(closingTime > openingTime);\n\n\n\n    _openingTime = openingTime;\n\n    _closingTime = closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.constructor (TimedCrowdsaleImpl.sol#486-494) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(openingTime >= block.timestamp) (TimedCrowdsaleImpl.sol#488)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 512,
          "vulnerability_to_line": 516,
          "vulnerability_code": "  function isOpen() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.isOpen (TimedCrowdsaleImpl.sol#512-516) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= _openingTime && block.timestamp <= _closingTime (TimedCrowdsaleImpl.sol#514)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 521,
          "vulnerability_to_line": 525,
          "vulnerability_code": "  function hasClosed() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp > _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.hasClosed (TimedCrowdsaleImpl.sol#521-525) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > _closingTime (TimedCrowdsaleImpl.sol#523)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 303,
          "vulnerability_to_line": 306,
          "vulnerability_code": "  function token() public view returns(IERC20) {\n\n    return _token;\n\n  }\n",
          "message": "Crowdsale.token (TimedCrowdsaleImpl.sol#303-306) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 310,
          "vulnerability_to_line": 313,
          "vulnerability_code": "  function wallet() public view returns(address) {\n\n    return _wallet;\n\n  }\n",
          "message": "Crowdsale.wallet (TimedCrowdsaleImpl.sol#310-313) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 317,
          "vulnerability_to_line": 320,
          "vulnerability_code": "  function rate() public view returns(uint256) {\n\n    return _rate;\n\n  }\n",
          "message": "Crowdsale.rate (TimedCrowdsaleImpl.sol#317-320) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 324,
          "vulnerability_to_line": 327,
          "vulnerability_code": "  function weiRaised() public view returns (uint256) {\n\n    return _weiRaised;\n\n  }\n",
          "message": "Crowdsale.weiRaised (TimedCrowdsaleImpl.sol#324-327) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 498,
          "vulnerability_to_line": 501,
          "vulnerability_code": "  function openingTime() public view returns(uint256) {\n\n    return _openingTime;\n\n  }\n",
          "message": "TimedCrowdsale.openingTime (TimedCrowdsaleImpl.sol#498-501) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 505,
          "vulnerability_to_line": 508,
          "vulnerability_code": "  function closingTime() public view returns(uint256) {\n\n    return _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.closingTime (TimedCrowdsaleImpl.sol#505-508) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 521,
          "vulnerability_to_line": 525,
          "vulnerability_code": "  function hasClosed() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp > _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.hasClosed (TimedCrowdsaleImpl.sol#521-525) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 371,
          "vulnerability_to_line": 381,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    require(beneficiary != address(0));\n\n    require(weiAmount != 0);\n\n  }\n",
          "message": "Function 'Crowdsale._preValidatePurchase' (TimedCrowdsaleImpl.sol#371-381) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 387,
          "vulnerability_to_line": 396,
          "vulnerability_code": "  function _postValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._postValidatePurchase' (TimedCrowdsaleImpl.sol#387-396) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 402,
          "vulnerability_to_line": 410,
          "vulnerability_code": "  function _deliverTokens(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _token.safeTransfer(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._deliverTokens' (TimedCrowdsaleImpl.sol#402-410) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 416,
          "vulnerability_to_line": 424,
          "vulnerability_code": "  function _processPurchase(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _deliverTokens(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._processPurchase' (TimedCrowdsaleImpl.sol#416-424) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": 438,
          "vulnerability_code": "  function _updatePurchasingState(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._updatePurchasingState' (TimedCrowdsaleImpl.sol#430-438) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 444,
          "vulnerability_to_line": 449,
          "vulnerability_code": "  function _getTokenAmount(uint256 weiAmount)\n\n    internal view returns (uint256)\n\n  {\n\n    return weiAmount.mul(_rate);\n\n  }\n",
          "message": "Function 'Crowdsale._getTokenAmount' (TimedCrowdsaleImpl.sol#444-449) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 453,
          "vulnerability_to_line": 456,
          "vulnerability_code": "  function _forwardFunds() internal {\n\n    _wallet.transfer(msg.value);\n\n  }\n",
          "message": "Function 'Crowdsale._forwardFunds' (TimedCrowdsaleImpl.sol#453-456) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 531,
          "vulnerability_to_line": 541,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    onlyWhileOpen\n\n    view\n\n  {\n\n    super._preValidatePurchase(beneficiary, weiAmount);\n\n  }\n",
          "message": "Function 'TimedCrowdsale._preValidatePurchase' (TimedCrowdsaleImpl.sol#531-541) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 181,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 460,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 546,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 192,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _guardCounter;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "  IERC20 private _token;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 243,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _wallet;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _rate;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _weiRaised;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 470,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _openingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 471,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _closingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 119,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Dependence on predictable environment variable (SWC 116)",
          "vulnerability_from_line": 488,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(openingTime >= block.timestamp);\n",
          "message": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-116"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 116)",
          "vulnerability_from_line": 514,
          "vulnerability_to_line": null,
          "vulnerability_code": "    return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\n",
          "message": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-116"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 116)",
          "vulnerability_from_line": 477,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(isOpen());\n",
          "message": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-116"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter += 1;\n",
          "message": null
        }
      ]
    }
  }
}