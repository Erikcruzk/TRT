{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "erc20-interface",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 45,
          "vulnerability_code": "contract IERC721 is IERC165 {\n\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n\n\n    function balanceOf(address owner) public view returns (uint256 balance);\n\n    function ownerOf(uint256 tokenId) public view returns (address owner);\n\n\n\n    function approve(address to, uint256 tokenId) public;\n\n    function getApproved(uint256 tokenId) public view returns (address operator);\n\n\n\n    function setApprovalForAll(address operator, bool _approved) public;\n\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\n\n\n\n    function transferFrom(address from, address to, uint256 tokenId) public;\n\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\n\n\n\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\n",
          "message": "IERC721 (IERC721.sol#27-45) has incorrect ERC20 function interface(s):\n\t-approve (IERC721.sol#35)\n\t-transferFrom (IERC721.sol#41)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address owner) public view returns (uint256 balance);\n",
          "message": "IERC721.balanceOf (IERC721.sol#32) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function ownerOf(uint256 tokenId) public view returns (address owner);\n",
          "message": "IERC721.ownerOf (IERC721.sol#33) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approve(address to, uint256 tokenId) public;\n",
          "message": "IERC721.approve (IERC721.sol#35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getApproved(uint256 tokenId) public view returns (address operator);\n",
          "message": "IERC721.getApproved (IERC721.sol#36) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setApprovalForAll(address operator, bool _approved) public;\n",
          "message": "IERC721.setApprovalForAll (IERC721.sol#38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isApprovedForAll(address owner, address operator) public view returns (bool);\n",
          "message": "IERC721.isApprovedForAll (IERC721.sol#39) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address from, address to, uint256 tokenId) public;\n",
          "message": "IERC721.transferFrom (IERC721.sol#41) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function safeTransferFrom(address from, address to, uint256 tokenId) public;\n",
          "message": "IERC721.safeTransferFrom (IERC721.sol#42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\n",
          "message": "IERC721.safeTransferFrom (IERC721.sol#44) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}