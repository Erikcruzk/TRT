{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assert(\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "            IMPLEMENTATION_SLOT ==\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "                keccak256(\"org.zeppelinos.proxy.implementation\")\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _setImplementation(_implementation);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 114,
          "vulnerability_to_line": null,
          "vulnerability_code": "        public\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "        UpgradeabilityProxy(_implementation)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 116,
          "vulnerability_to_line": null,
          "vulnerability_code": "    {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 117,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assert(ADMIN_SLOT == keccak256(\"org.zeppelinos.proxy.admin\"));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 118,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 119,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _setAdmin(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 120,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 220,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 221,
          "vulnerability_to_line": null,
          "vulnerability_code": "        public\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 222,
          "vulnerability_to_line": null,
          "vulnerability_code": "        AdminUpgradeabilityProxy(_implementation)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 223,
          "vulnerability_to_line": null,
          "vulnerability_code": "    {}\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 83,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "            AddressUtils.isContract(newImplementation),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot set a proxy implementation to a non-contract address\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 86,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 135,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != address(0),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 137,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot change the admin of a proxy to the zero address\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 138,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 140,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != _admin(),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 141,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"The current and new admin cannot be the same .\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 142,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 143,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 144,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != _pendingAdmin(),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 145,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot set the newAdmin of a proxy to the same address .\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 146,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 154,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != address(0),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 155,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot change the admin of a proxy to the zero address\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 156,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 157,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 158,
          "vulnerability_to_line": null,
          "vulnerability_code": "            msg.sender == _newAdmin,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 159,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"msg.sender and newAdmin must be the same .\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 160,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 177,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(success, \"upgradeToAndCall-error\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 211,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 212,
          "vulnerability_to_line": null,
          "vulnerability_code": "            msg.sender != _admin(),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 213,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot call fallback function from the proxy admin\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 214,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 83,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "            AddressUtils.isContract(newImplementation),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot set a proxy implementation to a non-contract address\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 86,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 135,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != address(0),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 137,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot change the admin of a proxy to the zero address\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 138,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 140,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != _admin(),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 141,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"The current and new admin cannot be the same .\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 142,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 143,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 144,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != _pendingAdmin(),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 145,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot set the newAdmin of a proxy to the same address .\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 146,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 154,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _newAdmin != address(0),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 155,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot change the admin of a proxy to the zero address\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 156,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 157,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 158,
          "vulnerability_to_line": null,
          "vulnerability_code": "            msg.sender == _newAdmin,\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 159,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"msg.sender and newAdmin must be the same .\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 160,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 211,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 212,
          "vulnerability_to_line": null,
          "vulnerability_code": "            msg.sender != _admin(),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 213,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Cannot call fallback function from the proxy admin\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 214,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_31"
      ],
      "vulnerability_findings": [
        {
          "name": "constant-function",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function isContract(address addr) internal view returns (bool) {\n\n        uint256 size;\n\n\n\n        assembly {\n\n            size := extcodesize(addr)\n\n        }\n\n        return size > 0;\n",
          "message": "AddressUtils.isContract (DFProxy.sol#45-52) is declared view but contains assembly code\n"
        },
        {
          "name": "constant-function",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": 75,
          "vulnerability_code": "    function _implementation() internal view returns (address impl) {\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n        assembly {\n\n            impl := sload(slot)\n\n        }\n",
          "message": "UpgradeabilityProxy._implementation (DFProxy.sol#70-75) is declared view but contains assembly code\n"
        },
        {
          "name": "constant-function",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": 185,
          "vulnerability_code": "    function _admin() internal view returns (address adm) {\n\n        bytes32 slot = ADMIN_SLOT;\n\n        assembly {\n\n            adm := sload(slot)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._admin (DFProxy.sol#180-185) is declared view but contains assembly code\n"
        },
        {
          "name": "constant-function",
          "vulnerability_from_line": 187,
          "vulnerability_to_line": 192,
          "vulnerability_code": "    function _pendingAdmin() internal view returns (address pendingAdm) {\n\n        bytes32 slot = PENDING_ADMIN_SLOT;\n\n        assembly {\n\n            pendingAdm := sload(slot)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._pendingAdmin (DFProxy.sol#187-192) is declared view but contains assembly code\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation) public {\n",
          "message": "UpgradeabilityProxy.constructor._implementation (local variable @ DFProxy.sol#61) shadows:\n\t- UpgradeabilityProxy._implementation (function @ DFProxy.sol#70-75)\n\t- Proxy._implementation (function @ DFProxy.sol#10)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation)\n",
          "message": "AdminUpgradeabilityProxy.constructor._implementation (local variable @ DFProxy.sol#113) shadows:\n\t- UpgradeabilityProxy._implementation (function @ DFProxy.sol#70-75)\n\t- Proxy._implementation (function @ DFProxy.sol#10)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 220,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation)\n",
          "message": "DFProxy.constructor._implementation (local variable @ DFProxy.sol#220) shadows:\n\t- UpgradeabilityProxy._implementation (function @ DFProxy.sol#70-75)\n\t- Proxy._implementation (function @ DFProxy.sol#10)\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 34,
          "vulnerability_code": "    function _delegate(address implementation) internal {\n\n        assembly {\n\n            calldatacopy(0, 0, calldatasize)\n\n\n\n            let result := delegatecall(\n\n                gas,\n\n                implementation,\n\n                0,\n\n                calldatasize,\n\n                0,\n\n                0\n\n            )\n\n            returndatacopy(0, 0, returndatasize)\n\n\n\n            switch result\n\n                case 0 {\n\n                    revert(0, returndatasize)\n\n                }\n\n                default {\n\n                    return(0, returndatasize)\n\n                }\n\n        }\n",
          "message": "Proxy._delegate uses assembly (DFProxy.sol#12-34)\n\t- DFProxy.sol#13-33\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function isContract(address addr) internal view returns (bool) {\n\n        uint256 size;\n\n\n\n        assembly {\n\n            size := extcodesize(addr)\n\n        }\n\n        return size > 0;\n",
          "message": "AddressUtils.isContract uses assembly (DFProxy.sol#45-52)\n\t- DFProxy.sol#48-50\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": 75,
          "vulnerability_code": "    function _implementation() internal view returns (address impl) {\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n        assembly {\n\n            impl := sload(slot)\n\n        }\n",
          "message": "UpgradeabilityProxy._implementation uses assembly (DFProxy.sol#70-75)\n\t- DFProxy.sol#72-74\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": 93,
          "vulnerability_code": "    function _setImplementation(address newImplementation) private {\n\n        require(\n\n            AddressUtils.isContract(newImplementation),\n\n            \"Cannot set a proxy implementation to a non-contract address\"\n\n        );\n\n\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, newImplementation)\n\n        }\n",
          "message": "UpgradeabilityProxy._setImplementation uses assembly (DFProxy.sol#82-93)\n\t- DFProxy.sol#90-92\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": 185,
          "vulnerability_code": "    function _admin() internal view returns (address adm) {\n\n        bytes32 slot = ADMIN_SLOT;\n\n        assembly {\n\n            adm := sload(slot)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._admin uses assembly (DFProxy.sol#180-185)\n\t- DFProxy.sol#182-184\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 187,
          "vulnerability_to_line": 192,
          "vulnerability_code": "    function _pendingAdmin() internal view returns (address pendingAdm) {\n\n        bytes32 slot = PENDING_ADMIN_SLOT;\n\n        assembly {\n\n            pendingAdm := sload(slot)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._pendingAdmin uses assembly (DFProxy.sol#187-192)\n\t- DFProxy.sol#189-191\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": 200,
          "vulnerability_code": "    function _setAdmin(address newAdmin) internal {\n\n        bytes32 slot = ADMIN_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, newAdmin)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._setAdmin uses assembly (DFProxy.sol#194-200)\n\t- DFProxy.sol#197-199\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 202,
          "vulnerability_to_line": 208,
          "vulnerability_code": "    function _setPendingAdmin(address pendingAdm) internal {\n\n        bytes32 slot = PENDING_ADMIN_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, pendingAdm)\n\n        }\n",
          "message": "AdminUpgradeabilityProxy._setPendingAdmin uses assembly (DFProxy.sol#202-208)\n\t- DFProxy.sol#205-207\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 170,
          "vulnerability_to_line": 178,
          "vulnerability_code": "    function upgradeToAndCall(address newImplementation, bytes calldata data)\n\n        external\n\n        payable\n\n        ifAdmin\n\n    {\n\n        _upgradeTo(newImplementation);\n\n        (bool success, ) = address(this).call.value(msg.value)(data);\n\n        require(success, \"upgradeToAndCall-error\");\n",
          "message": "Low level call in AdminUpgradeabilityProxy.upgradeToAndCall (DFProxy.sol#170-178):\n\t-(success) = address(this).call.value(msg.value)(data) DFProxy.sol#176\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _implementation() internal view returns (address);\n",
          "message": "Function 'Proxy._implementation' (DFProxy.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 34,
          "vulnerability_code": "    function _delegate(address implementation) internal {\n\n        assembly {\n\n            calldatacopy(0, 0, calldatasize)\n\n\n\n            let result := delegatecall(\n\n                gas,\n\n                implementation,\n\n                0,\n\n                calldatasize,\n\n                0,\n\n                0\n\n            )\n\n            returndatacopy(0, 0, returndatasize)\n\n\n\n            switch result\n\n                case 0 {\n\n                    revert(0, returndatasize)\n\n                }\n\n                default {\n\n                    return(0, returndatasize)\n\n                }\n\n        }\n",
          "message": "Function 'Proxy._delegate' (DFProxy.sol#12-34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _willFallback() internal {}\n",
          "message": "Function 'Proxy._willFallback' (DFProxy.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 41,
          "vulnerability_code": "    function _fallback() internal {\n\n        _willFallback();\n\n        _delegate(_implementation());\n",
          "message": "Function 'Proxy._fallback' (DFProxy.sol#38-41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": 75,
          "vulnerability_code": "    function _implementation() internal view returns (address impl) {\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n        assembly {\n\n            impl := sload(slot)\n\n        }\n",
          "message": "Function 'UpgradeabilityProxy._implementation' (DFProxy.sol#70-75) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _implementation) public {\n",
          "message": "Parameter '_implementation' of UpgradeabilityProxy. (DFProxy.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": 80,
          "vulnerability_code": "    function _upgradeTo(address newImplementation) internal {\n\n        _setImplementation(newImplementation);\n\n        emit Upgraded(newImplementation);\n",
          "message": "Function 'UpgradeabilityProxy._upgradeTo' (DFProxy.sol#77-80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": 93,
          "vulnerability_code": "    function _setImplementation(address newImplementation) private {\n\n        require(\n\n            AddressUtils.isContract(newImplementation),\n\n            \"Cannot set a proxy implementation to a non-contract address\"\n\n        );\n\n\n\n        bytes32 slot = IMPLEMENTATION_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, newImplementation)\n\n        }\n",
          "message": "Function 'UpgradeabilityProxy._setImplementation' (DFProxy.sol#82-93) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": 216,
          "vulnerability_code": "    function _willFallback() internal {\n\n        require(\n\n            msg.sender != _admin(),\n\n            \"Cannot call fallback function from the proxy admin\"\n\n        );\n\n        super._willFallback();\n",
          "message": "Function 'AdminUpgradeabilityProxy._willFallback' (DFProxy.sol#210-216) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 134,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function changeAdmin(address _newAdmin) external ifAdmin {\n",
          "message": "Parameter '_newAdmin' of AdminUpgradeabilityProxy.changeAdmin (DFProxy.sol#134) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": 185,
          "vulnerability_code": "    function _admin() internal view returns (address adm) {\n\n        bytes32 slot = ADMIN_SLOT;\n\n        assembly {\n\n            adm := sload(slot)\n\n        }\n",
          "message": "Function 'AdminUpgradeabilityProxy._admin' (DFProxy.sol#180-185) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 187,
          "vulnerability_to_line": 192,
          "vulnerability_code": "    function _pendingAdmin() internal view returns (address pendingAdm) {\n\n        bytes32 slot = PENDING_ADMIN_SLOT;\n\n        assembly {\n\n            pendingAdm := sload(slot)\n\n        }\n",
          "message": "Function 'AdminUpgradeabilityProxy._pendingAdmin' (DFProxy.sol#187-192) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": 200,
          "vulnerability_code": "    function _setAdmin(address newAdmin) internal {\n\n        bytes32 slot = ADMIN_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, newAdmin)\n\n        }\n",
          "message": "Function 'AdminUpgradeabilityProxy._setAdmin' (DFProxy.sol#194-200) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 202,
          "vulnerability_to_line": 208,
          "vulnerability_code": "    function _setPendingAdmin(address pendingAdm) internal {\n\n        bytes32 slot = PENDING_ADMIN_SLOT;\n\n\n\n        assembly {\n\n            sstore(slot, pendingAdm)\n\n        }\n",
          "message": "Function 'AdminUpgradeabilityProxy._setPendingAdmin' (DFProxy.sol#202-208) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 226,
          "vulnerability_to_line": 228,
          "vulnerability_code": "    function DFImplementation() external view returns (address) {\n\n        return _implementation();\n",
          "message": "Function 'DFProxy.DFImplementation' (DFProxy.sol#226-228) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 162,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _setPendingAdmin(address(0));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _implementation() internal view returns (address impl) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _admin() internal view returns (address adm) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 187,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _pendingAdmin() internal view returns (address pendingAdm) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_LOCKED_MONEY",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract Proxy {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "        private constant IMPLEMENTATION_SLOT = 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 101,
          "vulnerability_to_line": null,
          "vulnerability_code": "        private constant ADMIN_SLOT = 0x10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 103,
          "vulnerability_to_line": null,
          "vulnerability_code": "        private constant PENDING_ADMIN_SLOT = 0x54ac2bd5363dfe95a011c5b5a153968d77d153d212e900afce8624fdad74525c;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isContract(address addr) internal view returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _implementation() internal view returns (address impl) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _admin() internal view returns (address adm) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 187,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _pendingAdmin() internal view returns (address pendingAdm) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, ) = address(this).call.value(msg.value)(data);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 182,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 189,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHL) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}