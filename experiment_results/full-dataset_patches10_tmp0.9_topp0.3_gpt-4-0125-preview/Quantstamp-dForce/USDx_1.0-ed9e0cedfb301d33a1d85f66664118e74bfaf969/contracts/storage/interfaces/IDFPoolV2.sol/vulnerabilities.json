{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_9"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferOut(address _tokenID, address _to, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferOut (IDFPoolV2.sol#6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferOutSrc(address _tokenID, address _to, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferOutSrc (IDFPoolV2.sol#7) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFromSender(address _tokenID, address _from, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferFromSender (IDFPoolV2.sol#8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFromSenderOneClick(address _tokenID, address _from, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferFromSenderOneClick (IDFPoolV2.sol#9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferToCol(address _tokenID, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferToCol (IDFPoolV2.sol#10) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFromSenderToCol(address _tokenID, address _from, uint _amount) public returns (bool);\n",
          "message": "IDFPoolV2.transferFromSenderToCol (IDFPoolV2.sol#11) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approveToEngine(address _tokenIdx, address _engineAddress) public;\n",
          "message": "IDFPoolV2.approveToEngine (IDFPoolV2.sol#12) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getInterestByXToken(address _xToken) public returns (address, uint256);\n",
          "message": "IDFPoolV2.getInterestByXToken (IDFPoolV2.sol#13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getUnderlying(address _underlying) public returns (uint256);\n",
          "message": "IDFPoolV2.getUnderlying (IDFPoolV2.sol#14) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getInterestByXToken(address _xToken) public returns (address, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}