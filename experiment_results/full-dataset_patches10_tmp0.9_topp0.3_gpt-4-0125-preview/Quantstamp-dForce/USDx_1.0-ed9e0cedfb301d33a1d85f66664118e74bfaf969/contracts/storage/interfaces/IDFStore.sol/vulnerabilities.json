{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_52"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionMinted(uint _position) public view returns (uint);\n",
          "message": "IDFStore.getSectionMinted (IDFStore.sol#7) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addSectionMinted(uint _amount) public;\n",
          "message": "IDFStore.addSectionMinted (IDFStore.sol#8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addSectionMinted(uint _position, uint _amount) public;\n",
          "message": "IDFStore.addSectionMinted (IDFStore.sol#9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setSectionMinted(uint _amount) public;\n",
          "message": "IDFStore.setSectionMinted (IDFStore.sol#10) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setSectionMinted(uint _position, uint _amount) public;\n",
          "message": "IDFStore.setSectionMinted (IDFStore.sol#11) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionBurned(uint _position) public view returns (uint);\n",
          "message": "IDFStore.getSectionBurned (IDFStore.sol#13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addSectionBurned(uint _amount) public;\n",
          "message": "IDFStore.addSectionBurned (IDFStore.sol#14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addSectionBurned(uint _position, uint _amount) public;\n",
          "message": "IDFStore.addSectionBurned (IDFStore.sol#15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setSectionBurned(uint _amount) public;\n",
          "message": "IDFStore.setSectionBurned (IDFStore.sol#16) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setSectionBurned(uint _position, uint _amount) public;\n",
          "message": "IDFStore.setSectionBurned (IDFStore.sol#17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionToken(uint _position) public view returns (address[] memory);\n",
          "message": "IDFStore.getSectionToken (IDFStore.sol#19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionWeight(uint _position) public view returns (uint[] memory);\n",
          "message": "IDFStore.getSectionWeight (IDFStore.sol#20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionData(uint _position) public view returns (uint, uint, uint, address[] memory, uint[] memory);\n",
          "message": "IDFStore.getSectionData (IDFStore.sol#21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getBackupSectionData(uint _position) public view returns (uint, address[] memory, uint[] memory);\n",
          "message": "IDFStore.getBackupSectionData (IDFStore.sol#22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getBackupSectionIndex(uint _position) public view returns (uint);\n",
          "message": "IDFStore.getBackupSectionIndex (IDFStore.sol#23) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setBackupSectionIndex(uint _position, uint _backupIdx) public;\n",
          "message": "IDFStore.setBackupSectionIndex (IDFStore.sol#24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setSection(address[] memory _wrappedTokens, uint[] memory _weight) public;\n",
          "message": "IDFStore.setSection (IDFStore.sol#26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setBackupSection(uint _position, address[] memory _tokens, uint[] memory _weight) public;\n",
          "message": "IDFStore.setBackupSection (IDFStore.sol#27) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function burnSectionMoveon() public;\n",
          "message": "IDFStore.burnSectionMoveon (IDFStore.sol#28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getMintingToken(address _token) public view returns (bool);\n",
          "message": "IDFStore.getMintingToken (IDFStore.sol#30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMintingToken(address _token, bool _flag) public;\n",
          "message": "IDFStore.setMintingToken (IDFStore.sol#31) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getMintedToken(address _token) public view returns (bool);\n",
          "message": "IDFStore.getMintedToken (IDFStore.sol#32) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMintedToken(address _token, bool _flag) public;\n",
          "message": "IDFStore.setMintedToken (IDFStore.sol#33) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getBackupToken(address _token) public view returns (address);\n",
          "message": "IDFStore.getBackupToken (IDFStore.sol#34) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setBackupToken(address _token, address _backupToken) public;\n",
          "message": "IDFStore.setBackupToken (IDFStore.sol#35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getMintedTokenList() public view returns (address[] memory);\n",
          "message": "IDFStore.getMintedTokenList (IDFStore.sol#36) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getMintPosition() public view returns (uint);\n",
          "message": "IDFStore.getMintPosition (IDFStore.sol#38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getBurnPosition() public view returns (uint);\n",
          "message": "IDFStore.getBurnPosition (IDFStore.sol#39) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTotalMinted() public view returns (uint);\n",
          "message": "IDFStore.getTotalMinted (IDFStore.sol#41) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addTotalMinted(uint _amount) public;\n",
          "message": "IDFStore.addTotalMinted (IDFStore.sol#42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTotalMinted(uint _amount) public;\n",
          "message": "IDFStore.setTotalMinted (IDFStore.sol#43) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTotalBurned() public view returns (uint);\n",
          "message": "IDFStore.getTotalBurned (IDFStore.sol#44) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addTotalBurned(uint _amount) public;\n",
          "message": "IDFStore.addTotalBurned (IDFStore.sol#45) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTotalBurned(uint _amount) public;\n",
          "message": "IDFStore.setTotalBurned (IDFStore.sol#46) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getMinBurnAmount() public view returns (uint);\n",
          "message": "IDFStore.getMinBurnAmount (IDFStore.sol#47) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMinBurnAmount(uint _amount) public;\n",
          "message": "IDFStore.setMinBurnAmount (IDFStore.sol#48) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTokenBalance(address _tokenID) public view returns (uint);\n",
          "message": "IDFStore.getTokenBalance (IDFStore.sol#50) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTokenBalance(address _tokenID, uint _amount) public;\n",
          "message": "IDFStore.setTokenBalance (IDFStore.sol#51) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getResUSDXBalance(address _tokenID) public view returns (uint);\n",
          "message": "IDFStore.getResUSDXBalance (IDFStore.sol#52) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setResUSDXBalance(address _tokenID, uint _amount) public;\n",
          "message": "IDFStore.setResUSDXBalance (IDFStore.sol#53) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getDepositorBalance(address _depositor, address _tokenID) public view returns (uint);\n",
          "message": "IDFStore.getDepositorBalance (IDFStore.sol#54) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setDepositorBalance(address _depositor, address _tokenID, uint _amount) public;\n",
          "message": "IDFStore.setDepositorBalance (IDFStore.sol#55) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getFeeRate(uint ct) public view returns (uint);\n",
          "message": "IDFStore.getFeeRate (IDFStore.sol#57) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setFeeRate(uint ct, uint rate) public;\n",
          "message": "IDFStore.setFeeRate (IDFStore.sol#58) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTypeToken(uint tt) public view returns (address);\n",
          "message": "IDFStore.getTypeToken (IDFStore.sol#59) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTypeToken(uint tt, address _tokenID) public;\n",
          "message": "IDFStore.setTypeToken (IDFStore.sol#60) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTokenMedian(address _tokenID) public view returns (address);\n",
          "message": "IDFStore.getTokenMedian (IDFStore.sol#61) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTokenMedian(address _tokenID, address _median) public;\n",
          "message": "IDFStore.setTokenMedian (IDFStore.sol#62) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTotalCol(uint _amount) public;\n",
          "message": "IDFStore.setTotalCol (IDFStore.sol#64) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getTotalCol() public view returns (uint);\n",
          "message": "IDFStore.getTotalCol (IDFStore.sol#65) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setWrappedToken(address _srcToken, address _wrappedToken) public;\n",
          "message": "IDFStore.setWrappedToken (IDFStore.sol#67) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getWrappedToken(address _srcToken) public view returns (address);\n",
          "message": "IDFStore.getWrappedToken (IDFStore.sol#68) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getSectionData(uint _position) public view returns (uint, uint, uint, address[] memory, uint[] memory);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getBackupSectionData(uint _position) public view returns (uint, address[] memory, uint[] memory);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}