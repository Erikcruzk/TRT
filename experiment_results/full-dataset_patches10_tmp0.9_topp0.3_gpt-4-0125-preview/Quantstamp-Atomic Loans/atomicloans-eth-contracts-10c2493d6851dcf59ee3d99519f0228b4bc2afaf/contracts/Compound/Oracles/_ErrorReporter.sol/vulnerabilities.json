{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_2"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.10;\n",
          "message": "Detected issues with version pragma in _ErrorReporter.sol:\n\t- pragma solidity^0.5.10 (_ErrorReporter.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": 152,
          "vulnerability_code": "contract _ErrorReporter {\n\n\n\n    /**\n\n      * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\n\n      * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\n\n      **/\n\n    event Failure(uint error, uint info, uint detail);\n\n\n\n    enum Error {\n\n        NO_ERROR,\n\n        OPAQUE_ERROR, // To be used when reporting errors from upgradeable contracts; the opaque code should be given as `detail` in the `Failure` event\n\n        UNAUTHORIZED,\n\n        INTEGER_OVERFLOW,\n\n        INTEGER_UNDERFLOW,\n\n        DIVISION_BY_ZERO,\n\n        BAD_INPUT,\n\n        TOKEN_INSUFFICIENT_ALLOWANCE,\n\n        TOKEN_INSUFFICIENT_BALANCE,\n\n        TOKEN_TRANSFER_FAILED,\n\n        MARKET_NOT_SUPPORTED,\n\n        SUPPLY_RATE_CALCULATION_FAILED,\n\n        BORROW_RATE_CALCULATION_FAILED,\n\n        TOKEN_INSUFFICIENT_CASH,\n\n        TOKEN_TRANSFER_OUT_FAILED,\n\n        INSUFFICIENT_LIQUIDITY,\n\n        INSUFFICIENT_BALANCE,\n\n        INVALID_COLLATERAL_RATIO,\n\n        MISSING_ASSET_PRICE,\n\n        EQUITY_INSUFFICIENT_BALANCE,\n\n        INVALID_CLOSE_AMOUNT_REQUESTED,\n\n        ASSET_NOT_PRICED,\n\n        INVALID_LIQUIDATION_DISCOUNT,\n\n        INVALID_COMBINED_RISK_PARAMETERS\n\n    }\n\n\n\n    /*\n\n     * Note: FailureInfo (but not Error) is kept in alphabetical order\n\n     *       This is because FailureInfo grows significantly faster, and\n\n     *       the order of Error has some meaning, while the order of FailureInfo\n\n     *       is entirely arbitrary.\n\n     */\n\n    enum FailureInfo {\n\n        BORROW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n\n        BORROW_ACCOUNT_SHORTFALL_PRESENT,\n\n        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n\n        BORROW_AMOUNT_LIQUIDITY_SHORTFALL,\n\n        BORROW_AMOUNT_VALUE_CALCULATION_FAILED,\n\n        BORROW_MARKET_NOT_SUPPORTED,\n\n        BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n\n        BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n\n        BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n\n        BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n\n        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n\n        BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n\n        BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n\n        BORROW_ORIGINATION_FEE_CALCULATION_FAILED,\n\n        BORROW_TRANSFER_OUT_FAILED,\n\n        EQUITY_WITHDRAWAL_AMOUNT_VALIDATION,\n\n        EQUITY_WITHDRAWAL_CALCULATE_EQUITY,\n\n        EQUITY_WITHDRAWAL_MODEL_OWNER_CHECK,\n\n        EQUITY_WITHDRAWAL_TRANSFER_OUT_FAILED,\n\n        LIQUIDATE_ACCUMULATED_BORROW_BALANCE_CALCULATION_FAILED,\n\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n\n        LIQUIDATE_AMOUNT_SEIZE_CALCULATION_FAILED,\n\n        LIQUIDATE_BORROW_DENOMINATED_COLLATERAL_CALCULATION_FAILED,\n\n        LIQUIDATE_CLOSE_AMOUNT_TOO_HIGH,\n\n        LIQUIDATE_DISCOUNTED_REPAY_TO_EVEN_AMOUNT_CALCULATION_FAILED,\n\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n\n        LIQUIDATE_NEW_BORROW_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n\n        LIQUIDATE_NEW_SUPPLY_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_TOTAL_BORROW_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_TOTAL_CASH_CALCULATION_FAILED_BORROWED_ASSET,\n\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n\n        LIQUIDATE_TRANSFER_IN_FAILED,\n\n        LIQUIDATE_TRANSFER_IN_NOT_POSSIBLE,\n\n        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n\n        REPAY_BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n\n        REPAY_BORROW_TRANSFER_IN_FAILED,\n\n        REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE,\n\n        SET_ADMIN_OWNER_CHECK,\n\n        SET_ASSET_PRICE_CHECK_ORACLE,\n\n        SET_MARKET_INTEREST_RATE_MODEL_OWNER_CHECK,\n\n        SET_ORACLE_OWNER_CHECK,\n\n        SET_ORIGINATION_FEE_OWNER_CHECK,\n\n        SET_RISK_PARAMETERS_OWNER_CHECK,\n\n        SET_RISK_PARAMETERS_VALIDATION,\n\n        SUPPLY_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n\n        SUPPLY_MARKET_NOT_SUPPORTED,\n\n        SUPPLY_NEW_BORROW_INDEX_CALCULATION_FAILED,\n\n        SUPPLY_NEW_BORROW_RATE_CALCULATION_FAILED,\n\n        SUPPLY_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n\n        SUPPLY_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n\n        SUPPLY_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n\n        SUPPLY_NEW_TOTAL_CASH_CALCULATION_FAILED,\n\n        SUPPLY_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n\n        SUPPLY_TRANSFER_IN_FAILED,\n\n        SUPPLY_TRANSFER_IN_NOT_POSSIBLE,\n\n        SUPPORT_MARKET_OWNER_CHECK,\n\n        SUPPORT_MARKET_PRICE_CHECK,\n\n        SUSPEND_MARKET_OWNER_CHECK,\n\n        WITHDRAW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n\n        WITHDRAW_ACCOUNT_SHORTFALL_PRESENT,\n\n        WITHDRAW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n\n        WITHDRAW_AMOUNT_LIQUIDITY_SHORTFALL,\n\n        WITHDRAW_AMOUNT_VALUE_CALCULATION_FAILED,\n\n        WITHDRAW_CAPACITY_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_BORROW_RATE_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n\n        WITHDRAW_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n\n        WITHDRAW_TRANSFER_OUT_FAILED,\n\n        WITHDRAW_TRANSFER_OUT_NOT_POSSIBLE\n\n    }\n\n\n\n\n\n    /**\n\n      * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\n\n      */\n\n    function fail(Error err, FailureInfo info) internal returns (uint) {\n\n        emit Failure(uint(err), uint(info), 0);\n\n\n\n        return uint(err);\n\n    }\n\n\n\n\n\n    /**\n\n      * @dev use this when reporting an opaque error from an upgradeable collaborator contract\n\n      */\n\n    function failOpaque(FailureInfo info, uint opaqueError) internal returns (uint) {\n\n        emit Failure(uint(Error.OPAQUE_ERROR), uint(info), opaqueError);\n\n\n\n        return uint(Error.OPAQUE_ERROR);\n\n    }\n\n\n",
          "message": "Contract '_ErrorReporter' (_ErrorReporter.sol#5-152) is not in CapWords\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.10;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}