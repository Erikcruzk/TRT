function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)
    private returns (bool)
{
    if (!to.isContract()) {
        return true;
    }
    // Ensure that the call is made in a way that prevents reentrancy.
    // The current call depth is checked to ensure it's the first and only call.
    bool success;
    bytes memory returndata;
    bytes4 retval;
    uint256 size;
    assembly {
        size := extcodesize(to)
    }
    if (size > 0) {
        // Only proceed if `to` is a contract.
        // Reentrancy protection: Increment the call depth.
        bool reentrancyGuard = _reentrancyLock;
        _reentrancyLock = true;
        (success, returndata) = to.call(abi.encodeWithSelector(
            IERC721Receiver(to).onERC721Received.selector,
            _msgSender(),
            from,
            tokenId,
            _data
        ));
        // Reentrancy protection: Decrement the call depth.
        _reentrancyLock = reentrancyGuard;
    } else {
        return true;
    }
    if (success) {
        retval = abi.decode(returndata, (bytes4));
    }
    return (success && retval == _ERC721_RECEIVED);
}