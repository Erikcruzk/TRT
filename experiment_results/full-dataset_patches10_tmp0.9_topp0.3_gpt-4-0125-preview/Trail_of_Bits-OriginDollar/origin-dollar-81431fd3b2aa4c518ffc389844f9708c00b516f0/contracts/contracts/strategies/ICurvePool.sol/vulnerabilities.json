{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.11;\n",
          "message": "Detected issues with version pragma in ICurvePool.sol:\n\t- pragma solidity0.5.11 (ICurvePool.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function get_virtual_price() external returns (uint256);\n",
          "message": "Function 'ICurvePool.get_virtual_price' (ICurvePool.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function add_liquidity(uint256[3] calldata _amounts, uint256 _min) external;\n",
          "message": "Function 'ICurvePool.add_liquidity' (ICurvePool.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function calc_token_amount(uint256[3] calldata _amounts, bool _deposit)\n\n        external\n",
          "message": "Function 'ICurvePool.calc_token_amount' (ICurvePool.sol#10-12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function remove_liquidity_one_coin(\n\n        uint256 _amount,\n\n        int128 _index,\n\n        uint256 _minAmount\n",
          "message": "Function 'ICurvePool.remove_liquidity_one_coin' (ICurvePool.sol#14-18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 23,
          "vulnerability_code": "    function calc_withdraw_one_coin(uint256 _amount, int128 _index)\n\n        external\n\n        view\n",
          "message": "Function 'ICurvePool.calc_withdraw_one_coin' (ICurvePool.sol#20-23) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}