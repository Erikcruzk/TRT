{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(msg.value == _value, \"Input value must match msg.value\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "locked-ether",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function checkOnlyWithValue(uint256 _value) public payable onlyWithValue(_value) {\n\n        emit OnlyWithValuePassed();\n",
          "message": "Contract locking ether found in OnlyWithValueMock.sol:\n\tContract OnlyWithValueMock has payable functions:\n\t - checkOnlyWithValue (OnlyWithValueMock.sol#19-21)\n\tBut does not have a function to withdraw the ether\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function checkOnlyWithValue(uint256 _value) public payable onlyWithValue(_value) {\n\n        emit OnlyWithValuePassed();\n",
          "message": "OnlyWithValueMock.checkOnlyWithValue (OnlyWithValueMock.sol#19-21) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.11;\n",
          "message": "Detected issues with version pragma in OnlyWithValueMock.sol:\n\t- pragma solidity0.5.11 (OnlyWithValueMock.sol#3): it allows old versions\n\t- pragma solidity0.5.11 (OnlyWithValueMock.sol#14): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_LOCKED_MONEY",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract OnlyWithValueMock is OnlyWithValue {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    }
  }
}