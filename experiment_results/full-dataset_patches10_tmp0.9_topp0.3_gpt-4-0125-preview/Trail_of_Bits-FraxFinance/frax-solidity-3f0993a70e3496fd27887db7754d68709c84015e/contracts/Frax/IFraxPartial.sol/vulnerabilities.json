{
  "smartbugs_completed": "No vulnerabilities found",
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_28"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.11;\n",
          "message": "Detected issues with version pragma in IFraxPartial.sol:\n\t- pragma solidity0.6.11 (IFraxPartial.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function owner_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.owner_address' (IFraxPartial.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function creator_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.creator_address' (IFraxPartial.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function timelock_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.timelock_address' (IFraxPartial.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function controller_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.controller_address' (IFraxPartial.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function fxs_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.fxs_address' (IFraxPartial.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_eth_oracle_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.frax_eth_oracle_address' (IFraxPartial.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function fxs_eth_oracle_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.fxs_eth_oracle_address' (IFraxPartial.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function weth_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.weth_address' (IFraxPartial.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function eth_usd_consumer_address() external returns (address);\n",
          "message": "Function 'IFraxPartial.eth_usd_consumer_address' (IFraxPartial.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function genesis_supply() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.genesis_supply' (IFraxPartial.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_pools_array() external returns (address[] memory);\n",
          "message": "Function 'IFraxPartial.frax_pools_array' (IFraxPartial.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_pools(address a) external returns (bool);\n",
          "message": "Function 'IFraxPartial.frax_pools' (IFraxPartial.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function global_collateral_ratio() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.global_collateral_ratio' (IFraxPartial.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redemption_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.redemption_fee' (IFraxPartial.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function minting_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.minting_fee' (IFraxPartial.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_step() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.frax_step' (IFraxPartial.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function refresh_cooldown() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.refresh_cooldown' (IFraxPartial.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function price_target() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.price_target' (IFraxPartial.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function price_band() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.price_band' (IFraxPartial.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function DEFAULT_ADMIN_ADDRESS() external returns (address);\n",
          "message": "Function 'IFraxPartial.DEFAULT_ADMIN_ADDRESS' (IFraxPartial.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function COLLATERAL_RATIO_PAUSER() external returns (bytes32);\n",
          "message": "Function 'IFraxPartial.COLLATERAL_RATIO_PAUSER' (IFraxPartial.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collateral_ratio_paused() external returns (bool);\n",
          "message": "Function 'IFraxPartial.collateral_ratio_paused' (IFraxPartial.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function last_call_time() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.last_call_time' (IFraxPartial.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_price() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.frax_price' (IFraxPartial.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function fxs_price()  external returns (uint256);\n",
          "message": "Function 'IFraxPartial.fxs_price' (IFraxPartial.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function eth_usd_price() external returns (uint256);\n",
          "message": "Function 'IFraxPartial.eth_usd_price' (IFraxPartial.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_info() external returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256);\n",
          "message": "Function 'IFraxPartial.frax_info' (IFraxPartial.sol#45) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function frax_info() external returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}