{
  "smartbugs_completed": "No vulnerabilities found",
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_39"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.11;\n",
          "message": "Different versions of Solidity is used in ILiquidityGauge.sol:\n\t- Version used: ['0.6.11', 'ABIEncoderV2']\n\t- ILiquidityGauge.sol#4 declares pragma solidity0.6.11\n\t- ILiquidityGauge.sol#5 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.11;\n",
          "message": "Detected issues with version pragma in ILiquidityGauge.sol:\n\t- pragma solidity0.6.11 (ILiquidityGauge.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function crv_token() external view returns (address);\n",
          "message": "Function 'ILiquidityGauge.crv_token' (ILiquidityGauge.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function lp_token() external view returns (address);\n",
          "message": "Function 'ILiquidityGauge.lp_token' (ILiquidityGauge.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function voting_escrow() external view returns (address);\n",
          "message": "Function 'ILiquidityGauge.voting_escrow' (ILiquidityGauge.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.balanceOf (ILiquidityGauge.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function future_epoch_time() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.future_epoch_time' (ILiquidityGauge.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Function 'ILiquidityGauge.approved_to_deposit' (ILiquidityGauge.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Parameter '' of ILiquidityGauge.approved_to_deposit (ILiquidityGauge.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Parameter '_scope_0' of ILiquidityGauge.approved_to_deposit (ILiquidityGauge.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_balances(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.working_balances' (ILiquidityGauge.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_balances(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.working_balances (ILiquidityGauge.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_supply() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.working_supply' (ILiquidityGauge.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function period_timestamp(uint256) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.period_timestamp' (ILiquidityGauge.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function period_timestamp(uint256) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.period_timestamp (ILiquidityGauge.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply(uint256) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.integrate_inv_supply' (ILiquidityGauge.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply(uint256) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.integrate_inv_supply (ILiquidityGauge.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply_of(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.integrate_inv_supply_of' (ILiquidityGauge.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply_of(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.integrate_inv_supply_of (ILiquidityGauge.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint_of(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.integrate_checkpoint_of' (ILiquidityGauge.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint_of(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.integrate_checkpoint_of (ILiquidityGauge.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_fraction(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.integrate_fraction' (ILiquidityGauge.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_fraction(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGauge.integrate_fraction (ILiquidityGauge.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function inflation_rate() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.inflation_rate' (ILiquidityGauge.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGauge.integrate_checkpoint' (ILiquidityGauge.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function user_checkpoint(address) external returns (bool);\n",
          "message": "Function 'ILiquidityGauge.user_checkpoint' (ILiquidityGauge.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function user_checkpoint(address) external returns (bool);\n",
          "message": "Parameter '' of ILiquidityGauge.user_checkpoint (ILiquidityGauge.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claim_rewards(address) external;\n",
          "message": "Function 'ILiquidityGauge.claim_rewards' (ILiquidityGauge.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claim_rewards(address) external;\n",
          "message": "Parameter '' of ILiquidityGauge.claim_rewards (ILiquidityGauge.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claimable_tokens(address) external view returns (uint256); // function can be manually changed to \"view\" in the ABI\n",
          "message": "Function 'ILiquidityGauge.claimable_tokens' (ILiquidityGauge.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claimable_tokens(address) external view returns (uint256); // function can be manually changed to \"view\" in the ABI\n",
          "message": "Parameter '' of ILiquidityGauge.claimable_tokens (ILiquidityGauge.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function kick(address) external;\n",
          "message": "Parameter '' of ILiquidityGauge.kick (ILiquidityGauge.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Function 'ILiquidityGauge.set_approve_deposit' (ILiquidityGauge.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Parameter '' of ILiquidityGauge.set_approve_deposit (ILiquidityGauge.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Parameter '_scope_0' of ILiquidityGauge.set_approve_deposit (ILiquidityGauge.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction deposit(uint256) external;\n",
          "message": "Parameter '' of ILiquidityGauge.deposit (ILiquidityGauge.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function deposit(uint256, address) external;\n",
          "message": "Parameter '' of ILiquidityGauge.deposit (ILiquidityGauge.sol#40) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function deposit(uint256, address) external;\n",
          "message": "Parameter '_scope_0' of ILiquidityGauge.deposit (ILiquidityGauge.sol#40) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint256) external;\n",
          "message": "Parameter '' of ILiquidityGauge.withdraw (ILiquidityGauge.sol#41) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}