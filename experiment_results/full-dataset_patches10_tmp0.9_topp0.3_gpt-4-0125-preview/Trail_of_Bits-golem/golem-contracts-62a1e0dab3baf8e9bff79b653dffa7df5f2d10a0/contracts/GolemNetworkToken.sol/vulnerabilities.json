{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalMigrated += _value;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 158,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalTokens += numTokens;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 190,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalTokens += additionalTokens;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 81,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (senderBalance >= _value && _value > 0) {\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": null,
          "vulnerability_code": "            senderBalance -= _value;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 83,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[msg.sender] = senderBalance;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_to] += _value;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "            Transfer(msg.sender, _to, _value);\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 86,
          "vulnerability_to_line": null,
          "vulnerability_code": "            return true;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 87,
          "vulnerability_to_line": null,
          "vulnerability_code": "        }\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if ((block.number <= fundingEndBlock ||\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 177,
          "vulnerability_to_line": null,
          "vulnerability_code": "             totalTokens < tokenCreationMin) &&\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 178,
          "vulnerability_to_line": null,
          "vulnerability_code": "            totalTokens < tokenCreationCap) revert();\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_19"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 173,
          "vulnerability_to_line": 196,
          "vulnerability_code": "    function finalize() external {\n\n        // Abort if not in Funding Success state.\n\n        if (!funding) revert();\n\n        if ((block.number <= fundingEndBlock ||\n\n             totalTokens < tokenCreationMin) &&\n\n            totalTokens < tokenCreationCap) revert();\n\n\n\n        // Switch to Operational state. This is the only place this can happen.\n\n        funding = false;\n\n\n\n        // Create additional GNT for the Golem Factory and developers as\n\n        // the 18% of total number of tokens.\n\n        // All additional tokens are transfered to the account controller by\n\n        // GNTAllocation contract which will not allow using them for 6 months.\n\n        uint256 percentOfTotal = 18;\n\n        uint256 additionalTokens =\n\n            totalTokens * percentOfTotal / (100 - percentOfTotal);\n\n        totalTokens += additionalTokens;\n\n        balances[lockedAllocation] += additionalTokens;\n\n        Transfer(0, lockedAllocation, additionalTokens);\n\n\n\n        // Transfer ETH to the Golem Factory address.\n\n        if (!golemFactory.send(this.balance)) revert();\n",
          "message": "GolemNetworkToken.finalize (GolemNetworkToken.sol#173-196) sends eth to arbitrary user\n\tDangerous calls:\n\t- ! golemFactory.send(this.balance) (GolemNetworkToken.sol#195)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function migrateFrom(address _from, uint256 _value);\n",
          "message": "MigrationAgent.migrateFrom (GolemNetworkToken.sol#7) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": 89,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) returns (bool) {\n\n        // Abort if not in Operational state.\n\n        if (funding) revert();\n\n\n\n        var senderBalance = balances[msg.sender];\n\n        if (senderBalance >= _value && _value > 0) {\n\n            senderBalance -= _value;\n\n            balances[msg.sender] = senderBalance;\n\n            balances[_to] += _value;\n\n            Transfer(msg.sender, _to, _value);\n\n            return true;\n\n        }\n\n        return false;\n",
          "message": "GolemNetworkToken.transfer (GolemNetworkToken.sol#76-89) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.16;\n",
          "message": "Detected issues with version pragma in GolemNetworkToken.sol:\n\t- pragma solidity^0.4.16 (GolemNetworkToken.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function GNTAllocation(address _golemFactory) {}\n",
          "message": "Function 'GNTAllocation.GNTAllocation' (GolemNetworkToken.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": 67,
          "vulnerability_code": "    function GolemNetworkToken(address _golemFactory,\n\n                               address _migrationMaster,\n\n                               uint256 _fundingStartBlock,\n\n                               uint256 _fundingEndBlock) {\n\n\n\n        if (_golemFactory == 0) revert();\n\n        if (_migrationMaster == 0) revert();\n\n        if (_fundingStartBlock <= block.number) revert();\n\n        if (_fundingEndBlock   <= _fundingStartBlock) revert();\n\n\n\n        lockedAllocation = new GNTAllocation(_golemFactory);\n\n        migrationMaster = _migrationMaster;\n\n        golemFactory = _golemFactory;\n\n        fundingStartBlock = _fundingStartBlock;\n\n        fundingEndBlock = _fundingEndBlock;\n",
          "message": "Function 'GolemNetworkToken.GolemNetworkToken' (GolemNetworkToken.sol#52-67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function GolemNetworkToken(address _golemFactory,\n",
          "message": "Parameter '_golemFactory' of GolemNetworkToken.GolemNetworkToken (GolemNetworkToken.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "                               address _migrationMaster,\n",
          "message": "Parameter '_migrationMaster' of GolemNetworkToken.GolemNetworkToken (GolemNetworkToken.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "                               uint256 _fundingStartBlock,\n",
          "message": "Parameter '_fundingStartBlock' of GolemNetworkToken.GolemNetworkToken (GolemNetworkToken.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "                               uint256 _fundingEndBlock) {\n",
          "message": "Parameter '_fundingEndBlock' of GolemNetworkToken.GolemNetworkToken (GolemNetworkToken.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) returns (bool) {\n",
          "message": "Parameter '_to' of GolemNetworkToken.transfer (GolemNetworkToken.sol#76) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) returns (bool) {\n",
          "message": "Parameter '_value' of GolemNetworkToken.transfer (GolemNetworkToken.sol#76) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 95,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address _owner) external view returns (uint256) {\n",
          "message": "Parameter '_owner' of GolemNetworkToken.balanceOf (GolemNetworkToken.sol#95) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 104,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function migrate(uint256 _value) external {\n",
          "message": "Parameter '_value' of GolemNetworkToken.migrate (GolemNetworkToken.sol#104) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMigrationAgent(address _agent) external {\n",
          "message": "Parameter '_agent' of GolemNetworkToken.setMigrationAgent (GolemNetworkToken.sol#125) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 133,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMigrationMaster(address _master) external {\n",
          "message": "Parameter '_master' of GolemNetworkToken.setMigrationMaster (GolemNetworkToken.sol#133) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public constant tokenCreationRate = 10000000000;\n",
          "message": "Constant 'GolemNetworkToken.tokenCreationRate' (GolemNetworkToken.sol#20) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public constant tokenCreationCap = 82 finney * tokenCreationRate;\n",
          "message": "Constant 'GolemNetworkToken.tokenCreationCap' (GolemNetworkToken.sol#23) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public constant tokenCreationMin = 15 finney * tokenCreationRate;\n",
          "message": "Constant 'GolemNetworkToken.tokenCreationMin' (GolemNetworkToken.sol#24) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_MSGVALUE_EQUALS_ZERO",
          "vulnerability_from_line": 153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.value == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.16;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_golemFactory == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_migrationMaster == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_fundingStartBlock <= block.number) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_fundingEndBlock   <= _fundingStartBlock) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 78,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 106,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 107,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (migrationAgent == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_value == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 111,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_value > balances[msg.sender]) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 127,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 128,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (migrationAgent != 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 129,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.sender != migrationMaster) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 134,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.sender != migrationMaster) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 135,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_master == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 149,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (block.number < fundingStartBlock) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 150,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (block.number > fundingEndBlock) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.value == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 154,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.value > (tokenCreationCap - totalTokens) / tokenCreationRate)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 175,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if ((block.number <= fundingEndBlock ||\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!golemFactory.send(this.balance)) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 203,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!funding) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 204,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (block.number <= fundingEndBlock) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (totalTokens >= tokenCreationMin) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (gntValue == 0) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 214,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!msg.sender.send(ethValue)) revert();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function migrateFrom(address _from, uint256 _value);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function GNTAllocation(address _golemFactory) {}\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function GolemNetworkToken(address _golemFactory,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    GNTAllocation lockedAllocation;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => uint256) balances;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_SEGV"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Dependence on predictable environment variable (SWC 120)",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (_fundingStartBlock <= block.number) revert();\n",
          "message": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-120"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 120)",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if ((block.number <= fundingEndBlock ||\n",
          "message": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-120"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 120)",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if ((block.number <= fundingEndBlock ||\n",
          "message": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-120"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 120)",
          "vulnerability_from_line": 204,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (block.number <= fundingEndBlock) revert();\n",
          "message": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-120"
        },
        {
          "name": "Dependence on predictable environment variable (SWC 120)",
          "vulnerability_from_line": 149,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (block.number < fundingStartBlock) revert();\n",
          "message": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.\nClassification: SWC-120"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Concurrency bug",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!golemFactory.send(this.balance)) revert();\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_to] += _value;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalMigrated += _value;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 189,
          "vulnerability_to_line": null,
          "vulnerability_code": "            totalTokens * percentOfTotal / (100 - percentOfTotal);\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 191,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[lockedAllocation] += additionalTokens;\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 114,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalTokens -= _value;\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 154,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (msg.value > (tokenCreationCap - totalTokens) / tokenCreationRate)\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalTokens -= gntValue;\n",
          "message": null
        }
      ]
    }
  }
}