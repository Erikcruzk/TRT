{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "array-length-outside-loop",
          "vulnerability_from_line": 407,
          "vulnerability_to_line": null,
          "vulnerability_code": "        for (uint i = 0; i < payments.length; ++i) {\n",
          "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop."
        },
        {
          "name": "unnecessary-checked-arithmetic-in-loop",
          "vulnerability_from_line": 407,
          "vulnerability_to_line": null,
          "vulnerability_code": "        for (uint i = 0; i < payments.length; ++i) {\n",
          "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_47"
      ],
      "vulnerability_findings": [
        {
          "name": "unused-return",
          "vulnerability_from_line": 360,
          "vulnerability_to_line": 371,
          "vulnerability_code": "    function withdrawTo(uint256 _value, address _destination) public {\n\n        address user = msg.sender;\n\n        uint256 balance = balances[user];\n\n        require(_value <= balance);\n\n\n\n        balances[user] = (balance - _value);\n\n        totalSupply_ -= _value;\n\n\n\n        TOKEN.transfer(_destination, _value);\n\n\n\n        Burned(user, _value);\n",
          "message": "TokenProxy.withdrawTo (GolemNetworkTokenBatching.sol#360-371) does not use the value returned by external calls:\n\t-TOKEN.transfer(_destination,_value) (GolemNetworkTokenBatching.sol#368)\n"
        },
        {
          "name": "reentrancy-benign",
          "vulnerability_from_line": 336,
          "vulnerability_to_line": 354,
          "vulnerability_code": "    function transferFromGate() external {\n\n        address user = msg.sender;\n\n\n\n        address gate = gates[user];\n\n\n\n        // Make sure the User's Gate exists.\n\n        require(gate != 0);\n\n\n\n        uint256 value = TOKEN.balanceOf(gate);\n\n\n\n        Gate(gate).transferToProxy(value);\n\n\n\n        // Handle the information about the amount of migrated tokens.\n\n        // This is a trusted information becase it comes from the Gate.\n\n        totalSupply_ += value;\n\n        balances[user] += value;\n\n\n\n        Minted(user, value);\n",
          "message": "Reentrancy in TokenProxy.transferFromGate (GolemNetworkTokenBatching.sol#336-354):\n\tExternal calls:\n\t- value = TOKEN.balanceOf(gate) (GolemNetworkTokenBatching.sol#344)\n\t- Gate(gate).transferToProxy(value) (GolemNetworkTokenBatching.sol#346)\n\tState variables written after the call(s):\n\t- balances (GolemNetworkTokenBatching.sol#351)\n\t- totalSupply_ (GolemNetworkTokenBatching.sol#350)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 402,
          "vulnerability_to_line": 421,
          "vulnerability_code": "    function batchTransfer(bytes32[] payments, uint64 closureTime) external {\n\n        require(block.timestamp >= closureTime);\n\n\n\n        uint balance = balances[msg.sender];\n\n\n\n        for (uint i = 0; i < payments.length; ++i) {\n\n            // A payment contains compressed data:\n\n            // first 96 bits (12 bytes) is a value,\n\n            // following 160 bits (20 bytes) is an address.\n\n            bytes32 payment = payments[i];\n\n            address addr = address(payment);\n\n            uint v = uint(payment) / 2**160;\n\n            require(v <= balance);\n\n            balances[addr] += v;\n\n            balance -= v;\n\n            BatchTransfer(msg.sender, addr, v, closureTime);\n\n        }\n\n\n\n        balances[msg.sender] = balance;\n",
          "message": "GolemNetworkTokenBatching.batchTransfer (GolemNetworkTokenBatching.sol#402-421) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(block.timestamp >= closureTime) (GolemNetworkTokenBatching.sol#403)\n"
        },
        {
          "name": "pragma",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": "Different versions of Solidity is used in GolemNetworkTokenBatching.sol:\n\t- Version used: ['^0.4.18', '^0.4.19']\n\t- GolemNetworkTokenBatching.sol#4 declares pragma solidity^0.4.19\n\t- GolemNetworkTokenBatching.sol#14 declares pragma solidity^0.4.18\n\t- GolemNetworkTokenBatching.sol#31 declares pragma solidity^0.4.18\n\t- GolemNetworkTokenBatching.sol#82 declares pragma solidity^0.4.18\n\t- GolemNetworkTokenBatching.sol#132 declares pragma solidity^0.4.18\n\t- GolemNetworkTokenBatching.sol#148 declares pragma solidity^0.4.18\n\t- GolemNetworkTokenBatching.sol#252 declares pragma solidity^0.4.19\n\t- GolemNetworkTokenBatching.sol#380 declares pragma solidity^0.4.19\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function onTokenReceived(address _from, uint _value, bytes _data) public;\n",
          "message": "ReceivingContract.onTokenReceived (GolemNetworkTokenBatching.sol#9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply() public view returns (uint256);\n",
          "message": "ERC20Basic.totalSupply (GolemNetworkTokenBatching.sol#23) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 99,
          "vulnerability_to_line": 101,
          "vulnerability_code": "  function totalSupply() public view returns (uint256) {\n\n    return totalSupply_;\n",
          "message": "BasicToken.totalSupply (GolemNetworkTokenBatching.sol#99-101) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address who) public view returns (uint256);\n",
          "message": "ERC20Basic.balanceOf (GolemNetworkTokenBatching.sol#24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": 126,
          "vulnerability_code": "  function balanceOf(address _owner) public view returns (uint256 balance) {\n\n    return balances[_owner];\n",
          "message": "BasicToken.balanceOf (GolemNetworkTokenBatching.sol#124-126) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address owner, address spender) public view returns (uint256);\n",
          "message": "ERC20.allowance (GolemNetworkTokenBatching.sol#139) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 203,
          "vulnerability_to_line": 205,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n\n    return allowed[_owner][_spender];\n",
          "message": "StandardToken.allowance (GolemNetworkTokenBatching.sol#203-205) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 140,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address from, address to, uint256 value) public returns (bool);\n",
          "message": "ERC20.transferFrom (GolemNetworkTokenBatching.sol#140) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": 179,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n\n    require(_to != address(0));\n\n    require(_value <= balances[_from]);\n\n    require(_value <= allowed[_from][msg.sender]);\n\n\n\n    balances[_from] = balances[_from].sub(_value);\n\n    balances[_to] = balances[_to].add(_value);\n\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n\n    Transfer(_from, _to, _value);\n\n    return true;\n",
          "message": "StandardToken.transferFrom (GolemNetworkTokenBatching.sol#169-179) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 142,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address spender, uint256 value) public returns (bool);\n",
          "message": "ERC20.approve (GolemNetworkTokenBatching.sol#142) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 191,
          "vulnerability_to_line": 195,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n\n    allowed[msg.sender][_spender] = _value;\n\n    Approval(msg.sender, _spender, _value);\n\n    return true;\n",
          "message": "StandardToken.approve (GolemNetworkTokenBatching.sol#191-195) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": 221,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n    return true;\n",
          "message": "StandardToken.increaseApproval (GolemNetworkTokenBatching.sol#217-221) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 233,
          "vulnerability_to_line": 242,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n\n    uint oldValue = allowed[msg.sender][_spender];\n\n    if (_subtractedValue > oldValue) {\n\n      allowed[msg.sender][_spender] = 0;\n\n    } else {\n\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n\n    }\n\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n\n    return true;\n",
          "message": "StandardToken.decreaseApproval (GolemNetworkTokenBatching.sol#233-242) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 272,
          "vulnerability_to_line": 276,
          "vulnerability_code": "    function transferToProxy(uint256 _value) public {\n\n        require(msg.sender == PROXY);\n\n\n\n        require(TOKEN.transfer(PROXY, _value));\n",
          "message": "Gate.transferToProxy (GolemNetworkTokenBatching.sol#272-276) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": "Detected issues with version pragma in GolemNetworkTokenBatching.sol:\n\t- pragma solidity^0.4.19 (GolemNetworkTokenBatching.sol#4): it allows old versions\n\t- pragma solidity^0.4.18 (GolemNetworkTokenBatching.sol#14): it allows old versions\n\t- pragma solidity^0.4.18 (GolemNetworkTokenBatching.sol#31): it allows old versions\n\t- pragma solidity^0.4.18 (GolemNetworkTokenBatching.sol#82): it allows old versions\n\t- pragma solidity^0.4.18 (GolemNetworkTokenBatching.sol#132): it allows old versions\n\t- pragma solidity^0.4.18 (GolemNetworkTokenBatching.sol#148): it allows old versions\n\t- pragma solidity^0.4.19 (GolemNetworkTokenBatching.sol#252): it allows old versions\n\t- pragma solidity^0.4.19 (GolemNetworkTokenBatching.sol#380): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address _owner) public view returns (uint256 balance) {\n",
          "message": "Parameter '_owner' of BasicToken.balanceOf (GolemNetworkTokenBatching.sol#124) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_to' of BasicToken.transfer (GolemNetworkTokenBatching.sol#108) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of BasicToken.transfer (GolemNetworkTokenBatching.sol#108) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 203,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n",
          "message": "Parameter '_owner' of StandardToken.allowance (GolemNetworkTokenBatching.sol#203) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 203,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n",
          "message": "Parameter '_spender' of StandardToken.allowance (GolemNetworkTokenBatching.sol#203) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_from' of StandardToken.transferFrom (GolemNetworkTokenBatching.sol#169) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_to' of StandardToken.transferFrom (GolemNetworkTokenBatching.sol#169) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of StandardToken.transferFrom (GolemNetworkTokenBatching.sol#169) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 191,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.approve (GolemNetworkTokenBatching.sol#191) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 191,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of StandardToken.approve (GolemNetworkTokenBatching.sol#191) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.increaseApproval (GolemNetworkTokenBatching.sol#217) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n",
          "message": "Parameter '_addedValue' of StandardToken.increaseApproval (GolemNetworkTokenBatching.sol#217) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 233,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.decreaseApproval (GolemNetworkTokenBatching.sol#233) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 233,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n",
          "message": "Parameter '_subtractedValue' of StandardToken.decreaseApproval (GolemNetworkTokenBatching.sol#233) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 264,
          "vulnerability_to_line": 267,
          "vulnerability_code": "    function Gate(ERC20Basic _token, address _proxy) public {\n\n        TOKEN = _token;\n\n        PROXY = _proxy;\n",
          "message": "Function 'Gate.Gate' (GolemNetworkTokenBatching.sol#264-267) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 264,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Gate(ERC20Basic _token, address _proxy) public {\n",
          "message": "Parameter '_token' of Gate.Gate (GolemNetworkTokenBatching.sol#264) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 264,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Gate(ERC20Basic _token, address _proxy) public {\n",
          "message": "Parameter '_proxy' of Gate.Gate (GolemNetworkTokenBatching.sol#264) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 272,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferToProxy(uint256 _value) public {\n",
          "message": "Parameter '_value' of Gate.transferToProxy (GolemNetworkTokenBatching.sol#272) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 260,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20Basic private TOKEN;\n",
          "message": "Variable 'Gate.TOKEN' (GolemNetworkTokenBatching.sol#260) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 261,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private PROXY;\n",
          "message": "Variable 'Gate.PROXY' (GolemNetworkTokenBatching.sol#261) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 312,
          "vulnerability_to_line": 314,
          "vulnerability_code": "    function TokenProxy(ERC20Basic _token) public {\n\n        TOKEN = _token;\n",
          "message": "Function 'TokenProxy.TokenProxy' (GolemNetworkTokenBatching.sol#312-314) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 312,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function TokenProxy(ERC20Basic _token) public {\n",
          "message": "Parameter '_token' of TokenProxy.TokenProxy (GolemNetworkTokenBatching.sol#312) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 316,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getGateAddress(address _user) external view returns (address) {\n",
          "message": "Parameter '_user' of TokenProxy.getGateAddress (GolemNetworkTokenBatching.sol#316) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 356,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint256 _value) external {\n",
          "message": "Parameter '_value' of TokenProxy.withdraw (GolemNetworkTokenBatching.sol#356) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 360,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawTo(uint256 _value, address _destination) public {\n",
          "message": "Parameter '_value' of TokenProxy.withdrawTo (GolemNetworkTokenBatching.sol#360) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 360,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawTo(uint256 _value, address _destination) public {\n",
          "message": "Parameter '_destination' of TokenProxy.withdrawTo (GolemNetworkTokenBatching.sol#360) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 301,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20Basic public TOKEN;\n",
          "message": "Variable 'TokenProxy.TOKEN' (GolemNetworkTokenBatching.sol#301) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 399,
          "vulnerability_to_line": 400,
          "vulnerability_code": "    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {\n",
          "message": "Function 'GolemNetworkTokenBatching.GolemNetworkTokenBatching' (GolemNetworkTokenBatching.sol#399-400) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 191,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
          "vulnerability_from_line": 407,
          "vulnerability_to_line": null,
          "vulnerability_code": "        for (uint i = 0; i < payments.length; ++i) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
          "vulnerability_from_line": 407,
          "vulnerability_to_line": null,
          "vulnerability_code": "        for (uint i = 0; i < payments.length; ++i) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 132,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 380,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 260,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20Basic private TOKEN;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 261,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private PROXY;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 303,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(address => address) private gates;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function onTokenReceived(address _from, uint _value, bytes _data) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 92,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => uint256) balances;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 94,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 totalSupply_;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 c = a + b;\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 350,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalSupply_ += value;\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 c = a + b;\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 c = a + b;\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 350,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalSupply_ += value;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 351,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[user] += value;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 415,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[addr] += v;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 429,
          "vulnerability_to_line": null,
          "vulnerability_code": "      ReceivingContract(to).onTokenReceived(msg.sender, value, data);\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 366,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalSupply_ -= _value;\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 429,
          "vulnerability_to_line": null,
          "vulnerability_code": "      ReceivingContract(to).onTokenReceived(msg.sender, value, data);\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 350,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalSupply_ += value;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 351,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[user] += value;\n",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 366,
          "vulnerability_to_line": null,
          "vulnerability_code": "        totalSupply_ -= _value;\n",
          "message": null
        }
      ]
    }
  }
}