{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_13"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 53,
          "vulnerability_code": "    function computeDepositOutputId(\n\n        bytes memory _txBytes,\n\n        uint8 _outputIndex,\n\n        uint256 _utxoPosValue\n\n    )\n\n        public\n\n        pure\n\n        returns (bytes32)\n\n    {\n\n        return OutputId.computeDepositOutputId(_txBytes, _outputIndex, _utxoPosValue);\n",
          "message": "OutputIdWrapper.computeDepositOutputId (OutputIdWrapper.sol#43-53) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": 64,
          "vulnerability_code": "    function computeNormalOutputId(\n\n        bytes memory _txBytes,\n\n        uint8 _outputIndex\n\n    )\n\n        public\n\n        pure\n\n        returns (bytes32)\n\n    {\n\n        return OutputId.computeNormalOutputId(_txBytes, _outputIndex);\n",
          "message": "OutputIdWrapper.computeNormalOutputId (OutputIdWrapper.sol#55-64) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.11;\n",
          "message": "Detected issues with version pragma in OutputIdWrapper.sol:\n\t- pragma solidity0.5.11 (OutputIdWrapper.sol#3): it allows old versions\n\t- pragma solidity0.5.11 (OutputIdWrapper.sol#40): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function computeDepositOutputId(bytes memory _txBytes, uint256 _outputIndex, uint256 _utxoPosValue)\n",
          "message": "Parameter '_txBytes' of OutputId.computeDepositOutputId (OutputIdWrapper.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function computeDepositOutputId(bytes memory _txBytes, uint256 _outputIndex, uint256 _utxoPosValue)\n",
          "message": "Parameter '_outputIndex' of OutputId.computeDepositOutputId (OutputIdWrapper.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function computeDepositOutputId(bytes memory _txBytes, uint256 _outputIndex, uint256 _utxoPosValue)\n",
          "message": "Parameter '_utxoPosValue' of OutputId.computeDepositOutputId (OutputIdWrapper.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function computeNormalOutputId(bytes memory _txBytes, uint256 _outputIndex)\n",
          "message": "Parameter '_txBytes' of OutputId.computeNormalOutputId (OutputIdWrapper.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function computeNormalOutputId(bytes memory _txBytes, uint256 _outputIndex)\n",
          "message": "Parameter '_outputIndex' of OutputId.computeNormalOutputId (OutputIdWrapper.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes memory _txBytes,\n",
          "message": "Parameter '_txBytes' of OutputIdWrapper.computeDepositOutputId (OutputIdWrapper.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint8 _outputIndex,\n",
          "message": "Parameter '_outputIndex' of OutputIdWrapper.computeDepositOutputId (OutputIdWrapper.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _utxoPosValue\n",
          "message": "Parameter '_utxoPosValue' of OutputIdWrapper.computeDepositOutputId (OutputIdWrapper.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes memory _txBytes,\n",
          "message": "Parameter '_txBytes' of OutputIdWrapper.computeNormalOutputId (OutputIdWrapper.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint8 _outputIndex\n",
          "message": "Parameter '_outputIndex' of OutputIdWrapper.computeNormalOutputId (OutputIdWrapper.sol#57) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    }
  }
}