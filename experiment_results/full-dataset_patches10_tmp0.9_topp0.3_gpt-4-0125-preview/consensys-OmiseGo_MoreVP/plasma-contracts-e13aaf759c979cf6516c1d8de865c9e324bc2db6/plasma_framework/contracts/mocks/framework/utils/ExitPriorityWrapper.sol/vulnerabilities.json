{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": 86,
          "vulnerability_code": "    function computePriority(uint64 exitableAt, uint256 txPos, uint160 exitId) public pure returns (uint256) {\n\n        return ExitPriority.computePriority(exitableAt, TxPosLib.TxPos(txPos), exitId);\n",
          "message": "ExitPriorityWrapper.computePriority (ExitPriorityWrapper.sol#84-86) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": 90,
          "vulnerability_code": "    function parseExitableAt(uint256 priority) public pure returns (uint64) {\n\n        return ExitPriority.parseExitableAt(priority);\n",
          "message": "ExitPriorityWrapper.parseExitableAt (ExitPriorityWrapper.sol#88-90) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 92,
          "vulnerability_to_line": 94,
          "vulnerability_code": "    function parseExitId(uint256 priority) public pure returns (uint160) {\n\n        return ExitPriority.parseExitId(priority);\n",
          "message": "ExitPriorityWrapper.parseExitId (ExitPriorityWrapper.sol#92-94) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.11;\n",
          "message": "Detected issues with version pragma in ExitPriorityWrapper.sol:\n\t- pragma solidity0.5.11 (ExitPriorityWrapper.sol#3): it allows old versions\n\t- pragma solidity0.5.11 (ExitPriorityWrapper.sol#44): it allows old versions\n\t- pragma solidity0.5.11 (ExitPriorityWrapper.sol#80): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function blockNum(TxPos memory _txPos)\n",
          "message": "Parameter '_txPos' of TxPosLib.blockNum (ExitPriorityWrapper.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function txIndex(TxPos memory _txPos)\n",
          "message": "Parameter '_txPos' of TxPosLib.txIndex (ExitPriorityWrapper.sol#33) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    }
  }
}