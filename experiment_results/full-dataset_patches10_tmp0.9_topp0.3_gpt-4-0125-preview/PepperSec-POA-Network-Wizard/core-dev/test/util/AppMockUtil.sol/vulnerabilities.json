{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_60"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 43,
          "vulnerability_code": "  function getSelectors() public pure returns (bytes4[] memory selectors) {\n\n    selectors = new bytes4[](27);\n\n    // pay\n\n    selectors[0] = this.pay0.selector;\n\n    selectors[1] = this.pay1.selector;\n\n    selectors[2] = this.pay2.selector;\n\n    // std\n\n    selectors[3] = this.std0.selector;\n\n    selectors[4] = this.std1.selector;\n\n    selectors[5] = this.std2.selector;\n\n    // emit\n\n    selectors[6] = this.emit0.selector;\n\n    selectors[7] = this.emit1top0.selector;\n\n    selectors[8] = this.emit1top0data.selector;\n\n    selectors[9] = this.emit1top4data.selector;\n\n    selectors[10] = this.emit2top1data.selector;\n\n    selectors[11] = this.emit2top4.selector;\n\n    // mix\n\n    selectors[12] = this.req0.selector;\n\n    selectors[13] = this.req1.selector;\n\n    selectors[14] = this.req2.selector;\n\n    selectors[15] = this.req3.selector;\n\n    selectors[16] = this.reqs0.selector;\n\n    selectors[17] = this.reqs1.selector;\n\n    selectors[18] = this.reqs2.selector;\n\n    selectors[19] = this.reqs3.selector;\n\n    // inv\n\n    selectors[20] = this.inv1.selector;\n\n    selectors[21] = this.inv2.selector;\n\n    // rev\n\n    selectors[22] = this.rev0.selector;\n\n    selectors[23] = this.rev1.selector;\n\n    selectors[24] = this.rev2.selector;\n\n    // update\n\n    selectors[25] = this.updateInstance.selector;\n\n    selectors[26] = this.updateExec.selector;\n",
          "message": "AppMockUtil.getSelectors (AppMockUtil.sol#7-43) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in AppMockUtil.sol:\n\t- pragma solidity^0.4.23 (AppMockUtil.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pay1(address) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.pay1 (AppMockUtil.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pay2(address, address) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.pay2 (AppMockUtil.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pay2(address, address) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.pay2 (AppMockUtil.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std1(bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.std1 (AppMockUtil.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std1(bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.std1 (AppMockUtil.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std2(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.std2 (AppMockUtil.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std2(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.std2 (AppMockUtil.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std2(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.std2 (AppMockUtil.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function std2(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_2' of AppMockUtil.std2 (AppMockUtil.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top0data(bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.emit1top0data (AppMockUtil.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top4data(bytes32, bytes32, bytes32, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.emit1top4data (AppMockUtil.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top4data(bytes32, bytes32, bytes32, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.emit1top4data (AppMockUtil.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top4data(bytes32, bytes32, bytes32, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.emit1top4data (AppMockUtil.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top4data(bytes32, bytes32, bytes32, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_2' of AppMockUtil.emit1top4data (AppMockUtil.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit1top4data(bytes32, bytes32, bytes32, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_3' of AppMockUtil.emit1top4data (AppMockUtil.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top1data(bytes32, bytes, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.emit2top1data (AppMockUtil.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top1data(bytes32, bytes, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.emit2top1data (AppMockUtil.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top1data(bytes32, bytes, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.emit2top1data (AppMockUtil.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top4(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.emit2top4 (AppMockUtil.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top4(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.emit2top4 (AppMockUtil.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top4(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.emit2top4 (AppMockUtil.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top4(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_2' of AppMockUtil.emit2top4 (AppMockUtil.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req0(bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.req0 (AppMockUtil.sol#68) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req1(address, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.req1 (AppMockUtil.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req1(address, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.req1 (AppMockUtil.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req1(address, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.req1 (AppMockUtil.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req2(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.req2 (AppMockUtil.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req2(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.req2 (AppMockUtil.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req2(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.req2 (AppMockUtil.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req3(address, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.req3 (AppMockUtil.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function req3(address, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.req3 (AppMockUtil.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function reqs0(address, address, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.reqs0 (AppMockUtil.sol#72) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function reqs0(address, address, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.reqs0 (AppMockUtil.sol#72) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function reqs0(address, address, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.reqs0 (AppMockUtil.sol#72) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function reqs0(address, address, bytes32, bytes) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_2' of AppMockUtil.reqs0 (AppMockUtil.sol#72) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_0' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_1' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_2' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_3' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_4' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_5' of AppMockUtil.reqs1 (AppMockUtil.sol#74) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32[4], bytes, bytes32, bytes32\n",
          "message": "Parameter '' of AppMockUtil.reqs2 (AppMockUtil.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32[4], bytes, bytes32, bytes32\n",
          "message": "Parameter '_scope_0' of AppMockUtil.reqs2 (AppMockUtil.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32[4], bytes, bytes32, bytes32\n",
          "message": "Parameter '_scope_1' of AppMockUtil.reqs2 (AppMockUtil.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32[4], bytes, bytes32, bytes32\n",
          "message": "Parameter '_scope_2' of AppMockUtil.reqs2 (AppMockUtil.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32[4], bytes, bytes32, bytes32\n",
          "message": "Parameter '_scope_3' of AppMockUtil.reqs2 (AppMockUtil.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_0' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_1' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_2' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_3' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_4' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address, bytes32, bytes, bytes32, bytes32, bytes32, bytes32\n",
          "message": "Parameter '_scope_5' of AppMockUtil.reqs3 (AppMockUtil.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function updateInstance(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.updateInstance (AppMockUtil.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function updateInstance(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_0' of AppMockUtil.updateInstance (AppMockUtil.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function updateInstance(bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '_scope_1' of AppMockUtil.updateInstance (AppMockUtil.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function updateExec(address) external pure returns (bytes) { return msg.data; }\n",
          "message": "Parameter '' of AppMockUtil.updateExec (AppMockUtil.sol#97) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emit2top4(bytes32, bytes32, bytes32, bytes32) external pure returns (bytes) { return msg.data; }\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}