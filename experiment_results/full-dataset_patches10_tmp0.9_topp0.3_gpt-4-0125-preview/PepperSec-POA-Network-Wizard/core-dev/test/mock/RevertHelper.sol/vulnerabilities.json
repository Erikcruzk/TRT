{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "constant-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 12,
          "vulnerability_code": "  function revertBytes(bytes memory _in) internal pure {\n\n    assembly {\n\n      mstore(sub(_in, 0x20), 0x20)\n\n      revert (sub(_in, 0x20), add(0x40, mload(_in)))\n\n    }\n",
          "message": "RevertHelper.revertBytes (RevertHelper.sol#7-12) is declared view but contains assembly code\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 12,
          "vulnerability_code": "  function revertBytes(bytes memory _in) internal pure {\n\n    assembly {\n\n      mstore(sub(_in, 0x20), 0x20)\n\n      revert (sub(_in, 0x20), add(0x40, mload(_in)))\n\n    }\n",
          "message": "RevertHelper.revertBytes uses assembly (RevertHelper.sol#7-12)\n\t- RevertHelper.sol#8-12\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in RevertHelper.sol:\n\t- pragma solidity^0.4.23 (RevertHelper.sol#3): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_PURE",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revertBytes(bytes memory _in) internal pure {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    assembly {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}