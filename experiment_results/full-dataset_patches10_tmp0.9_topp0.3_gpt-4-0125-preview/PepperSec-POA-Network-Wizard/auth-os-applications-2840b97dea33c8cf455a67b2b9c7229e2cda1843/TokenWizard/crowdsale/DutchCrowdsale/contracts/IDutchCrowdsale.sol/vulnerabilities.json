{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_60"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in IDutchCrowdsale.sol:\n\t- pragma solidity^0.4.23 (IDutchCrowdsale.sol#3): it allows old versions\n\t- pragma solidity^0.4.23 (IDutchCrowdsale.sol#32): it allows old versions\n\t- pragma solidity^0.4.23 (IDutchCrowdsale.sol#40): it allows old versions\n\t- pragma solidity^0.4.23 (IDutchCrowdsale.sol#68): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address) external view returns (uint);\n",
          "message": "Parameter '' of IToken.balanceOf (IDutchCrowdsale.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, address) external view returns (uint);\n",
          "message": "Parameter '' of IToken.allowance (IDutchCrowdsale.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of IToken.allowance (IDutchCrowdsale.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.transfer (IDutchCrowdsale.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.transfer (IDutchCrowdsale.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.transferFrom (IDutchCrowdsale.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.transferFrom (IDutchCrowdsale.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IToken.transferFrom (IDutchCrowdsale.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.approve (IDutchCrowdsale.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.approve (IDutchCrowdsale.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.increaseApproval (IDutchCrowdsale.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.increaseApproval (IDutchCrowdsale.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.decreaseApproval (IDutchCrowdsale.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.decreaseApproval (IDutchCrowdsale.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function name(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '' of TokenIdx.name (IDutchCrowdsale.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function name(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '_scope_0' of TokenIdx.name (IDutchCrowdsale.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function symbol(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '' of TokenIdx.symbol (IDutchCrowdsale.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function symbol(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '_scope_0' of TokenIdx.symbol (IDutchCrowdsale.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decimals(address, bytes32) external view returns (uint8);\n",
          "message": "Parameter '' of TokenIdx.decimals (IDutchCrowdsale.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decimals(address, bytes32) external view returns (uint8);\n",
          "message": "Parameter '_scope_0' of TokenIdx.decimals (IDutchCrowdsale.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.totalSupply (IDutchCrowdsale.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.totalSupply (IDutchCrowdsale.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.balanceOf (IDutchCrowdsale.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.balanceOf (IDutchCrowdsale.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '_scope_1' of TokenIdx.balanceOf (IDutchCrowdsale.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.allowance (IDutchCrowdsale.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.allowance (IDutchCrowdsale.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_1' of TokenIdx.allowance (IDutchCrowdsale.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_2' of TokenIdx.allowance (IDutchCrowdsale.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address) external view returns (uint, uint);\n",
          "message": "Parameter '' of IAdmin.getWhitelistStatus (IDutchCrowdsale.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '' of AdminIdx.getAdmin (IDutchCrowdsale.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getAdmin (IDutchCrowdsale.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, uint, bool, bool, bool);\n",
          "message": "Parameter '' of AdminIdx.getCrowdsaleInfo (IDutchCrowdsale.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, uint, bool, bool, bool);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getCrowdsaleInfo (IDutchCrowdsale.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '' of AdminIdx.isCrowdsaleFull (IDutchCrowdsale.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '_scope_0' of AdminIdx.isCrowdsaleFull (IDutchCrowdsale.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '' of AdminIdx.getCrowdsaleStartAndEndTimes (IDutchCrowdsale.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getCrowdsaleStartAndEndTimes (IDutchCrowdsale.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStatus(address, bytes32) external view returns (uint, uint, uint, uint, uint, uint, bool);\n",
          "message": "Parameter '' of AdminIdx.getCrowdsaleStatus (IDutchCrowdsale.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStatus(address, bytes32) external view returns (uint, uint, uint, uint, uint, uint, bool);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getCrowdsaleStatus (IDutchCrowdsale.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of AdminIdx.getTokensSold (IDutchCrowdsale.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getTokensSold (IDutchCrowdsale.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleWhitelist(address, bytes32) external view returns (uint, address[]);\n",
          "message": "Parameter '' of AdminIdx.getCrowdsaleWhitelist (IDutchCrowdsale.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleWhitelist(address, bytes32) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getCrowdsaleWhitelist (IDutchCrowdsale.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, address) external view returns (uint, uint);\n",
          "message": "Parameter '' of AdminIdx.getWhitelistStatus (IDutchCrowdsale.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getWhitelistStatus (IDutchCrowdsale.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_1' of AdminIdx.getWhitelistStatus (IDutchCrowdsale.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of AdminIdx.getCrowdsaleUniqueBuyers (IDutchCrowdsale.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of AdminIdx.getCrowdsaleUniqueBuyers (IDutchCrowdsale.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_0' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_1' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_2' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_3' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_4' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_5' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_6' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_7' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, uint, uint, uint, uint, uint, bool, address, bool) external;\n",
          "message": "Parameter '_scope_8' of IDutchCrowdsale.init (IDutchCrowdsale.sol#73) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}