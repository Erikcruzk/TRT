{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_82"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in IMintedCapped.sol:\n\t- pragma solidity^0.4.23 (IMintedCapped.sol#3): it allows old versions\n\t- pragma solidity^0.4.23 (IMintedCapped.sol#32): it allows old versions\n\t- pragma solidity^0.4.23 (IMintedCapped.sol#40): it allows old versions\n\t- pragma solidity^0.4.23 (IMintedCapped.sol#76): it allows old versions\n\t- pragma solidity^0.4.23 (IMintedCapped.sol#90): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address) external view returns (uint);\n",
          "message": "Parameter '' of IToken.balanceOf (IMintedCapped.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, address) external view returns (uint);\n",
          "message": "Parameter '' of IToken.allowance (IMintedCapped.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of IToken.allowance (IMintedCapped.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.transfer (IMintedCapped.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.transfer (IMintedCapped.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.transferFrom (IMintedCapped.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.transferFrom (IMintedCapped.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IToken.transferFrom (IMintedCapped.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.approve (IMintedCapped.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.approve (IMintedCapped.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.increaseApproval (IMintedCapped.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.increaseApproval (IMintedCapped.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '' of IToken.decreaseApproval (IMintedCapped.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address, uint) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IToken.decreaseApproval (IMintedCapped.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function name(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '' of TokenIdx.name (IMintedCapped.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function name(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '_scope_0' of TokenIdx.name (IMintedCapped.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function symbol(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '' of TokenIdx.symbol (IMintedCapped.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function symbol(address, bytes32) external view returns (bytes32);\n",
          "message": "Parameter '_scope_0' of TokenIdx.symbol (IMintedCapped.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decimals(address, bytes32) external view returns (uint8);\n",
          "message": "Parameter '' of TokenIdx.decimals (IMintedCapped.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decimals(address, bytes32) external view returns (uint8);\n",
          "message": "Parameter '_scope_0' of TokenIdx.decimals (IMintedCapped.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.totalSupply (IMintedCapped.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.totalSupply (IMintedCapped.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.balanceOf (IMintedCapped.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.balanceOf (IMintedCapped.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address, bytes32, address) external view returns (uint);\n",
          "message": "Parameter '_scope_1' of TokenIdx.balanceOf (IMintedCapped.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '' of TokenIdx.allowance (IMintedCapped.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of TokenIdx.allowance (IMintedCapped.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_1' of TokenIdx.allowance (IMintedCapped.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address, bytes32, address, address) external view returns (uint);\n",
          "message": "Parameter '_scope_2' of TokenIdx.allowance (IMintedCapped.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of ISaleManager.getCrowdsaleTier (IMintedCapped.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(uint) external view returns (uint, address[]);\n",
          "message": "Parameter '' of ISaleManager.getTierWhitelist (IMintedCapped.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(uint) external view returns (uint, uint);\n",
          "message": "Parameter '' of ISaleManager.getTierStartAndEndDates (IMintedCapped.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '' of ISaleManager.getWhitelistStatus (IMintedCapped.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of ISaleManager.getWhitelistStatus (IMintedCapped.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '' of SaleManagerIdx.getAdmin (IMintedCapped.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getAdmin (IMintedCapped.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleInfo (IMintedCapped.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleInfo (IMintedCapped.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.isCrowdsaleFull (IMintedCapped.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.isCrowdsaleFull (IMintedCapped.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleStartAndEndTimes (IMintedCapped.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleStartAndEndTimes (IMintedCapped.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCurrentTierInfo(address, bytes32) external view returns (bytes32, uint, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCurrentTierInfo (IMintedCapped.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCurrentTierInfo(address, bytes32) external view returns (bytes32, uint, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCurrentTierInfo (IMintedCapped.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleTier (IMintedCapped.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleTier (IMintedCapped.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getCrowdsaleTier (IMintedCapped.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '' of SaleManagerIdx.getTierWhitelist (IMintedCapped.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTierWhitelist (IMintedCapped.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getTierWhitelist (IMintedCapped.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleMaxRaise(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleMaxRaise (IMintedCapped.sol#66) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleMaxRaise(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleMaxRaise (IMintedCapped.sol#66) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTierList(address, bytes32) external view returns (bytes32[]);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleTierList (IMintedCapped.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTierList(address, bytes32) external view returns (bytes32[]);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleTierList (IMintedCapped.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleUniqueBuyers (IMintedCapped.sol#68) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleUniqueBuyers (IMintedCapped.sol#68) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getTierStartAndEndDates (IMintedCapped.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTierStartAndEndDates (IMintedCapped.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getTierStartAndEndDates (IMintedCapped.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getTokensSold (IMintedCapped.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTokensSold (IMintedCapped.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getWhitelistStatus (IMintedCapped.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getWhitelistStatus (IMintedCapped.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getWhitelistStatus (IMintedCapped.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_2' of SaleManagerIdx.getWhitelistStatus (IMintedCapped.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedDestinationInfo(address) external view returns (uint, uint, uint, uint);\n",
          "message": "Parameter '' of ITokenManager.getReservedDestinationInfo (IMintedCapped.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedTokenDestinationList(address, bytes32) external view returns (uint, address[]);\n",
          "message": "Parameter '' of TokenManagerIdx.getReservedTokenDestinationList (IMintedCapped.sol#84) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedTokenDestinationList(address, bytes32) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_0' of TokenManagerIdx.getReservedTokenDestinationList (IMintedCapped.sol#84) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedDestinationInfo(address, bytes32, address) external view returns (uint, uint, uint, uint);\n",
          "message": "Parameter '' of TokenManagerIdx.getReservedDestinationInfo (IMintedCapped.sol#85) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedDestinationInfo(address, bytes32, address) external view returns (uint, uint, uint, uint);\n",
          "message": "Parameter '_scope_0' of TokenManagerIdx.getReservedDestinationInfo (IMintedCapped.sol#85) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReservedDestinationInfo(address, bytes32, address) external view returns (uint, uint, uint, uint);\n",
          "message": "Parameter '_scope_1' of TokenManagerIdx.getReservedDestinationInfo (IMintedCapped.sol#85) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_0' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_1' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_2' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_3' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_4' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_5' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_6' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_7' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function init(address, uint, bytes32, uint, uint, uint, uint, bool, bool, address) external;\n",
          "message": "Parameter '_scope_8' of IMintedCapped.init (IMintedCapped.sol#96) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}