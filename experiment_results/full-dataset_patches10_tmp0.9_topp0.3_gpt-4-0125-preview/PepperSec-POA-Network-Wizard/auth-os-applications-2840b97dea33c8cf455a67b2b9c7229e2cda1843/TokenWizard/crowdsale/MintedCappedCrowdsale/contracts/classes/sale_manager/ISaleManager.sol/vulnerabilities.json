{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_37"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in ISaleManager.sol:\n\t- pragma solidity^0.4.23 (ISaleManager.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of ISaleManager.getCrowdsaleTier (ISaleManager.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(uint) external view returns (uint, address[]);\n",
          "message": "Parameter '' of ISaleManager.getTierWhitelist (ISaleManager.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(uint) external view returns (uint, uint);\n",
          "message": "Parameter '' of ISaleManager.getTierStartAndEndDates (ISaleManager.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '' of ISaleManager.getWhitelistStatus (ISaleManager.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of ISaleManager.getWhitelistStatus (ISaleManager.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '' of SaleManagerIdx.getAdmin (ISaleManager.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAdmin(address, bytes32) external view returns (address);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getAdmin (ISaleManager.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleInfo (ISaleManager.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleInfo(address, bytes32) external view returns (uint, address, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleInfo (ISaleManager.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.isCrowdsaleFull (ISaleManager.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isCrowdsaleFull(address, bytes32) external view returns (bool, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.isCrowdsaleFull (ISaleManager.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleStartAndEndTimes (ISaleManager.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleStartAndEndTimes(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleStartAndEndTimes (ISaleManager.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCurrentTierInfo(address, bytes32) external view returns (bytes32, uint, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCurrentTierInfo (ISaleManager.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCurrentTierInfo(address, bytes32) external view returns (bytes32, uint, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCurrentTierInfo (ISaleManager.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleTier (ISaleManager.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleTier (ISaleManager.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTier(address, bytes32, uint) external view returns (bytes32, uint, uint, uint, uint, bool, bool);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getCrowdsaleTier (ISaleManager.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '' of SaleManagerIdx.getTierWhitelist (ISaleManager.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTierWhitelist (ISaleManager.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierWhitelist(address, bytes32, uint) external view returns (uint, address[]);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getTierWhitelist (ISaleManager.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleMaxRaise(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleMaxRaise (ISaleManager.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleMaxRaise(address, bytes32) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleMaxRaise (ISaleManager.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTierList(address, bytes32) external view returns (bytes32[]);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleTierList (ISaleManager.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleTierList(address, bytes32) external view returns (bytes32[]);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleTierList (ISaleManager.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getCrowdsaleUniqueBuyers (ISaleManager.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getCrowdsaleUniqueBuyers(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getCrowdsaleUniqueBuyers (ISaleManager.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getTierStartAndEndDates (ISaleManager.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTierStartAndEndDates (ISaleManager.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTierStartAndEndDates(address, bytes32, uint) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getTierStartAndEndDates (ISaleManager.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getTokensSold (ISaleManager.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTokensSold(address, bytes32) external view returns (uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getTokensSold (ISaleManager.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '' of SaleManagerIdx.getWhitelistStatus (ISaleManager.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_0' of SaleManagerIdx.getWhitelistStatus (ISaleManager.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_1' of SaleManagerIdx.getWhitelistStatus (ISaleManager.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getWhitelistStatus(address, bytes32, uint, address) external view returns (uint, uint);\n",
          "message": "Parameter '_scope_2' of SaleManagerIdx.getWhitelistStatus (ISaleManager.sol#34) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}