{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (address _storage, bytes32 _registry_exec_id, address _provider, bytes32 _app_name) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    proxy_admin = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    app_storage = StorageInterface(_storage);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    registry_exec_id = _registry_exec_id;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "    provider = _provider;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "    app_name = _app_name;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_22"
      ],
      "vulnerability_findings": [
        {
          "name": "uninitialized-state",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public app_exec_id;\n",
          "message": "Proxy.app_exec_id (Proxy.sol#31) is never initialized. It is used in:\n\t- checkErrors (Proxy.sol#56-76)\n"
        },
        {
          "name": "locked-ether",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function () external payable { }\n",
          "message": "Contract locking ether found in Proxy.sol:\n\tContract Proxy has payable functions:\n\t - fallback (Proxy.sol#41)\n\t - exec (Proxy.sol#53)\n\tBut does not have a function to withdraw the ether\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": 76,
          "vulnerability_code": "  function checkErrors() internal {\n\n    // If the returned data begins with selector 'Error(string)', get the contained message -\n\n    string memory message;\n\n    bytes4 err_sel = bytes4(keccak256('Error(string)'));\n\n    assembly {\n\n      // Get pointer to free memory, place returned data at pointer, and update free memory pointer\n\n      let ptr := mload(0x40)\n\n      returndatacopy(ptr, 0, returndatasize)\n\n      mstore(0x40, add(ptr, returndatasize))\n\n\n\n      // Check value at pointer for equality with Error selector -\n\n      if eq(mload(ptr), and(err_sel, 0xffffffff00000000000000000000000000000000000000000000000000000000)) {\n\n        message := add(0x24, ptr)\n\n      }\n\n    }\n\n    // If no returned message exists, emit a default error message. Otherwise, emit the error message\n\n    if (bytes(message).length == 0)\n\n      emit StorageException(app_exec_id, \"No error recieved\");\n\n    else\n\n      emit StorageException(app_exec_id, message);\n",
          "message": "Proxy.checkErrors uses assembly (Proxy.sol#56-76)\n\t- Proxy.sol#60-72\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public app_exec_id;\n",
          "message": "Proxy.app_exec_id should be constant (Proxy.sol#31)\nProxy.app_index should be constant (Proxy.sol#32)\nProxy.app_version should be constant (Proxy.sol#30)\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": "Detected issues with version pragma in Proxy.sol:\n\t- pragma solidity^0.4.23 (Proxy.sol#3): it allows old versions\n\t- pragma solidity^0.4.23 (Proxy.sol#18): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTarget(bytes32 exec_id, bytes4 selector)\n",
          "message": "Parameter 'exec_id' of StorageInterface.getTarget (Proxy.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getIndex(bytes32 exec_id) external view returns (address index);\n",
          "message": "Parameter 'exec_id' of StorageInterface.getIndex (Proxy.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function createInstance(address sender, bytes32 app_name, address provider, bytes32 registry_exec_id, bytes calldata)\n",
          "message": "Parameter 'app_name' of StorageInterface.createInstance (Proxy.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function createInstance(address sender, bytes32 app_name, address provider, bytes32 registry_exec_id, bytes calldata)\n",
          "message": "Parameter 'registry_exec_id' of StorageInterface.createInstance (Proxy.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function exec(address sender, bytes32 exec_id, bytes calldata)\n",
          "message": "Parameter 'exec_id' of StorageInterface.exec (Proxy.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (address _storage, bytes32 _registry_exec_id, address _provider, bytes32 _app_name) public {\n",
          "message": "Parameter '_storage' of Proxy. (Proxy.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (address _storage, bytes32 _registry_exec_id, address _provider, bytes32 _app_name) public {\n",
          "message": "Parameter '_registry_exec_id' of Proxy. (Proxy.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (address _storage, bytes32 _registry_exec_id, address _provider, bytes32 _app_name) public {\n",
          "message": "Parameter '_provider' of Proxy. (Proxy.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor (address _storage, bytes32 _registry_exec_id, address _provider, bytes32 _app_name) public {\n",
          "message": "Parameter '_app_name' of Proxy. (Proxy.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address public proxy_admin;\n",
          "message": "Variable 'Proxy.proxy_admin' (Proxy.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  StorageInterface public app_storage;\n",
          "message": "Variable 'Proxy.app_storage' (Proxy.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public registry_exec_id;\n",
          "message": "Variable 'Proxy.registry_exec_id' (Proxy.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public app_name;\n",
          "message": "Variable 'Proxy.app_name' (Proxy.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public app_version;\n",
          "message": "Variable 'Proxy.app_version' (Proxy.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes32 public app_exec_id;\n",
          "message": "Variable 'Proxy.app_exec_id' (Proxy.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address public app_index;\n",
          "message": "Variable 'Proxy.app_index' (Proxy.sol#32) is not in mixedCase\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bytes4 internal constant EXEC_SEL = bytes4(keccak256('exec(address,bytes32,bytes)'));\n",
          "message": "Proxy.EXEC_SEL (Proxy.sol#35) is never used in Proxy\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_LOCKED_MONEY",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract Proxy {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "    assembly {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}