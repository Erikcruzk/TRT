{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_17"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.17;\n",
          "message": "Detected issues with version pragma in Curve.sol:\n\t- pragma solidity^0.5.17 (Curve.sol#5): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function remove_liquidity_imbalance(\n\n        uint256[2] calldata amounts,\n\n        uint256 max_burn_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_imbalance' (Curve.sol#8-11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 max_burn_amount\n",
          "message": "Parameter 'max_burn_amount' of ICurveFi.remove_liquidity_imbalance (Curve.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function remove_liquidity_imbalance(\n\n        uint256[3] calldata amounts,\n\n        uint256 max_burn_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_imbalance' (Curve.sol#13-16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 max_burn_amount\n",
          "message": "Parameter 'max_burn_amount' of ICurveFi.remove_liquidity_imbalance (Curve.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function remove_liquidity_imbalance(\n\n        uint256[4] calldata amounts,\n\n        uint256 max_burn_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_imbalance' (Curve.sol#18-21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 max_burn_amount\n",
          "message": "Parameter 'max_burn_amount' of ICurveFi.remove_liquidity_imbalance (Curve.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function remove_liquidity_imbalance(\n\n        uint256[5] calldata amounts,\n\n        uint256 max_burn_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_imbalance' (Curve.sol#23-26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 max_burn_amount\n",
          "message": "Parameter 'max_burn_amount' of ICurveFi.remove_liquidity_imbalance (Curve.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function remove_liquidity(uint256 _amount, uint256[2] calldata amounts)\n",
          "message": "Function 'ICurveFi.remove_liquidity' (Curve.sol#28-29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 32,
          "vulnerability_code": "    function remove_liquidity(uint256 _amount, uint256[3] calldata amounts)\n",
          "message": "Function 'ICurveFi.remove_liquidity' (Curve.sol#31-32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function remove_liquidity(uint256 _amount, uint256[4] calldata amounts)\n",
          "message": "Function 'ICurveFi.remove_liquidity' (Curve.sol#34-35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function remove_liquidity(uint256 _amount, uint256[5] calldata amounts)\n",
          "message": "Function 'ICurveFi.remove_liquidity' (Curve.sol#37-38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": 46,
          "vulnerability_code": "    function remove_liquidity_one_coin(\n\n        uint256,\n\n        int128,\n\n        uint256\n",
          "message": "Function 'Zap.remove_liquidity_one_coin' (Curve.sol#42-46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256,\n",
          "message": "Parameter '' of Zap.remove_liquidity_one_coin (Curve.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "        int128,\n",
          "message": "Parameter '_scope_0' of Zap.remove_liquidity_one_coin (Curve.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256\n",
          "message": "Parameter '_scope_1' of Zap.remove_liquidity_one_coin (Curve.sol#45) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.17;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}