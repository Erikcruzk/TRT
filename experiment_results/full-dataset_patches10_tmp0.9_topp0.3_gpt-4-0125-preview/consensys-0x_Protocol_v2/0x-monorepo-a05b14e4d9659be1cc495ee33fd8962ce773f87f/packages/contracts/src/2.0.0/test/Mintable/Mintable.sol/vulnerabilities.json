{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 111,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 112,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[msg.sender] >= _value,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"ERC20_INSUFFICIENT_BALANCE\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 114,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 116,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_to] + _value >= balances[_to],\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 117,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"OVERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 118,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 129,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 130,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_from] >= _value,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 131,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"ERC20_INSUFFICIENT_BALANCE\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 132,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 133,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 134,
          "vulnerability_to_line": null,
          "vulnerability_code": "            allowed[_from][msg.sender] >= _value,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 135,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"ERC20_INSUFFICIENT_ALLOWANCE\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 137,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 138,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_to] + _value >= balances[_to],\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"OVERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 140,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 211,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_from] >= _value,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 212,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"ERC20_INSUFFICIENT_BALANCE\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 213,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 214,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 215,
          "vulnerability_to_line": null,
          "vulnerability_code": "            allowance >= _value,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 216,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"ERC20_INSUFFICIENT_ALLOWANCE\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 219,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balances[_to] + _value >= balances[_to],\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 220,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"OVERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 221,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 247,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 248,
          "vulnerability_to_line": null,
          "vulnerability_code": "            c / a == b,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"UINT256_OVERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 250,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 268,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 269,
          "vulnerability_to_line": null,
          "vulnerability_code": "            b <= a,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 270,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"UINT256_UNDERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 271,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 281,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 282,
          "vulnerability_to_line": null,
          "vulnerability_code": "            c >= a,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"UINT256_OVERFLOW\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 284,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 355,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 356,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _value <= 100000000000000000000,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 357,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Minting more than 100000000000000000000 is not allowed.\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 358,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 355,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 356,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _value <= 100000000000000000000,\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 357,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Minting more than 100000000000000000000 is not allowed.\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 358,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_27"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 209,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 allowance = allowed[_from][msg.sender];\n",
          "message": "UnlimitedAllowanceToken.transferFrom.allowance (local variable @ Mintable.sol#209) shadows:\n\t- ERC20Token.allowance (function @ Mintable.sol#165-171)\n\t- IERC20Token.allowance (function @ Mintable.sol#60-62)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 32,
          "vulnerability_code": "    function transfer(address _to, uint256 _value)\n\n        public\n",
          "message": "IERC20Token.transfer (Mintable.sol#30-32) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 107,
          "vulnerability_to_line": 123,
          "vulnerability_code": "    function transfer(address _to, uint256 _value)\n\n        public\n\n        returns (bool)\n\n    {\n\n        require(\n\n            balances[msg.sender] >= _value,\n\n            \"ERC20_INSUFFICIENT_BALANCE\"\n\n        );\n\n        require(\n\n            balances[_to] + _value >= balances[_to],\n\n            \"OVERFLOW\"\n\n        );\n\n        balances[msg.sender] -= _value;\n\n        balances[_to] += _value;\n\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n",
          "message": "ERC20Token.transfer (Mintable.sol#107-123) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": 41,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n\n        public\n",
          "message": "IERC20Token.transferFrom (Mintable.sol#39-41) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": 229,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n\n        public\n\n        returns (bool)\n\n    {\n\n        uint256 allowance = allowed[_from][msg.sender];\n\n        require(\n\n            balances[_from] >= _value,\n\n            \"ERC20_INSUFFICIENT_BALANCE\"\n\n        );\n\n        require(\n\n            allowance >= _value,\n\n            \"ERC20_INSUFFICIENT_ALLOWANCE\"\n\n        );\n\n        require(\n\n            balances[_to] + _value >= balances[_to],\n\n            \"OVERFLOW\"\n\n        );\n\n        balances[_to] += _value;\n\n        balances[_from] -= _value;\n\n        if (allowance < MAX_UINT) {\n\n            allowed[_from][msg.sender] -= _value;\n\n        }\n\n        emit Transfer(_from, _to, _value);\n\n        return true;\n",
          "message": "UnlimitedAllowanceToken.transferFrom (Mintable.sol#205-229) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": 146,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n\n        public\n\n        returns (bool)\n\n    {\n\n        require(\n\n            balances[_from] >= _value,\n\n            \"ERC20_INSUFFICIENT_BALANCE\"\n\n        );\n\n        require(\n\n            allowed[_from][msg.sender] >= _value,\n\n            \"ERC20_INSUFFICIENT_ALLOWANCE\"\n\n        );\n\n        require(\n\n            balances[_to] + _value >= balances[_to],\n\n            \"OVERFLOW\"\n\n        );\n\n        balances[_to] += _value;\n\n        balances[_from] -= _value;\n\n        allowed[_from][msg.sender] -= _value;\n\n        emit Transfer(_from, _to, _value);\n\n        return true;\n",
          "message": "ERC20Token.transferFrom (Mintable.sol#125-146) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": 49,
          "vulnerability_code": "    function approve(address _spender, uint256 _value)\n\n        public\n",
          "message": "IERC20Token.approve (Mintable.sol#47-49) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": 155,
          "vulnerability_code": "    function approve(address _spender, uint256 _value)\n\n        public\n\n        returns (bool)\n\n    {\n\n        allowed[msg.sender][_spender] = _value;\n\n        emit Approval(msg.sender, _spender, _value);\n\n        return true;\n",
          "message": "ERC20Token.approve (Mintable.sol#148-155) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 157,
          "vulnerability_to_line": 163,
          "vulnerability_code": "    function balanceOf(address _owner)\n\n        public\n\n        view\n\n        returns (uint256)\n\n    {\n\n        return balances[_owner];\n",
          "message": "ERC20Token.balanceOf (Mintable.sol#157-163) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": 55,
          "vulnerability_code": "    function balanceOf(address _owner)\n\n        public view\n",
          "message": "IERC20Token.balanceOf (Mintable.sol#53-55) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function allowance(address _owner, address _spender)\n\n        public view\n",
          "message": "IERC20Token.allowance (Mintable.sol#60-62) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 165,
          "vulnerability_to_line": 171,
          "vulnerability_code": "    function allowance(address _owner, address _spender)\n\n        public\n\n        view\n\n        returns (uint256)\n\n    {\n\n        return allowed[_owner][_spender];\n",
          "message": "ERC20Token.allowance (Mintable.sol#165-171) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 352,
          "vulnerability_to_line": 361,
          "vulnerability_code": "    function mint(uint256 _value)\n\n        public\n\n    {\n\n        require(\n\n            _value <= 100000000000000000000,\n\n            \"Minting more than 100000000000000000000 is not allowed.\"\n\n        );\n\n        balances[msg.sender] = safeAdd(_value, balances[msg.sender]);\n\n        totalSupply = safeAdd(totalSupply, _value);\n",
          "message": "Mintable.mint (Mintable.sol#352-361) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 107,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value)\n",
          "message": "Parameter '_to' of ERC20Token.transfer (Mintable.sol#107) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 107,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value)\n",
          "message": "Parameter '_value' of ERC20Token.transfer (Mintable.sol#107) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_from' of ERC20Token.transferFrom (Mintable.sol#125) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_to' of ERC20Token.transferFrom (Mintable.sol#125) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_value' of ERC20Token.transferFrom (Mintable.sol#125) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approve(address _spender, uint256 _value)\n",
          "message": "Parameter '_spender' of ERC20Token.approve (Mintable.sol#148) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approve(address _spender, uint256 _value)\n",
          "message": "Parameter '_value' of ERC20Token.approve (Mintable.sol#148) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 157,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address _owner)\n",
          "message": "Parameter '_owner' of ERC20Token.balanceOf (Mintable.sol#157) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 165,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function allowance(address _owner, address _spender)\n",
          "message": "Parameter '_owner' of ERC20Token.allowance (Mintable.sol#165) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 165,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function allowance(address _owner, address _spender)\n",
          "message": "Parameter '_spender' of ERC20Token.allowance (Mintable.sol#165) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_from' of UnlimitedAllowanceToken.transferFrom (Mintable.sol#205) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_to' of UnlimitedAllowanceToken.transferFrom (Mintable.sol#205) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferFrom(address _from, address _to, uint256 _value)\n",
          "message": "Parameter '_value' of UnlimitedAllowanceToken.transferFrom (Mintable.sol#205) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 352,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mint(uint256 _value)\n",
          "message": "Parameter '_value' of Mintable.mint (Mintable.sol#352) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approve(address _spender, uint256 _value)\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}