{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function owner()\n\n      public view\n",
          "message": "IOwnable_v1.owner (IOwnable_v1.sol#14-16) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function transferOwnership(address newOwner)\n",
          "message": "IOwnable_v1.transferOwnership (IOwnable_v1.sol#18-19) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": "Detected issues with version pragma in IOwnable_v1.sol:\n\t- pragma solidity^0.4.19 (IOwnable_v1.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 20,
          "vulnerability_code": "contract IOwnable_v1 {\n\n  \n\n    function owner()\n\n      public view\n\n      returns (address);\n\n  \n\n    function transferOwnership(address newOwner)\n\n      public;\n",
          "message": "Contract 'IOwnable_v1' (IOwnable_v1.sol#12-20) is not in CapWords\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}