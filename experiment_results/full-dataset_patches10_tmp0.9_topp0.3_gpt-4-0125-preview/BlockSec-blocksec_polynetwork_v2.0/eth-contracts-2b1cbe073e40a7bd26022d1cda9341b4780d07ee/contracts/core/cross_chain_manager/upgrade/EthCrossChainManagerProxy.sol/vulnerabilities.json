{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract EthCrossChainManagerProxy is IEthCrossChainManagerProxy, Ownable, Pausable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal { }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address msgSender = _msgSender();\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = msgSender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "        emit OwnershipTransferred(address(0), msgSender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 140,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 141,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _paused = false;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 142,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 221,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _ethCrossChainManagerAddr) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 222,
          "vulnerability_to_line": null,
          "vulnerability_code": "        EthCrossChainManagerAddr_ = _ethCrossChainManagerAddr;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 223,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isOwner(), \"Ownable: caller is not the owner\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 155,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_paused, \"Pausable: paused\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 163,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_paused, \"Pausable: not paused\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 241,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(pause(), \"pause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 242,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.pause(), \"pause EthCrossChainManager contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 247,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.upgradeToNew(_newEthCrossChainManagerAddr), \"EthCrossChainManager upgradeToNew failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 251,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(neweccm.isOwner(), \"EthCrossChainManagerProxy is not owner of new EthCrossChainManager contract\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 256,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.unpause(), \"unpause EthCrossChainManager contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 257,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(unpause(), \"unpause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 265,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 267,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.setChainId(_newChainId), \"set chain ID failed. \");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 241,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(pause(), \"pause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 242,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.pause(), \"pause EthCrossChainManager contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 247,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.upgradeToNew(_newEthCrossChainManagerAddr), \"EthCrossChainManager upgradeToNew failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 251,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(neweccm.isOwner(), \"EthCrossChainManagerProxy is not owner of new EthCrossChainManager contract\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 256,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(eccm.unpause(), \"unpause EthCrossChainManager contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 257,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(unpause(), \"unpause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 265,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_22"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": 253,
          "vulnerability_code": "    function upgradeEthCrossChainManager(address _newEthCrossChainManagerAddr) onlyOwner whenPaused public returns (bool) {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        if (!eccm.paused()) {\n\n            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n\n        }\n\n        require(eccm.upgradeToNew(_newEthCrossChainManagerAddr), \"EthCrossChainManager upgradeToNew failed!\");\n\n        IUpgradableECCM neweccm = IUpgradableECCM(_newEthCrossChainManagerAddr);\n\n        require(neweccm.isOwner(), \"EthCrossChainManagerProxy is not owner of new EthCrossChainManager contract\");\n\n        EthCrossChainManagerAddr_ = _newEthCrossChainManagerAddr;\n",
          "message": "Reentrancy in EthCrossChainManagerProxy.upgradeEthCrossChainManager (EthCrossChainManagerProxy.sol#244-253):\n\tExternal calls:\n\t- ! eccm.paused() (EthCrossChainManagerProxy.sol#246-248)\n\t- require(bool,string)(eccm.pause(),Pause old EthCrossChainManager contract failed!) (EthCrossChainManagerProxy.sol#247)\n\t- require(bool,string)(eccm.upgradeToNew(_newEthCrossChainManagerAddr),EthCrossChainManager upgradeToNew failed!) (EthCrossChainManagerProxy.sol#249)\n\t- require(bool,string)(neweccm.isOwner(),EthCrossChainManagerProxy is not owner of new EthCrossChainManager contract) (EthCrossChainManagerProxy.sol#251)\n\tState variables written after the call(s):\n\t- EthCrossChainManagerAddr_ (EthCrossChainManagerProxy.sol#252)\n"
        },
        {
          "name": "reentrancy-benign",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": 258,
          "vulnerability_code": "    function unpauseEthCrossChainManager() onlyOwner whenPaused public returns (bool) {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        require(eccm.unpause(), \"unpause EthCrossChainManager contract failed!\");\n\n        require(unpause(), \"unpause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "Reentrancy in EthCrossChainManagerProxy.unpauseEthCrossChainManager (EthCrossChainManagerProxy.sol#254-258):\n\tExternal calls:\n\t- require(bool,string)(eccm.unpause(),unpause EthCrossChainManager contract failed!) (EthCrossChainManagerProxy.sol#256)\n\tState variables written after the call(s):\n\t- _paused (EthCrossChainManagerProxy.sol#257)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": 64,
          "vulnerability_code": "    function owner() public view returns (address) {\n\n        return _owner;\n",
          "message": "Ownable.owner (EthCrossChainManagerProxy.sol#62-64) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": 91,
          "vulnerability_code": "    function renounceOwnership() public onlyOwner {\n\n        emit OwnershipTransferred(_owner, address(0));\n\n        _owner = address(0);\n",
          "message": "Ownable.renounceOwnership (EthCrossChainManagerProxy.sol#88-91) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": 99,
          "vulnerability_code": "    function transferOwnership(address newOwner) public  onlyOwner {\n\n        _transferOwnership(newOwner);\n",
          "message": "Ownable.transferOwnership (EthCrossChainManagerProxy.sol#97-99) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getEthCrossChainManager() external view returns (address);\n",
          "message": "IEthCrossChainManagerProxy.getEthCrossChainManager (EthCrossChainManagerProxy.sol#208) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 259,
          "vulnerability_to_line": 261,
          "vulnerability_code": "    function getEthCrossChainManager() whenNotPaused public view returns (address) {\n\n        return EthCrossChainManagerAddr_;\n",
          "message": "EthCrossChainManagerProxy.getEthCrossChainManager (EthCrossChainManagerProxy.sol#259-261) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 239,
          "vulnerability_to_line": 243,
          "vulnerability_code": "    function pauseEthCrossChainManager() onlyOwner whenNotPaused public returns (bool) {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        require(pause(), \"pause EthCrossChainManagerProxy contract failed!\");\n\n        require(eccm.pause(), \"pause EthCrossChainManager contract failed!\");\n",
          "message": "EthCrossChainManagerProxy.pauseEthCrossChainManager (EthCrossChainManagerProxy.sol#239-243) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": 253,
          "vulnerability_code": "    function upgradeEthCrossChainManager(address _newEthCrossChainManagerAddr) onlyOwner whenPaused public returns (bool) {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        if (!eccm.paused()) {\n\n            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n\n        }\n\n        require(eccm.upgradeToNew(_newEthCrossChainManagerAddr), \"EthCrossChainManager upgradeToNew failed!\");\n\n        IUpgradableECCM neweccm = IUpgradableECCM(_newEthCrossChainManagerAddr);\n\n        require(neweccm.isOwner(), \"EthCrossChainManagerProxy is not owner of new EthCrossChainManager contract\");\n\n        EthCrossChainManagerAddr_ = _newEthCrossChainManagerAddr;\n",
          "message": "EthCrossChainManagerProxy.upgradeEthCrossChainManager (EthCrossChainManagerProxy.sol#244-253) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": 258,
          "vulnerability_code": "    function unpauseEthCrossChainManager() onlyOwner whenPaused public returns (bool) {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        require(eccm.unpause(), \"unpause EthCrossChainManager contract failed!\");\n\n        require(unpause(), \"unpause EthCrossChainManagerProxy contract failed!\");\n",
          "message": "EthCrossChainManagerProxy.unpauseEthCrossChainManager (EthCrossChainManagerProxy.sol#254-258) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 262,
          "vulnerability_to_line": 268,
          "vulnerability_code": "    function changeManagerChainID(uint64 _newChainId) onlyOwner whenPaused public {\n\n        IUpgradableECCM eccm = IUpgradableECCM(EthCrossChainManagerAddr_);\n\n        if (!eccm.paused()) {\n\n            require(eccm.pause(), \"Pause old EthCrossChainManager contract failed!\");\n\n        }\n\n        require(eccm.setChainId(_newChainId), \"set chain ID failed. \");\n",
          "message": "EthCrossChainManagerProxy.changeManagerChainID (EthCrossChainManagerProxy.sol#262-268) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": "Detected issues with version pragma in EthCrossChainManagerProxy.sol:\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#3): it allows old versions\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#34): it allows old versions\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#113): it allows old versions\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#186): it allows old versions\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#202): it allows old versions\n\t- pragma solidity^0.5.0 (EthCrossChainManagerProxy.sol#213): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function _msgSender() internal view returns (address payable) {\n\n        return msg.sender;\n",
          "message": "Function 'Context._msgSender' (EthCrossChainManagerProxy.sol#22-24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function _msgData() internal view returns (bytes memory) {\n\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n\n        return msg.data;\n",
          "message": "Function 'Context._msgData' (EthCrossChainManagerProxy.sol#26-29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 104,
          "vulnerability_to_line": 108,
          "vulnerability_code": "    function _transferOwnership(address newOwner) internal {\n\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\n        emit OwnershipTransferred(_owner, newOwner);\n\n        _owner = newOwner;\n",
          "message": "Function 'Ownable._transferOwnership' (EthCrossChainManagerProxy.sol#104-108) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 170,
          "vulnerability_to_line": 173,
          "vulnerability_code": "    function _pause() internal whenNotPaused {\n\n        _paused = true;\n\n        emit Paused(_msgSender());\n",
          "message": "Function 'Pausable._pause' (EthCrossChainManagerProxy.sol#170-173) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 178,
          "vulnerability_to_line": 181,
          "vulnerability_code": "    function _unpause() internal whenPaused {\n\n        _paused = false;\n\n        emit Unpaused(_msgSender());\n",
          "message": "Function 'Pausable._unpause' (EthCrossChainManagerProxy.sol#178-181) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeToNew(address) external returns (bool);\n",
          "message": "Parameter '' of IUpgradableECCM.upgradeToNew (EthCrossChainManagerProxy.sol#195) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 221,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _ethCrossChainManagerAddr) public {\n",
          "message": "Parameter '_ethCrossChainManagerAddr' of EthCrossChainManagerProxy. (EthCrossChainManagerProxy.sol#221) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeEthCrossChainManager(address _newEthCrossChainManagerAddr) onlyOwner whenPaused public returns (bool) {\n",
          "message": "Parameter '_newEthCrossChainManagerAddr' of EthCrossChainManagerProxy.upgradeEthCrossChainManager (EthCrossChainManagerProxy.sol#244) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 262,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function changeManagerChainID(uint64 _newChainId) onlyOwner whenPaused public {\n",
          "message": "Parameter '_newChainId' of EthCrossChainManagerProxy.changeManagerChainID (EthCrossChainManagerProxy.sol#262) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 219,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private EthCrossChainManagerAddr_;\n",
          "message": "Variable 'EthCrossChainManagerProxy.EthCrossChainManagerAddr_' (EthCrossChainManagerProxy.sol#219) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = address(0);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 239,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function pauseEthCrossChainManager() onlyOwner whenNotPaused public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeEthCrossChainManager(address _newEthCrossChainManagerAddr) onlyOwner whenPaused public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function unpauseEthCrossChainManager() onlyOwner whenPaused public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 186,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 202,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 213,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _owner;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 135,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool private _paused;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 219,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private EthCrossChainManagerAddr_;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}