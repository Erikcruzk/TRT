{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "inefficient-state-variable-increment",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter += 1;\n",
          "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 195,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // The counter starts at one to prevent changing it from zero to a non-zero\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 196,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // value, which is a more expensive operation.\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter = 1;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 277,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(rate > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 278,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(wallet != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 279,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(token != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 280,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 281,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _rate = rate;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 282,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _wallet = wallet;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _token = token;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 284,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 476,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 cap) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 477,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(cap > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 478,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _cap = cap;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 479,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 542,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 543,
          "vulnerability_to_line": null,
          "vulnerability_code": "    // solium-disable-next-line security/no-block-members\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 544,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(openingTime >= block.timestamp);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 545,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(closingTime > openingTime);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 546,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 547,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _openingTime = openingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 548,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _closingTime = closingTime;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 549,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 617,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 618,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _finalized = false;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 619,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 669,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 670,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _primary = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 671,
          "vulnerability_to_line": null,
          "vulnerability_code": "    emit PrimaryTransferred(_primary);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 672,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 806,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(address beneficiary) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 807,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(beneficiary != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 808,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _beneficiary = beneficiary;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 809,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _state = State.Active;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 810,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 907,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 goal) internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 908,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(goal > 0);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 909,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _escrow = new RefundEscrow(wallet());\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 910,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _goal = goal;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 911,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1233,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1234,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _addMinter(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1235,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {}\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1340,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _name = name;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1341,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _symbol = symbol;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1342,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _decimals = decimals;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1343,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1381,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {}\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1404,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1405,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 openingTime,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1406,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 closingTime,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1407,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 rate,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1408,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address wallet,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1409,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 cap,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1410,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20Mintable token,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1411,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 goal\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1412,
          "vulnerability_to_line": null,
          "vulnerability_code": "  )\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 1413,
          "vulnerability_to_line": null,
          "vulnerability_code": "    public\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_77"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 857,
          "vulnerability_to_line": 862,
          "vulnerability_code": "  function beneficiaryWithdraw() public {\n\n    require(_state == State.Closed);\n\n    _beneficiary.transfer(address(this).balance);\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiaryWithdraw (SampleCrowdsale.sol#857-862) sends eth to arbitrary user\n\tDangerous calls:\n\t- _beneficiary.transfer(address(this).balance) (SampleCrowdsale.sol#859-860)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.rate (local variable @ SampleCrowdsale.sol#276) shadows:\n\t- Crowdsale.rate (function @ SampleCrowdsale.sol#317-320)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.wallet (local variable @ SampleCrowdsale.sol#276) shadows:\n\t- Crowdsale.wallet (function @ SampleCrowdsale.sol#310-313)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 rate, address wallet, IERC20 token) internal {\n",
          "message": "Crowdsale.constructor.token (local variable @ SampleCrowdsale.sol#276) shadows:\n\t- Crowdsale.token (function @ SampleCrowdsale.sol#303-306)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 476,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 cap) internal {\n",
          "message": "CappedCrowdsale.constructor.cap (local variable @ SampleCrowdsale.sol#476) shadows:\n\t- CappedCrowdsale.cap (function @ SampleCrowdsale.sol#484-487)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 542,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.openingTime (local variable @ SampleCrowdsale.sol#542) shadows:\n\t- TimedCrowdsale.openingTime (function @ SampleCrowdsale.sol#554-557)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 542,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n",
          "message": "TimedCrowdsale.constructor.closingTime (local variable @ SampleCrowdsale.sol#542) shadows:\n\t- TimedCrowdsale.closingTime (function @ SampleCrowdsale.sol#561-564)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 806,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(address beneficiary) public {\n",
          "message": "RefundEscrow.constructor.beneficiary (local variable @ SampleCrowdsale.sol#806) shadows:\n\t- RefundEscrow.beneficiary (function @ SampleCrowdsale.sol#822-826)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 907,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(uint256 goal) internal {\n",
          "message": "RefundableCrowdsale.constructor.goal (local variable @ SampleCrowdsale.sol#907) shadows:\n\t- RefundableCrowdsale.goal (function @ SampleCrowdsale.sol#916-920)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": "ERC20Detailed.constructor.name (local variable @ SampleCrowdsale.sol#1339) shadows:\n\t- ERC20Detailed.name (function @ SampleCrowdsale.sol#1348-1352)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": "ERC20Detailed.constructor.symbol (local variable @ SampleCrowdsale.sol#1339) shadows:\n\t- ERC20Detailed.symbol (function @ SampleCrowdsale.sol#1355-1359)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": "ERC20Detailed.constructor.decimals (local variable @ SampleCrowdsale.sol#1339) shadows:\n\t- ERC20Detailed.decimals (function @ SampleCrowdsale.sol#1362-1366)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1405,
          "vulnerability_to_line": 1406,
          "vulnerability_code": "    uint256 openingTime,\n",
          "message": "SampleCrowdsale.constructor.openingTime (local variable @ SampleCrowdsale.sol#1405-1406) shadows:\n\t- TimedCrowdsale.openingTime (function @ SampleCrowdsale.sol#554-557)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1406,
          "vulnerability_to_line": 1407,
          "vulnerability_code": "    uint256 closingTime,\n",
          "message": "SampleCrowdsale.constructor.closingTime (local variable @ SampleCrowdsale.sol#1406-1407) shadows:\n\t- TimedCrowdsale.closingTime (function @ SampleCrowdsale.sol#561-564)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1407,
          "vulnerability_to_line": 1408,
          "vulnerability_code": "    uint256 rate,\n",
          "message": "SampleCrowdsale.constructor.rate (local variable @ SampleCrowdsale.sol#1407-1408) shadows:\n\t- Crowdsale.rate (function @ SampleCrowdsale.sol#317-320)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1408,
          "vulnerability_to_line": 1409,
          "vulnerability_code": "    address wallet,\n",
          "message": "SampleCrowdsale.constructor.wallet (local variable @ SampleCrowdsale.sol#1408-1409) shadows:\n\t- Crowdsale.wallet (function @ SampleCrowdsale.sol#310-313)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1409,
          "vulnerability_to_line": 1410,
          "vulnerability_code": "    uint256 cap,\n",
          "message": "SampleCrowdsale.constructor.cap (local variable @ SampleCrowdsale.sol#1409-1410) shadows:\n\t- CappedCrowdsale.cap (function @ SampleCrowdsale.sol#484-487)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1410,
          "vulnerability_to_line": 1411,
          "vulnerability_code": "    ERC20Mintable token,\n",
          "message": "SampleCrowdsale.constructor.token (local variable @ SampleCrowdsale.sol#1410-1411) shadows:\n\t- Crowdsale.token (function @ SampleCrowdsale.sol#303-306)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 1411,
          "vulnerability_to_line": 1412,
          "vulnerability_code": "    uint256 goal\n",
          "message": "SampleCrowdsale.constructor.goal (local variable @ SampleCrowdsale.sol#1411-1412) shadows:\n\t- RefundableCrowdsale.goal (function @ SampleCrowdsale.sol#916-920)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 542,
          "vulnerability_to_line": 550,
          "vulnerability_code": "  constructor(uint256 openingTime, uint256 closingTime) internal {\n\n    // solium-disable-next-line security/no-block-members\n\n    require(openingTime >= block.timestamp);\n\n    require(closingTime > openingTime);\n\n\n\n    _openingTime = openingTime;\n\n    _closingTime = closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.constructor (SampleCrowdsale.sol#542-550) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(openingTime >= block.timestamp) (SampleCrowdsale.sol#544)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 568,
          "vulnerability_to_line": 572,
          "vulnerability_code": "  function isOpen() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.isOpen (SampleCrowdsale.sol#568-572) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= _openingTime && block.timestamp <= _closingTime (SampleCrowdsale.sol#570)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 577,
          "vulnerability_to_line": 581,
          "vulnerability_code": "  function hasClosed() public view returns (bool) {\n\n    // solium-disable-next-line security/no-block-members\n\n    return block.timestamp > _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.hasClosed (SampleCrowdsale.sol#577-581) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > _closingTime (SampleCrowdsale.sol#579)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 317,
          "vulnerability_to_line": 320,
          "vulnerability_code": "  function rate() public view returns(uint256) {\n\n    return _rate;\n\n  }\n",
          "message": "Crowdsale.rate (SampleCrowdsale.sol#317-320) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 484,
          "vulnerability_to_line": 487,
          "vulnerability_code": "  function cap() public view returns(uint256) {\n\n    return _cap;\n\n  }\n",
          "message": "CappedCrowdsale.cap (SampleCrowdsale.sol#484-487) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 492,
          "vulnerability_to_line": 495,
          "vulnerability_code": "  function capReached() public view returns (bool) {\n\n    return weiRaised() >= _cap;\n\n  }\n",
          "message": "CappedCrowdsale.capReached (SampleCrowdsale.sol#492-495) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 554,
          "vulnerability_to_line": 557,
          "vulnerability_code": "  function openingTime() public view returns(uint256) {\n\n    return _openingTime;\n\n  }\n",
          "message": "TimedCrowdsale.openingTime (SampleCrowdsale.sol#554-557) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 561,
          "vulnerability_to_line": 564,
          "vulnerability_code": "  function closingTime() public view returns(uint256) {\n\n    return _closingTime;\n\n  }\n",
          "message": "TimedCrowdsale.closingTime (SampleCrowdsale.sol#561-564) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 632,
          "vulnerability_to_line": 641,
          "vulnerability_code": "  function finalize() public {\n\n    require(!_finalized);\n\n    require(hasClosed());\n\n\n\n    _finalized = true;\n\n\n\n    _finalization();\n\n    emit CrowdsaleFinalized();\n\n  }\n",
          "message": "FinalizableCrowdsale.finalize (SampleCrowdsale.sol#632-641) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 685,
          "vulnerability_to_line": 688,
          "vulnerability_code": "  function primary() public view returns (address) {\n\n    return _primary;\n\n  }\n",
          "message": "Secondary.primary (SampleCrowdsale.sol#685-688) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 693,
          "vulnerability_to_line": 698,
          "vulnerability_code": "  function transferPrimary(address recipient) public onlyPrimary {\n\n    require(recipient != address(0));\n\n    _primary = recipient;\n\n    emit PrimaryTransferred(_primary);\n\n  }\n",
          "message": "Secondary.transferPrimary (SampleCrowdsale.sol#693-698) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 725,
          "vulnerability_to_line": 728,
          "vulnerability_code": "  function depositsOf(address payee) public view returns (uint256) {\n\n    return _deposits[payee];\n\n  }\n",
          "message": "Escrow.depositsOf (SampleCrowdsale.sol#725-728) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 815,
          "vulnerability_to_line": 819,
          "vulnerability_code": "  function state() public view returns (State) {\n\n    return _state;\n\n  }\n\n\n",
          "message": "RefundEscrow.state (SampleCrowdsale.sol#815-819) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 822,
          "vulnerability_to_line": 826,
          "vulnerability_code": "  function beneficiary() public view returns (address) {\n\n    return _beneficiary;\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiary (SampleCrowdsale.sol#822-826) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 839,
          "vulnerability_to_line": 845,
          "vulnerability_code": "  function close() public onlyPrimary {\n\n    require(_state == State.Active);\n\n    _state = State.Closed;\n\n    emit RefundsClosed();\n\n  }\n\n\n",
          "message": "RefundEscrow.close (SampleCrowdsale.sol#839-845) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 848,
          "vulnerability_to_line": 854,
          "vulnerability_code": "  function enableRefunds() public onlyPrimary {\n\n    require(_state == State.Active);\n\n    _state = State.Refunding;\n\n    emit RefundsEnabled();\n\n  }\n\n\n",
          "message": "RefundEscrow.enableRefunds (SampleCrowdsale.sol#848-854) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 857,
          "vulnerability_to_line": 862,
          "vulnerability_code": "  function beneficiaryWithdraw() public {\n\n    require(_state == State.Closed);\n\n    _beneficiary.transfer(address(this).balance);\n\n  }\n\n\n",
          "message": "RefundEscrow.beneficiaryWithdraw (SampleCrowdsale.sol#857-862) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 916,
          "vulnerability_to_line": 920,
          "vulnerability_code": "  function goal() public view returns(uint256) {\n\n    return _goal;\n\n  }\n\n\n",
          "message": "RefundableCrowdsale.goal (SampleCrowdsale.sol#916-920) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 924,
          "vulnerability_to_line": 931,
          "vulnerability_code": "  function claimRefund(address beneficiary) public {\n\n    require(finalized());\n\n    require(!goalReached());\n\n\n\n    _escrow.withdraw(beneficiary);\n\n  }\n\n\n",
          "message": "RefundableCrowdsale.claimRefund (SampleCrowdsale.sol#924-931) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 78,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply() external view returns (uint256);\n",
          "message": "IERC20.totalSupply (SampleCrowdsale.sol#78) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 986,
          "vulnerability_to_line": 990,
          "vulnerability_code": "  function totalSupply() public view returns (uint256) {\n\n    return _totalSupply;\n\n  }\n\n\n",
          "message": "ERC20.totalSupply (SampleCrowdsale.sol#986-990) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address who) external view returns (uint256);\n",
          "message": "IERC20.balanceOf (SampleCrowdsale.sol#80) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 995,
          "vulnerability_to_line": 999,
          "vulnerability_code": "  function balanceOf(address owner) public view returns (uint256) {\n\n    return _balances[owner];\n\n  }\n\n\n",
          "message": "ERC20.balanceOf (SampleCrowdsale.sol#995-999) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": 83,
          "vulnerability_code": "  function allowance(address owner, address spender)\n",
          "message": "IERC20.allowance (SampleCrowdsale.sol#82-83) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1005,
          "vulnerability_to_line": 1016,
          "vulnerability_code": "  function allowance(\n\n    address owner,\n\n    address spender\n\n   )\n\n    public\n\n    view\n\n    returns (uint256)\n\n  {\n\n    return _allowed[owner][spender];\n\n  }\n\n\n",
          "message": "ERC20.allowance (SampleCrowdsale.sol#1005-1016) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1021,
          "vulnerability_to_line": 1026,
          "vulnerability_code": "  function transfer(address to, uint256 value) public returns (bool) {\n\n    _transfer(msg.sender, to, value);\n\n    return true;\n\n  }\n\n\n",
          "message": "ERC20.transfer (SampleCrowdsale.sol#1021-1026) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address to, uint256 value) external returns (bool);\n",
          "message": "IERC20.transfer (SampleCrowdsale.sol#85) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 87,
          "vulnerability_to_line": 88,
          "vulnerability_code": "  function approve(address spender, uint256 value)\n",
          "message": "IERC20.approve (SampleCrowdsale.sol#87-88) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1035,
          "vulnerability_to_line": 1043,
          "vulnerability_code": "  function approve(address spender, uint256 value) public returns (bool) {\n\n    require(spender != address(0));\n\n\n\n    _allowed[msg.sender][spender] = value;\n\n    emit Approval(msg.sender, spender, value);\n\n    return true;\n\n  }\n\n\n",
          "message": "ERC20.approve (SampleCrowdsale.sol#1035-1043) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1049,
          "vulnerability_to_line": 1064,
          "vulnerability_code": "  function transferFrom(\n\n    address from,\n\n    address to,\n\n    uint256 value\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    require(value <= _allowed[from][msg.sender]);\n\n\n\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n\n    _transfer(from, to, value);\n\n    return true;\n\n  }\n\n\n",
          "message": "ERC20.transferFrom (SampleCrowdsale.sol#1049-1064) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": 91,
          "vulnerability_code": "  function transferFrom(address from, address to, uint256 value)\n",
          "message": "IERC20.transferFrom (SampleCrowdsale.sol#90-91) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1073,
          "vulnerability_to_line": 1088,
          "vulnerability_code": "  function increaseAllowance(\n\n    address spender,\n\n    uint256 addedValue\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    require(spender != address(0));\n\n\n\n    _allowed[msg.sender][spender] = (\n\n      _allowed[msg.sender][spender].add(addedValue));\n\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n\n    return true;\n\n  }\n\n\n",
          "message": "ERC20.increaseAllowance (SampleCrowdsale.sol#1073-1088) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1097,
          "vulnerability_to_line": 1112,
          "vulnerability_code": "  function decreaseAllowance(\n\n    address spender,\n\n    uint256 subtractedValue\n\n  )\n\n    public\n\n    returns (bool)\n\n  {\n\n    require(spender != address(0));\n\n\n\n    _allowed[msg.sender][spender] = (\n\n      _allowed[msg.sender][spender].sub(subtractedValue));\n\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n\n    return true;\n\n  }\n\n\n",
          "message": "ERC20.decreaseAllowance (SampleCrowdsale.sol#1097-1112) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1246,
          "vulnerability_to_line": 1250,
          "vulnerability_code": "  function addMinter(address account) public onlyMinter {\n\n    _addMinter(account);\n\n  }\n\n\n",
          "message": "MinterRole.addMinter (SampleCrowdsale.sol#1246-1250) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1250,
          "vulnerability_to_line": 1254,
          "vulnerability_code": "  function renounceMinter() public {\n\n    _removeMinter(msg.sender);\n\n  }\n\n\n",
          "message": "MinterRole.renounceMinter (SampleCrowdsale.sol#1250-1254) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1281,
          "vulnerability_to_line": 1293,
          "vulnerability_code": "  function mint(\n\n    address to,\n\n    uint256 value\n\n  )\n\n    public\n\n    onlyMinter\n\n    returns (bool)\n\n  {\n\n    _mint(to, value);\n\n    return true;\n\n  }\n\n}\n",
          "message": "ERC20Mintable.mint (SampleCrowdsale.sol#1281-1293) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1348,
          "vulnerability_to_line": 1352,
          "vulnerability_code": "  function name() public view returns(string) {\n\n    return _name;\n\n  }\n\n\n",
          "message": "ERC20Detailed.name (SampleCrowdsale.sol#1348-1352) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1355,
          "vulnerability_to_line": 1359,
          "vulnerability_code": "  function symbol() public view returns(string) {\n\n    return _symbol;\n\n  }\n\n\n",
          "message": "ERC20Detailed.symbol (SampleCrowdsale.sol#1355-1359) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 1362,
          "vulnerability_to_line": 1366,
          "vulnerability_code": "  function decimals() public view returns(uint8) {\n\n    return _decimals;\n\n  }\n\n}\n",
          "message": "ERC20Detailed.decimals (SampleCrowdsale.sol#1362-1366) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 371,
          "vulnerability_to_line": 381,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    require(beneficiary != address(0));\n\n    require(weiAmount != 0);\n\n  }\n",
          "message": "Function 'Crowdsale._preValidatePurchase' (SampleCrowdsale.sol#371-381) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 387,
          "vulnerability_to_line": 396,
          "vulnerability_code": "  function _postValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._postValidatePurchase' (SampleCrowdsale.sol#387-396) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 402,
          "vulnerability_to_line": 410,
          "vulnerability_code": "  function _deliverTokens(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _token.safeTransfer(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._deliverTokens' (SampleCrowdsale.sol#402-410) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 416,
          "vulnerability_to_line": 424,
          "vulnerability_code": "  function _processPurchase(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    _deliverTokens(beneficiary, tokenAmount);\n\n  }\n",
          "message": "Function 'Crowdsale._processPurchase' (SampleCrowdsale.sol#416-424) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": 438,
          "vulnerability_code": "  function _updatePurchasingState(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n  {\n\n    // optional override\n\n  }\n",
          "message": "Function 'Crowdsale._updatePurchasingState' (SampleCrowdsale.sol#430-438) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 444,
          "vulnerability_to_line": 449,
          "vulnerability_code": "  function _getTokenAmount(uint256 weiAmount)\n\n    internal view returns (uint256)\n\n  {\n\n    return weiAmount.mul(_rate);\n\n  }\n",
          "message": "Function 'Crowdsale._getTokenAmount' (SampleCrowdsale.sol#444-449) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 453,
          "vulnerability_to_line": 456,
          "vulnerability_code": "  function _forwardFunds() internal {\n\n    _wallet.transfer(msg.value);\n\n  }\n",
          "message": "Function 'Crowdsale._forwardFunds' (SampleCrowdsale.sol#453-456) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 501,
          "vulnerability_to_line": 511,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    view\n\n  {\n\n    super._preValidatePurchase(beneficiary, weiAmount);\n\n    require(weiRaised().add(weiAmount) <= _cap);\n\n  }\n",
          "message": "Function 'CappedCrowdsale._preValidatePurchase' (SampleCrowdsale.sol#501-511) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 587,
          "vulnerability_to_line": 597,
          "vulnerability_code": "  function _preValidatePurchase(\n\n    address beneficiary,\n\n    uint256 weiAmount\n\n  )\n\n    internal\n\n    onlyWhileOpen\n\n    view\n\n  {\n\n    super._preValidatePurchase(beneficiary, weiAmount);\n\n  }\n",
          "message": "Function 'TimedCrowdsale._preValidatePurchase' (SampleCrowdsale.sol#587-597) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 647,
          "vulnerability_to_line": 649,
          "vulnerability_code": "  function _finalization() internal {\n\n  }\n",
          "message": "Function 'FinalizableCrowdsale._finalization' (SampleCrowdsale.sol#647-649) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 956,
          "vulnerability_to_line": 960,
          "vulnerability_code": "  function _forwardFunds() internal {\n\n    _escrow.deposit.value(msg.value)(msg.sender);\n\n  }\n\n\n",
          "message": "Function 'RefundableCrowdsale._forwardFunds' (SampleCrowdsale.sol#956-960) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 942,
          "vulnerability_to_line": 953,
          "vulnerability_code": "  function _finalization() internal {\n\n    if (goalReached()) {\n\n      _escrow.close();\n\n      _escrow.beneficiaryWithdraw();\n\n    } else {\n\n      _escrow.enableRefunds();\n\n    }\n\n\n\n    super._finalization();\n\n  }\n\n\n",
          "message": "Function 'RefundableCrowdsale._finalization' (SampleCrowdsale.sol#942-953) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1118,
          "vulnerability_to_line": 1127,
          "vulnerability_code": "  function _transfer(address from, address to, uint256 value) internal {\n\n    require(value <= _balances[from]);\n\n    require(to != address(0));\n\n\n\n    _balances[from] = _balances[from].sub(value);\n\n    _balances[to] = _balances[to].add(value);\n\n    emit Transfer(from, to, value);\n\n  }\n\n\n",
          "message": "Function 'ERC20._transfer' (SampleCrowdsale.sol#1118-1127) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1134,
          "vulnerability_to_line": 1141,
          "vulnerability_code": "  function _mint(address account, uint256 value) internal {\n\n    require(account != 0);\n\n    _totalSupply = _totalSupply.add(value);\n\n    _balances[account] = _balances[account].add(value);\n\n    emit Transfer(address(0), account, value);\n\n  }\n\n\n",
          "message": "Function 'ERC20._mint' (SampleCrowdsale.sol#1134-1141) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1147,
          "vulnerability_to_line": 1156,
          "vulnerability_code": "  function _burn(address account, uint256 value) internal {\n\n    require(account != 0);\n\n    require(value <= _balances[account]);\n\n\n\n    _totalSupply = _totalSupply.sub(value);\n\n    _balances[account] = _balances[account].sub(value);\n\n    emit Transfer(account, address(0), value);\n\n  }\n\n\n",
          "message": "Function 'ERC20._burn' (SampleCrowdsale.sol#1147-1156) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1163,
          "vulnerability_to_line": 1173,
          "vulnerability_code": "  function _burnFrom(address account, uint256 value) internal {\n\n    require(value <= _allowed[account][msg.sender]);\n\n\n\n    // Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n\n    // this function needs to emit an event with the updated approval.\n\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(\n\n      value);\n\n    _burn(account, value);\n\n  }\n\n}\n",
          "message": "Function 'ERC20._burnFrom' (SampleCrowdsale.sol#1163-1173) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1254,
          "vulnerability_to_line": 1259,
          "vulnerability_code": "  function _addMinter(address account) internal {\n\n    minters.add(account);\n\n    emit MinterAdded(account);\n\n  }\n\n\n",
          "message": "Function 'MinterRole._addMinter' (SampleCrowdsale.sol#1254-1259) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1259,
          "vulnerability_to_line": 1264,
          "vulnerability_code": "  function _removeMinter(address account) internal {\n\n    minters.remove(account);\n\n    emit MinterRemoved(account);\n\n  }\n\n}\n",
          "message": "Function 'MinterRole._removeMinter' (SampleCrowdsale.sol#1259-1264) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 1312,
          "vulnerability_to_line": 1323,
          "vulnerability_code": "  function _deliverTokens(\n\n    address beneficiary,\n\n    uint256 tokenAmount\n\n  )\n\n    internal\n\n  {\n\n    // Potentially dangerous assumption about the type of the token.\n\n    require(\n\n      ERC20Mintable(address(token())).mint(beneficiary, tokenAmount));\n\n  }\n\n}\n",
          "message": "Function 'MintedCrowdsale._deliverTokens' (SampleCrowdsale.sol#1312-1323) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 1035,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address spender, uint256 value) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 181,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 460,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 516,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 602,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 653,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 702,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 757,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 780,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 872,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 964,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1176,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1223,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1267,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1296,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1326,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 1369,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 192,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _guardCounter;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "  IERC20 private _token;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 243,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _wallet;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _rate;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _weiRaised;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 470,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _cap;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 526,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _openingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 527,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _closingTime;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 613,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bool private _finalized;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 660,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _primary;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 723,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => uint256) private _deposits;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 799,
          "vulnerability_to_line": null,
          "vulnerability_code": "  State private _state;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 800,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _beneficiary;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 898,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _goal;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 901,
          "vulnerability_to_line": null,
          "vulnerability_code": "  RefundEscrow private _escrow;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 977,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping (address => uint256) private _balances;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 979,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping (address => mapping (address => uint256)) private _allowed;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 981,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private _totalSupply;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1231,
          "vulnerability_to_line": null,
          "vulnerability_code": "  Roles.Role private minters;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1335,
          "vulnerability_to_line": null,
          "vulnerability_code": "  string private _name;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1336,
          "vulnerability_to_line": null,
          "vulnerability_code": "  string private _symbol;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1337,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint8 private _decimals;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 119,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 524,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 611,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 718,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 895,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 975,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 1339,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(string name, string symbol, uint8 decimals) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 1348,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function name() public view returns(string) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 1355,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function symbol() public view returns(string) {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Transaction-Ordering Dependence (TOD)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        },
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 1349,
          "vulnerability_to_line": null,
          "vulnerability_code": "    return _name;\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Concurrency bug",
          "vulnerability_from_line": 749,
          "vulnerability_to_line": null,
          "vulnerability_code": "    payee.transfer(payment);\n",
          "message": null
        },
        {
          "name": "Concurrency bug",
          "vulnerability_from_line": 859,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _beneficiary.transfer(address(this).balance);\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _guardCounter += 1;\n",
          "message": null
        }
      ]
    }
  }
}