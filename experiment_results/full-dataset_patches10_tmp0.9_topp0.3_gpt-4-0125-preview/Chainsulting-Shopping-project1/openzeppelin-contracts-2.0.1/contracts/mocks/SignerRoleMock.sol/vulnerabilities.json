{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _addSigner(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": 75,
          "vulnerability_code": "  function addSigner(address account) public onlySigner {\n\n    _addSigner(account);\n",
          "message": "SignerRole.addSigner (SignerRoleMock.sol#73-75) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": 79,
          "vulnerability_code": "  function renounceSigner() public {\n\n    _removeSigner(msg.sender);\n",
          "message": "SignerRole.renounceSigner (SignerRoleMock.sol#77-79) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": 99,
          "vulnerability_code": "  function removeSigner(address account) public {\n\n    _removeSigner(account);\n",
          "message": "SignerRoleMock.removeSigner (SignerRoleMock.sol#97-99) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 101,
          "vulnerability_to_line": 102,
          "vulnerability_code": "  function onlySignerMock() public view onlySigner {\n",
          "message": "SignerRoleMock.onlySignerMock (SignerRoleMock.sol#101-102) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 81,
          "vulnerability_to_line": 84,
          "vulnerability_code": "  function _addSigner(address account) internal {\n\n    signers.add(account);\n\n    emit SignerAdded(account);\n",
          "message": "Function 'SignerRole._addSigner' (SignerRoleMock.sol#81-84) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 86,
          "vulnerability_to_line": 89,
          "vulnerability_code": "  function _removeSigner(address account) internal {\n\n    signers.remove(account);\n\n    emit SignerRemoved(account);\n",
          "message": "Function 'SignerRole._removeSigner' (SignerRoleMock.sol#86-89) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": 107,
          "vulnerability_code": "  function _removeSigner(address account) internal {\n\n    super._removeSigner(account);\n",
          "message": "Function 'SignerRoleMock._removeSigner' (SignerRoleMock.sol#105-107) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 94,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  Roles.Role private signers;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}