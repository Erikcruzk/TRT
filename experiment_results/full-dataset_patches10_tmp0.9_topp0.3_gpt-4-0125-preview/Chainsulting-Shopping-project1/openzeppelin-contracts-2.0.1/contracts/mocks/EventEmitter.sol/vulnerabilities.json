{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 22,
          "vulnerability_code": "  function emitArgumentless() public {\n\n    emit Argumentless();\n",
          "message": "EventEmitter.emitArgumentless (EventEmitter.sol#20-22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": 26,
          "vulnerability_code": "  function emitShortUint(uint8 value) public {\n\n    emit ShortUint(value);\n",
          "message": "EventEmitter.emitShortUint (EventEmitter.sol#24-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 30,
          "vulnerability_code": "  function emitShortInt(int8 value) public {\n\n    emit ShortInt(value);\n",
          "message": "EventEmitter.emitShortInt (EventEmitter.sol#28-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": 34,
          "vulnerability_code": "  function emitLongUint(uint256 value) public {\n\n    emit LongUint(value);\n",
          "message": "EventEmitter.emitLongUint (EventEmitter.sol#32-34) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": 38,
          "vulnerability_code": "  function emitLongInt(int256 value) public {\n\n    emit LongInt(value);\n",
          "message": "EventEmitter.emitLongInt (EventEmitter.sol#36-38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": 42,
          "vulnerability_code": "  function emitAddress(address value) public {\n\n    emit Address(value);\n",
          "message": "EventEmitter.emitAddress (EventEmitter.sol#40-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 46,
          "vulnerability_code": "  function emitBoolean(bool value) public {\n\n    emit Boolean(value);\n",
          "message": "EventEmitter.emitBoolean (EventEmitter.sol#44-46) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": 50,
          "vulnerability_code": "  function emitString(string value) public {\n\n    emit String(value);\n",
          "message": "EventEmitter.emitString (EventEmitter.sol#48-50) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": 58,
          "vulnerability_code": "  function emitLongUintBooleanString(\n\n    uint256 uintValue,\n\n    bool booleanValue,\n\n    string stringValue)\n\n  public {\n\n    emit LongUintBooleanString(uintValue, booleanValue, stringValue);\n",
          "message": "EventEmitter.emitLongUintBooleanString (EventEmitter.sol#52-58) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 63,
          "vulnerability_code": "  function emitLongUintAndBoolean(uint256 uintValue, bool boolValue) public {\n\n    emit LongUint(uintValue);\n\n    emit Boolean(boolValue);\n",
          "message": "EventEmitter.emitLongUintAndBoolean (EventEmitter.sol#60-63) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emitString(string value) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string stringValue)\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function emitString(string value) public {\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}