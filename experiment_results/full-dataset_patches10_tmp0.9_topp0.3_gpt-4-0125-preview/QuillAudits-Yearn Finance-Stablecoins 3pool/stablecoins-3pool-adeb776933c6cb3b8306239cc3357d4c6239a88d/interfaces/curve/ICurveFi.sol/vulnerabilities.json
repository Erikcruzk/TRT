{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_14"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.12;\n",
          "message": "Detected issues with version pragma in ICurveFi.sol:\n\t- pragma solidity^0.6.12 (ICurveFi.sol#5): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function get_virtual_price() external view returns (uint);\n",
          "message": "Function 'ICurveFi.get_virtual_price' (ICurveFi.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balances(uint) external view returns (uint);\n",
          "message": "Parameter '' of ICurveFi.balances (ICurveFi.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function add_liquidity(\n\n        uint256[3] calldata amounts,\n\n        uint256 min_mint_amount\n",
          "message": "Function 'ICurveFi.add_liquidity' (ICurveFi.sol#10-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 min_mint_amount\n",
          "message": "Parameter 'min_mint_amount' of ICurveFi.add_liquidity (ICurveFi.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function remove_liquidity(\n\n        uint256 _amount,\n\n        uint256[3] calldata min_amounts\n",
          "message": "Function 'ICurveFi.remove_liquidity' (ICurveFi.sol#14-17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256[3] calldata min_amounts\n",
          "message": "Parameter 'min_amounts' of ICurveFi.remove_liquidity (ICurveFi.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function remove_liquidity_one_coin(\n\n        uint256 _token_amount, \n\n        int128 i, \n\n        uint256 min_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_one_coin' (ICurveFi.sol#18-22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _token_amount, \n",
          "message": "Parameter '_token_amount' of ICurveFi.remove_liquidity_one_coin (ICurveFi.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 min_amount\n",
          "message": "Parameter 'min_amount' of ICurveFi.remove_liquidity_one_coin (ICurveFi.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function remove_liquidity_imbalance(\n\n        uint256[3] calldata amounts,\n\n        uint256 max_burn_amount\n",
          "message": "Function 'ICurveFi.remove_liquidity_imbalance' (ICurveFi.sol#23-26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 max_burn_amount\n",
          "message": "Parameter 'max_burn_amount' of ICurveFi.remove_liquidity_imbalance (ICurveFi.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "        int128 from, int128 to, uint256 _from_amount, uint256 _min_to_amount\n",
          "message": "Parameter '_from_amount' of ICurveFi.exchange (ICurveFi.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "        int128 from, int128 to, uint256 _from_amount, uint256 _min_to_amount\n",
          "message": "Parameter '_min_to_amount' of ICurveFi.exchange (ICurveFi.sol#28) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.12;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}