{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 657,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 658,
          "vulnerability_to_line": null,
          "vulnerability_code": "            state.validFactories[_factory],\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 659,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Invalid factory\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 660,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_15"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 644,
          "vulnerability_to_line": 690,
          "vulnerability_code": "    function createSet(\n\n        address _factory,\n\n        address[] calldata _components,\n\n        uint256[] calldata _units,\n\n        uint256 _naturalUnit,\n\n        bytes32 _name,\n\n        bytes32 _symbol,\n\n        bytes calldata _callData\n\n    )\n\n        external\n\n        returns (address)\n\n    {\n\n        // Verify Factory is linked to Core\n\n        require(\n\n            state.validFactories[_factory],\n\n            \"Invalid factory\"\n\n        );\n\n\n\n        // Create the Set\n\n        address newSetTokenAddress = ISetFactory(_factory).createSet(\n\n            _components,\n\n            _units,\n\n            _naturalUnit,\n\n            _name,\n\n            _symbol,\n\n            _callData\n\n        );\n\n\n\n        // Add Set to the mapping of tracked Sets\n\n        state.validSets[newSetTokenAddress] = true;\n\n\n\n        // Add Set to the array of tracked Sets\n\n        state.setTokens.push(newSetTokenAddress);\n\n\n\n        // Emit Set Token creation log\n\n        emit SetTokenCreated(\n\n            newSetTokenAddress,\n\n            _factory,\n\n            _components,\n\n            _units,\n\n            _naturalUnit,\n\n            _name,\n\n            _symbol\n\n        );\n\n\n\n        return newSetTokenAddress;\n",
          "message": "Reentrancy in CoreFactory.createSet (CoreFactory.sol#644-690):\n\tExternal calls:\n\t- newSetTokenAddress = ISetFactory(_factory).createSet(_components,_units,_naturalUnit,_name,_symbol,_callData) (CoreFactory.sol#663-670)\n\tState variables written after the call(s):\n\t- state (CoreFactory.sol#673)\n\t- state (CoreFactory.sol#676)\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.4;\n",
          "message": "Detected issues with version pragma in CoreFactory.sol:\n\t- pragma solidity0.5.4 (CoreFactory.sol#19): it allows old versions\n\t- pragma solidity0.5.4 (CoreFactory.sol#85): it allows old versions\n\t- pragma solidity0.5.4 (CoreFactory.sol#253): it allows old versions\n\t- pragma solidity0.5.4 (CoreFactory.sol#542): it allows old versions\n\t- pragma solidity0.5.4 (CoreFactory.sol#606): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 343,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint8 _exchangeId\n",
          "message": "Parameter '_exchangeId' of CoreState.exchangeIds (CoreFactory.sol#343) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 385,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _factory\n",
          "message": "Parameter '_factory' of CoreState.validFactories (CoreFactory.sol#385) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 401,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _module\n",
          "message": "Parameter '_module' of CoreState.validModules (CoreFactory.sol#401) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 417,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _set\n",
          "message": "Parameter '_set' of CoreState.validSets (CoreFactory.sol#417) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 433,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _set\n",
          "message": "Parameter '_set' of CoreState.disabledSets (CoreFactory.sol#433) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 449,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _priceLibrary\n",
          "message": "Parameter '_priceLibrary' of CoreState.validPriceLibraries (CoreFactory.sol#449) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 645,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _factory,\n",
          "message": "Parameter '_factory' of CoreFactory.createSet (CoreFactory.sol#645) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 646,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address[] calldata _components,\n",
          "message": "Parameter '_components' of CoreFactory.createSet (CoreFactory.sol#646) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 647,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256[] calldata _units,\n",
          "message": "Parameter '_units' of CoreFactory.createSet (CoreFactory.sol#647) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 648,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _naturalUnit,\n",
          "message": "Parameter '_naturalUnit' of CoreFactory.createSet (CoreFactory.sol#648) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 649,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _name,\n",
          "message": "Parameter '_name' of CoreFactory.createSet (CoreFactory.sol#649) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 650,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _symbol,\n",
          "message": "Parameter '_symbol' of CoreFactory.createSet (CoreFactory.sol#650) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 651,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes calldata _callData\n",
          "message": "Parameter '_callData' of CoreFactory.createSet (CoreFactory.sol#651) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function batchTransfer(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 576,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function createSet(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 644,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function createSet(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256[] calldata _quantities,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _from,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _to\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 578,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint[] calldata _units,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 579,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _naturalUnit,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 580,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _name,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 581,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _symbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 582,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes calldata _callData\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 585,
          "vulnerability_to_line": null,
          "vulnerability_code": "        returns (address);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 646,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address[] calldata _components,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 647,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256[] calldata _units,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 647,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256[] calldata _units,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 648,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _naturalUnit,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 649,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _name,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 650,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes32 _symbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 651,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes calldata _callData\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 654,
          "vulnerability_to_line": null,
          "vulnerability_code": "        returns (address)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 657,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 663,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address newSetTokenAddress = ISetFactory(_factory).createSet(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 673,
          "vulnerability_to_line": null,
          "vulnerability_code": "        state.validSets[newSetTokenAddress] = true;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 676,
          "vulnerability_to_line": null,
          "vulnerability_code": "        state.setTokens.push(newSetTokenAddress);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 679,
          "vulnerability_to_line": null,
          "vulnerability_code": "        emit SetTokenCreated(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 679,
          "vulnerability_to_line": null,
          "vulnerability_code": "        emit SetTokenCreated(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 682,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _components,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 684,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _naturalUnit,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 686,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _symbol\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 689,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return newSetTokenAddress;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "// File: ../sc_datasets/DAppSCAN/Trail_of_Bits-setprotocol/set-protocol-contracts-b4acf144c10b1d9f3ecde4ee2820931df1cb8e4a/contracts/core/interfaces/ITransferProxy.sol\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "// File: ../sc_datasets/DAppSCAN/Trail_of_Bits-setprotocol/set-protocol-contracts-b4acf144c10b1d9f3ecde4ee2820931df1cb8e4a/contracts/core/interfaces/ITransferProxy.sol\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 463,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTokens()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.setTokens;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 476,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function modules()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 481,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.modules;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 489,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function factories()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 494,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.factories;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 502,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function exchanges()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 507,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.exchanges;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 515,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function priceLibraries()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 520,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.priceLibraries;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 463,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTokens()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.setTokens;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 476,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function modules()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 481,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.modules;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 489,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function factories()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 494,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.factories;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 502,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function exchanges()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 507,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.exchanges;\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 515,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function priceLibraries()\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 520,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return state.priceLibraries;\n",
          "message": null
        }
      ]
    }
  }
}