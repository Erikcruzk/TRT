{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 209,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract RevoVesting is Ownable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 160,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal { }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 177,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 178,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address msgSender = _msgSender();\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 179,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = msgSender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 180,
          "vulnerability_to_line": null,
          "vulnerability_code": "        emit OwnershipTransferred(address(0), msgSender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 181,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 234,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address revoTokenAddress, uint256 start, uint256 cliffDuration, uint256 duration) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 235,
          "vulnerability_to_line": null,
          "vulnerability_code": "        revoToken = IRevoTokenContract(revoTokenAddress);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "        tokenAddress = revoTokenAddress;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 237,
          "vulnerability_to_line": null,
          "vulnerability_code": "        \n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 238,
          "vulnerability_to_line": null,
          "vulnerability_code": "        start = start == 0 ? now : start;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 239,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "        // solhint-disable-next-line max-line-length\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 241,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 242,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(duration > 0, \"TokenVesting: duration is 0\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 243,
          "vulnerability_to_line": null,
          "vulnerability_code": "        // solhint-disable-next-line max-line-length\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c >= a, \"SafeMath: addition overflow\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 188,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 241,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 242,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(duration > 0, \"TokenVesting: duration is 0\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 293,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 241,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_20"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 290,
          "vulnerability_to_line": 300,
          "vulnerability_code": "    function release() public onlyOwner {\n\n        uint256 unreleased = releasableAmount();\n\n\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n\n\n        _released[address(tokenAddress)] = _released[address(tokenAddress)].add(unreleased);\n\n\n\n        revoToken.transfer(owner(), unreleased);\n\n\n\n        emit TokensReleased(address(tokenAddress), unreleased);\n",
          "message": "Reentrancy in RevoVesting.release (RevoMarketing.sol#290-300):\n\tExternal calls:\n\t- unreleased = releasableAmount() (RevoMarketing.sol#291)\n\tState variables written after the call(s):\n\t- _released (RevoMarketing.sol#295)\n"
        },
        {
          "name": "unused-return",
          "vulnerability_from_line": 290,
          "vulnerability_to_line": 300,
          "vulnerability_code": "    function release() public onlyOwner {\n\n        uint256 unreleased = releasableAmount();\n\n\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n\n\n        _released[address(tokenAddress)] = _released[address(tokenAddress)].add(unreleased);\n\n\n\n        revoToken.transfer(owner(), unreleased);\n\n\n\n        emit TokensReleased(address(tokenAddress), unreleased);\n",
          "message": "RevoVesting.release (RevoMarketing.sol#290-300) does not use the value returned by external calls:\n\t-revoToken.transfer(owner(),unreleased) (RevoMarketing.sol#297)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 234,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address revoTokenAddress, uint256 start, uint256 cliffDuration, uint256 duration) public {\n",
          "message": "RevoVesting.constructor.start (local variable @ RevoMarketing.sol#234) shadows:\n\t- RevoVesting.start (function @ RevoMarketing.sol#269-271)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 234,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address revoTokenAddress, uint256 start, uint256 cliffDuration, uint256 duration) public {\n",
          "message": "RevoVesting.constructor.duration (local variable @ RevoMarketing.sol#234) shadows:\n\t- RevoVesting.duration (function @ RevoMarketing.sol#276-278)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 234,
          "vulnerability_to_line": 249,
          "vulnerability_code": "    constructor(address revoTokenAddress, uint256 start, uint256 cliffDuration, uint256 duration) public {\n\n        revoToken = IRevoTokenContract(revoTokenAddress);\n\n        tokenAddress = revoTokenAddress;\n\n        \n\n        start = start == 0 ? now : start;\n\n\n\n        // solhint-disable-next-line max-line-length\n\n        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n\n        require(duration > 0, \"TokenVesting: duration is 0\");\n\n        // solhint-disable-next-line max-line-length\n\n        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n\n\n\n        _duration = duration;\n\n        _cliff = start.add(cliffDuration);\n\n        _start = start;\n",
          "message": "RevoVesting.constructor (RevoMarketing.sol#234-249) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(start.add(duration) > block.timestamp,TokenVesting: final time is before current time) (RevoMarketing.sol#244)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 312,
          "vulnerability_to_line": 323,
          "vulnerability_code": "    function vestedAmount() public view returns (uint256) {\n\n        uint256 currentBalance = revoToken.balanceOf(address(this));\n\n        uint256 totalBalance = currentBalance.add(_released[address(tokenAddress)]);\n\n\n\n        if (block.timestamp < _cliff) {\n\n            return 0;\n\n        } else if (block.timestamp >= _start.add(_duration)) {\n\n            return totalBalance;\n\n        } else {\n\n            return totalBalance.mul(block.timestamp.sub(_start)).div(_duration);\n\n        }\n",
          "message": "RevoVesting.vestedAmount (RevoMarketing.sol#312-323) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= _start.add(_duration) (RevoMarketing.sol#318-322)\n\t- block.timestamp < _cliff (RevoMarketing.sol#316-322)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 192,
          "vulnerability_to_line": 195,
          "vulnerability_code": "    function renounceOwnership() public virtual onlyOwner {\n\n        emit OwnershipTransferred(_owner, address(0));\n\n        _owner = address(0);\n",
          "message": "Ownable.renounceOwnership (RevoMarketing.sol#192-195) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": 201,
          "vulnerability_code": "    function transferOwnership(address newOwner) public virtual onlyOwner {\n\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\n        emit OwnershipTransferred(_owner, newOwner);\n\n        _owner = newOwner;\n",
          "message": "Ownable.transferOwnership (RevoMarketing.sol#197-201) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 255,
          "vulnerability_to_line": 257,
          "vulnerability_code": "    function beneficiary() public view returns (address) {\n\n        return owner();\n",
          "message": "RevoVesting.beneficiary (RevoMarketing.sol#255-257) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 262,
          "vulnerability_to_line": 264,
          "vulnerability_code": "    function cliff() public view returns (uint256) {\n\n        return _cliff;\n",
          "message": "RevoVesting.cliff (RevoMarketing.sol#262-264) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 269,
          "vulnerability_to_line": 271,
          "vulnerability_code": "    function start() public view returns (uint256) {\n\n        return _start;\n",
          "message": "RevoVesting.start (RevoMarketing.sol#269-271) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 276,
          "vulnerability_to_line": 278,
          "vulnerability_code": "    function duration() public view returns (uint256) {\n\n        return _duration;\n",
          "message": "RevoVesting.duration (RevoMarketing.sol#276-278) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": 285,
          "vulnerability_code": "    function released() public view returns (uint256) {\n\n        return _released[tokenAddress];\n",
          "message": "RevoVesting.released (RevoMarketing.sol#283-285) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 290,
          "vulnerability_to_line": 300,
          "vulnerability_code": "    function release() public onlyOwner {\n\n        uint256 unreleased = releasableAmount();\n\n\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n\n\n        _released[address(tokenAddress)] = _released[address(tokenAddress)].add(unreleased);\n\n\n\n        revoToken.transfer(owner(), unreleased);\n\n\n\n        emit TokensReleased(address(tokenAddress), unreleased);\n",
          "message": "RevoVesting.release (RevoMarketing.sol#290-300) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": 327,
          "vulnerability_code": "    function getRemainingSeconds() public view returns(uint256){\n\n        return _start.add(_duration).sub(block.timestamp);\n",
          "message": "RevoVesting.getRemainingSeconds (RevoMarketing.sol#325-327) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 329,
          "vulnerability_to_line": 331,
          "vulnerability_code": "    function getRemainingDays() public view returns(uint256){\n\n        return _start.add(_duration).sub(block.timestamp).div(86400);\n",
          "message": "RevoVesting.getRemainingDays (RevoMarketing.sol#329-331) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": 335,
          "vulnerability_code": "    function getCurrentBalance() public view returns(uint256){\n\n        return revoToken.balanceOf(address(this));\n",
          "message": "RevoVesting.getCurrentBalance (RevoMarketing.sol#333-335) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.2;\n",
          "message": "Detected issues with version pragma in RevoMarketing.sol:\n\t- pragma solidity^0.6.2 (RevoMarketing.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 162,
          "vulnerability_to_line": 164,
          "vulnerability_code": "    function _msgSender() internal view virtual returns (address payable) {\n\n        return msg.sender;\n",
          "message": "Function 'Context._msgSender' (RevoMarketing.sol#162-164) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 166,
          "vulnerability_to_line": 169,
          "vulnerability_code": "    function _msgData() internal view virtual returns (bytes memory) {\n\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n\n        return msg.data;\n",
          "message": "Function 'Context._msgData' (RevoMarketing.sol#166-169) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = address(0);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 173,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _owner;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 216,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _cliff;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _start;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 218,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _duration;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 220,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => uint256) private _released;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 222,
          "vulnerability_to_line": null,
          "vulnerability_code": "    IRevoTokenContract private revoToken;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 223,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private tokenAddress;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 211,
          "vulnerability_to_line": null,
          "vulnerability_code": "    using SafeMath for uint256;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}