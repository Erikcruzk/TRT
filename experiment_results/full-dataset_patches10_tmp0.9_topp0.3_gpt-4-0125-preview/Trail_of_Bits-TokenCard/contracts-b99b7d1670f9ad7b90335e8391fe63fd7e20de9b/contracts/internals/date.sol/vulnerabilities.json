{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "            revert(\"not a valid month\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_2"
      ],
      "vulnerability_findings": [
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 72,
          "vulnerability_code": "    function _monthToNumber(string _month) internal pure returns (uint8) {\n\n        bytes32 month = keccak256(abi.encodePacked(_month));\n\n        if (month == _JANUARY) {\n\n            return 1;\n\n        } else if (month == _FEBRUARY) {\n\n            return 2;\n\n        } else if (month == _MARCH) {\n\n            return 3;\n\n        } else if (month == _APRIL) {\n\n            return 4;\n\n        } else if (month == _MAY) {\n\n            return 5;\n\n        } else if (month == _JUNE) {\n\n            return 6;\n\n        } else if (month == _JULY) {\n\n            return 7;\n\n        } else if (month == _AUGUST) {\n\n            return 8;\n\n        } else if (month == _SEPTEMBER) {\n\n            return 9;\n\n        } else if (month == _OCTOBER) {\n\n            return 10;\n\n        } else if (month == _NOVEMBER) {\n\n            return 11;\n\n        } else if (month == _DECEMBER) {\n\n            return 12;\n\n        } else {\n\n            revert(\"not a valid month\");\n\n        }\n",
          "message": "Function 'Date._monthToNumber' (date.sol#43-72) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _monthToNumber(string _month) internal pure returns (uint8) {\n",
          "message": "Parameter '_month' of Date._monthToNumber (date.sol#43) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.25;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _JANUARY = keccak256(\"Jan\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _FEBRUARY = keccak256(\"Feb\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _MARCH = keccak256(\"Mar\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _APRIL = keccak256(\"Apr\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _MAY = keccak256(\"May\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _JUNE = keccak256(\"Jun\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _JULY = keccak256(\"Jul\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _AUGUST = keccak256(\"Aug\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _SEPTEMBER = keccak256(\"Sep\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _OCTOBER = keccak256(\"Oct\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _NOVEMBER = keccak256(\"Nov\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32 constant private _DECEMBER = keccak256(\"Dec\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_REVERT_REQUIRE",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        } else if (month == _DECEMBER) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _monthToNumber(string _month) internal pure returns (uint8) {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}