{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_2"
      ],
      "vulnerability_findings": [
        {
          "name": "erc20-interface",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 99,
          "vulnerability_code": "interface IErc20 {\n\n    event Transfer(\n\n        address indexed from,\n\n        address indexed to,\n\n        uint256 value\n\n    );\n\n\n\n    event Approval(\n\n        address indexed owner,\n\n        address indexed spender,\n\n        uint256 value\n\n    );\n\n\n\n    function totalSupply(\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function balanceOf(\n\n        address who\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function allowance(\n\n        address owner,\n\n        address spender\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function transfer(\n\n        address to,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n\n\n    function transferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n    function approve(\n\n        address spender,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n    function name()\n\n        external\n\n        view\n\n        returns (string memory);\n\n\n\n    function symbol()\n\n        external\n\n        view\n\n        returns (string memory);\n\n\n\n    function decimals()\n\n        external\n\n        view\n\n        returns (uint8);\n",
          "message": "IErc20 (IErc20.sol#31-99) has incorrect ERC20 function interface(s):\n\t-transfer (IErc20.sol#65-69)\n\t-transferFrom (IErc20.sol#72-77)\n\t-approve (IErc20.sol#79-83)\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.4;\n",
          "message": "Detected issues with version pragma in IErc20.sol:\n\t- pragma solidity0.5.4 (IErc20.sol#21): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}