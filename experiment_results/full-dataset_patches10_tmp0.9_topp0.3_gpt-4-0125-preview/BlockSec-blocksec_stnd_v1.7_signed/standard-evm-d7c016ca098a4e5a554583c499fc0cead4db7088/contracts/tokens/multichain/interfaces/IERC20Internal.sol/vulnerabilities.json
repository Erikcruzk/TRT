{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.12;\n",
          "message": "Detected issues with version pragma in IERC20Internal.sol:\n\t- pragma solidity0.6.12 (IERC20Internal.sol#7): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function _transfer(\n\n        address sender,\n\n        address recipient,\n\n        uint256 amount\n",
          "message": "Function 'IERC20Internal._transfer' (IERC20Internal.sol#10-14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function _transferFrom(\n\n        address sender,\n\n        address recipient,\n\n        uint256 amount\n",
          "message": "Function 'IERC20Internal._transferFrom' (IERC20Internal.sol#16-20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function _approve(\n\n        address owner,\n\n        address spender,\n\n        uint256 amount\n",
          "message": "Function 'IERC20Internal._approve' (IERC20Internal.sol#22-26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 32,
          "vulnerability_code": "    function _increaseAllowance(\n\n        address owner,\n\n        address spender,\n\n        uint256 increment\n",
          "message": "Function 'IERC20Internal._increaseAllowance' (IERC20Internal.sol#28-32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function _decreaseAllowance(\n\n        address owner,\n\n        address spender,\n\n        uint256 decrement\n",
          "message": "Function 'IERC20Internal._decreaseAllowance' (IERC20Internal.sol#34-38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _mint(address account, uint256 amount) internal virtual;\n",
          "message": "Function 'IERC20Internal._mint' (IERC20Internal.sol#40) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _burn(address account, uint256 amount) internal virtual;\n",
          "message": "Function 'IERC20Internal._burn' (IERC20Internal.sol#42) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}