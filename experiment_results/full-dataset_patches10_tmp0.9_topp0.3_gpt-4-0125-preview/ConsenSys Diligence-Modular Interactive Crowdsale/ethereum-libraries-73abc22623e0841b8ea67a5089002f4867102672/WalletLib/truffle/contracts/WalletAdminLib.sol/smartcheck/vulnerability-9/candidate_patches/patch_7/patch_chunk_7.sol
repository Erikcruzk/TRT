function beginMigration(WalletData storage self) public returns (bool) {
  require(self.ownerIndex[msg.sender] > 0);
  bytes32 _id = keccak256("beginMigration");
  uint256 _txIndex = self.transactionInfo[_id].length;
  bool allGood;

  if(_txIndex == 0 || self.transactionInfo[_id][_txIndex - 1].success){
    self.transactionInfo[_id].length++;
    _txIndex = self.transactionInfo[_id].length - 1; // Corrects the index after incrementing length
    self.transactionInfo[_id][_txIndex].confirmRequired = self.requiredAdmin;
    self.transactionInfo[_id][_txIndex].day = now / 1 days;
    self.transactions[now / 1 days].push(_id);
  } else {
    _txIndex--;
    allGood = checkNotConfirmed(self, _id, _txIndex);
    if(!allGood) return false;
  }

  self.transactionInfo[_id][_txIndex].confirmedOwners.push(uint256(msg.sender));
  self.transactionInfo[_id][_txIndex].confirmCount++;

  if(self.transactionInfo[_id][_txIndex].confirmCount == self.transactionInfo[_id][_txIndex].confirmRequired) {
    self.transactionInfo[_id][_txIndex].success = true;
    // Migration logic would go here
  } else {
    uint256 confirmsNeeded = calcConfirmsNeeded(self.transactionInfo[_id][_txIndex].confirmRequired, self.transactionInfo[_id][_txIndex].confirmCount);
    LogTransactionConfirmed(_id, msg.sender, confirmsNeeded);
  }

  return true;
}