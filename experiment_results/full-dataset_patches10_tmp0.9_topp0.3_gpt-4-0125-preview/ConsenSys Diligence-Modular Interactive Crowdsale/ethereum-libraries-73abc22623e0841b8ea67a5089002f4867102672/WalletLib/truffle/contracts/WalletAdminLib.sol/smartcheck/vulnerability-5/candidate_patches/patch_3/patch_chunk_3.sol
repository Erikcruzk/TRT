function beginMigration(WalletData storage self, address _to) public {
  require(self.ownerIndex[msg.sender] > 0);

  bytes32 _id = keccak256("beginMigration",_to);
  uint256 _txIndex = self.transactionInfo[_id].length;

  if(_txIndex == 0 || self.transactionInfo[_id][_txIndex - 1].success){
    self.transactionInfo[_id].length++;
    self.transactionInfo[_id][_txIndex].confirmRequired = self.requiredAdmin;
    self.transactionInfo[_id][_txIndex].day = now / 1 days;
    self.transactions[now / 1 days].push(_id);
  } else {
    _txIndex--;
  }

  self.transactionInfo[_id][_txIndex].confirmedOwners.push(uint256(msg.sender));
  self.transactionInfo[_id][_txIndex].confirmCount++;
  
  if(self.transactionInfo[_id][_txIndex].confirmCount ==
     self.transactionInfo[_id][_txIndex].confirmRequired)
  {
    self.transactionInfo[_id][_txIndex].success = true;
    self.inMigration = true;
    self.migrationInfo.to = _to;
    delete self.transactionInfo[_id][_txIndex].data;
  } else {
    if(self.transactionInfo[_id][_txIndex].data.length == 0)
      self.transactionInfo[_id][_txIndex].data = new bytes(0);
  }
}