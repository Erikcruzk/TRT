{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function tokenFallback(address from, uint256 amount, bytes data) returns (bool success);\n",
          "message": "ERC677Receiver.tokenFallback (MockERC677Receiver.sol#6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "  function tokenFallback(address from, uint256 amount, bytes data) returns (bool success) {\n\n    return true;\n",
          "message": "MockERC677Receiver.tokenFallback (MockERC677Receiver.sol#22-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferAndCall(ERC677Receiver receiver, uint amount, bytes data) returns (bool success);\n",
          "message": "ERC677.transferAndCall (MockERC677Receiver.sol#14) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Detected issues with version pragma in MockERC677Receiver.sol:\n\t- pragma solidity^0.4.18 (MockERC677Receiver.sol#3): it allows old versions\n\t- pragma solidity^0.4.18 (MockERC677Receiver.sol#19): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function tokenFallback(address from, uint256 amount, bytes data) returns (bool success);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferAndCall(ERC677Receiver receiver, uint amount, bytes data) returns (bool success);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function tokenFallback(address from, uint256 amount, bytes data) returns (bool success) {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function tokenFallback(address from, uint256 amount, bytes data) returns (bool success) {\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}