function beginMigration(
    ExchangeData calldata exchangeData,
    CdpData memory cdpData,
    AddressRegistry calldata addressRegistry
  )
    public
    logMethodName("beginMigration", cdpData, addressRegistry.multiplyProxyActions)
  {
    require(cdpData.skipFL, "Migration must skip flash loan");
    cdpData.ilk = IJoin(cdpData.gemJoin).ilk();
    address urn = IManager(addressRegistry.manager).urns(cdpData.cdpId);
    address vat = IManager(addressRegistry.manager).vat();
    uint256 collBalance = getInk(addressRegistry.manager, cdpData);
    uint256 daiBalance = IVat(vat).dai(urn);
    uint256 debt = _getWipeAllWad(vat, urn, urn, cdpData.ilk);
    require(collBalance >= cdpData.borrowCollateral, "Insufficient collateral balance");
    require(daiBalance >= toRad(debt), "Insufficient DAI balance");
    _decreaseMP(exchangeData, cdpData, addressRegistry, 0);
  }