function beginMigration(address from, address to, uint256 amount, bytes memory userData, bytes memory operatorData) external {
        require(isOperatorFor(_msgSender(), from), "ERC777: caller is not an operator for holder");
        require(to != address(0), "ERC777: migrate to the zero address");
        require(from != address(0), "ERC777: migrate from the zero address");

        _beforeTokenTransfer(_msgSender(), from, to, amount);

        _balances[from] = _balances[from].sub(amount, "ERC777: migrate amount exceeds balance");
        _totalSupply = _totalSupply.sub(amount);

        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);
        require(implementer != address(0), "ERC777: token recipient contract has no implementer for ERC777TokensRecipient");
        
        IERC777Recipient(implementer).tokensReceived(_msgSender(), from, to, amount, userData, operatorData);

        emit Burned(_msgSender(), from, amount, userData, operatorData);
        emit Transfer(from, to, amount);
    }