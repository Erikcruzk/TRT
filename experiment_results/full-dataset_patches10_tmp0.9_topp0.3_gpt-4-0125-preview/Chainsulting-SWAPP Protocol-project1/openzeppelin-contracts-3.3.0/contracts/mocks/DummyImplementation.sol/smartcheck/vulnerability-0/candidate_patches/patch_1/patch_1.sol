pragma solidity >=0.6.0 <0.8.0;

abstract contract Impl {
  function version() public pure virtual returns (string memory); 
}

// No vulnerablility related to SOLIDITY_LOCKED_MONEY in provided code snippet directly.
// Including a possible function based on the vulnerability hint, which might be missing or related to the context.

contract Migration {
    address public owner;
    bool private migrationStarted;

    constructor() {
        owner = msg.sender;
        migrationStarted = false;
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Not owner");
        _;
    }

    function beginMigration() public onlyOwner {
        require(!migrationStarted, "Migration already started");
        migrationStarted = true;
        // Additional migration logic here
    }
}

contract DummyImplementationV2 is DummyImplementation {
  function migrate(uint256 newVal) public payable {
    value = newVal;
  }

  function version() public pure override returns (string memory) {
    return "V2";
  }
}