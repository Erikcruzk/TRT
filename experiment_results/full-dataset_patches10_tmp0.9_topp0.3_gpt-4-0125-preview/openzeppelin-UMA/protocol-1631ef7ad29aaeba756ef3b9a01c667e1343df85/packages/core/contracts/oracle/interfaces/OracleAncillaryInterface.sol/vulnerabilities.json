{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function requestPrice(\n\n        bytes32 identifier,\n\n        uint256 time,\n\n        bytes memory ancillaryData\n",
          "message": "OracleAncillaryInterface.requestPrice (OracleAncillaryInterface.sol#18-22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function hasPrice(\n\n        bytes32 identifier,\n\n        uint256 time,\n\n        bytes memory ancillaryData\n",
          "message": "OracleAncillaryInterface.hasPrice (OracleAncillaryInterface.sol#31-35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 49,
          "vulnerability_code": "    function getPrice(\n\n        bytes32 identifier,\n\n        uint256 time,\n\n        bytes memory ancillaryData\n",
          "message": "OracleAncillaryInterface.getPrice (OracleAncillaryInterface.sol#45-49) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Detected issues with version pragma in OracleAncillaryInterface.sol:\n\t- pragma solidity^0.6.0 (OracleAncillaryInterface.sol#4): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}