{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.9;\n",
          "message": "Different versions of Solidity is used in IDODOCallee.sol:\n\t- Version used: ['0.6.9', 'ABIEncoderV2']\n\t- IDODOCallee.sol#10 declares pragma solidity0.6.9\n\t- IDODOCallee.sol#11 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.9;\n",
          "message": "Detected issues with version pragma in IDODOCallee.sol:\n\t- pragma solidity0.6.9 (IDODOCallee.sol#10): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function DVMSellShareCall(\n\n        address sender,\n\n        uint256 burnShareAmount,\n\n        uint256 baseAmount,\n\n        uint256 quoteAmount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.DVMSellShareCall' (IDODOCallee.sol#14-20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function DVMFlashLoanCall(\n\n        address sender,\n\n        uint256 baseAmount,\n\n        uint256 quoteAmount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.DVMFlashLoanCall' (IDODOCallee.sol#22-27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": 34,
          "vulnerability_code": "    function DPPFlashLoanCall(\n\n        address sender,\n\n        uint256 baseAmount,\n\n        uint256 quoteAmount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.DPPFlashLoanCall' (IDODOCallee.sol#29-34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": 41,
          "vulnerability_code": "    function DSPFlashLoanCall(\n\n        address sender,\n\n        uint256 baseAmount,\n\n        uint256 quoteAmount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.DSPFlashLoanCall' (IDODOCallee.sol#36-41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 47,
          "vulnerability_code": "    function CPCancelCall(\n\n        address sender,\n\n        uint256 amount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.CPCancelCall' (IDODOCallee.sol#43-47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 54,
          "vulnerability_code": "\tfunction CPClaimBidCall(\n\n        address sender,\n\n        uint256 baseAmount,\n\n        uint256 quoteAmount,\n\n        bytes calldata data\n",
          "message": "Function 'IDODOCallee.CPClaimBidCall' (IDODOCallee.sol#49-54) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}