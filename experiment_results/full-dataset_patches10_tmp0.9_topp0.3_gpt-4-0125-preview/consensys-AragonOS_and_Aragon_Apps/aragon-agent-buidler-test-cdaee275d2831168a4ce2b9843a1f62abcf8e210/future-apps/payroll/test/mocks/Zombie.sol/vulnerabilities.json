{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "suicidal",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function escapeHatch() public {\n\n        selfdestruct(owner);\n",
          "message": "Zombie.escapeHatch (Zombie.sol#15-17) allows anyone to destruct the contract\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}\n",
          "message": "Zombie.fallback (Zombie.sol#13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function escapeHatch() public {\n\n        selfdestruct(owner);\n",
          "message": "Zombie.escapeHatch (Zombie.sol#15-17) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.4.18;\n",
          "message": "Detected issues with version pragma in Zombie.sol:\n\t- pragma solidity0.4.18 (Zombie.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function Zombie(address _owner) public {\n\n        owner = _owner;\n",
          "message": "Function 'Zombie.Zombie' (Zombie.sol#9-11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Zombie(address _owner) public {\n",
          "message": "Parameter '_owner' of Zombie.Zombie (Zombie.sol#9) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Unprotected Selfdestruct (SWC 106)",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "        selfdestruct(owner);\n",
          "message": "Any sender can cause the contract to self-destruct.\nAny sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.\nClassification: SWC-106"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}