{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "constant-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function isContract(address _target) internal view returns (bool) {\n\n        if (_target == address(0)) {\n\n            return false;\n\n        }\n\n\n\n        uint256 size;\n\n        assembly { size := extcodesize(_target) }\n\n        return size > 0;\n",
          "message": "IsContract.isContract (IsContract.sol#11-19) is declared view but contains assembly code\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function isContract(address _target) internal view returns (bool) {\n\n        if (_target == address(0)) {\n\n            return false;\n\n        }\n\n\n\n        uint256 size;\n\n        assembly { size := extcodesize(_target) }\n\n        return size > 0;\n",
          "message": "IsContract.isContract uses assembly (IsContract.sol#11-19)\n\t- IsContract.sol#17-18\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isContract(address _target) internal view returns (bool) {\n",
          "message": "Parameter '_target' of IsContract.isContract (IsContract.sol#11) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isContract(address _target) internal view returns (bool) {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}