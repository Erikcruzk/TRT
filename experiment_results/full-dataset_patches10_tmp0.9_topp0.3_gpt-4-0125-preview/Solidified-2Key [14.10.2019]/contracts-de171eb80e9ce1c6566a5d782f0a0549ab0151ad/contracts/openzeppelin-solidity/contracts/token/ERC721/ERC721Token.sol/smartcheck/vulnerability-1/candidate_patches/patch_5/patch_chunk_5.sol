function beginMigration() public onlyOwner {
    require(!migrationStarted);
    migrationStarted = true;
    uint256 lastTokenIndex = allTokens.length.sub(1);
    for (uint256 i = 0; i < allTokens.length; i++) {
        uint256 tokenId = allTokens[i];
        address tokenOwner = tokenOwner[tokenId];
        removeTokenFrom(tokenOwner, tokenId);
        emit Migration(tokenId, tokenOwner);
        
        if (i != lastTokenIndex) {
            // Move the last token to the current position to avoid gaps in the array
            allTokens[i] = allTokens[lastTokenIndex];
            // Update the index of the moved token
            allTokensIndex[allTokens[i]] = i;
        }
        allTokens.length--;
        lastTokenIndex--;
        i--; // Adjust index after modifying the length of the array
    }
    assert(allTokens.length == 0);
    migrationCompleted = true;
}