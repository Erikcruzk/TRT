pragma solidity ^0.4.24;








library Roles {
  struct Role {
    mapping (address => bool) bearer;
  }

  


  function add(Role storage _role, address _addr)
    internal
  {
    _role.bearer[_addr] = true;
  }

  


  function remove(Role storage _role, address _addr)
    internal
  {
    _role.bearer[_addr] = false;
  }

  



  function check(Role storage _role, address _addr)
    internal
    view
  {
    require(has(_role, _addr));
  }

  



  function has(Role storage _role, address _addr)
    internal
    view
    returns (bool)
  {
    return _role.bearer[_addr];
  }
}



pragma solidity ^0.4.24;










// This contract does not contain a beginMigration() function or any explicit vulnerabilities related to uninitialized-state in the provided function scope.
// There might be a misunderstanding or miscommunication in the request as the provided code and analysis results do not match with the task description.
// Please provide the correct function or further details related to the vulnerability that needs to be addressed.