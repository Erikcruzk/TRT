{
  "smartbugs_completed": "No vulnerabilities found",
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool public isFiatConversionAutomaticallyApproved;\n",
          "message": "ITwoKeyConversionHandler.isFiatConversionAutomaticallyApproved should be constant (ITwoKeyConversionHandler.sol#7)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function supportForCreateConversion(\n\n        address _contractor,\n\n        address _converterAddress,\n\n        uint256 _conversionAmount,\n\n        uint256 _maxReferralRewardETHWei,\n\n        uint256 baseTokensForConverterUnits,\n\n        uint256 bonusTokensForConverterUnits,\n\n        bool isConversionFiat,\n\n        bool _isAnonymous,\n\n        bool _isKYCRequired\n\n    )\n\n    public\n",
          "message": "ITwoKeyConversionHandler.supportForCreateConversion (ITwoKeyConversionHandler.sol#9-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function executeConversion(\n\n        uint _conversionId\n\n    )\n",
          "message": "ITwoKeyConversionHandler.executeConversion (ITwoKeyConversionHandler.sol#23-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function getConverterPurchasesStats(\n\n        address _converter\n\n    )\n\n    public\n\n    view\n",
          "message": "ITwoKeyConversionHandler.getConverterPurchasesStats (ITwoKeyConversionHandler.sol#37-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 50,
          "vulnerability_code": "    function getStateForConverter(\n\n        address _converter\n\n    )\n\n    public\n\n    view\n",
          "message": "ITwoKeyConversionHandler.getStateForConverter (ITwoKeyConversionHandler.sol#45-50) should be declared external\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}