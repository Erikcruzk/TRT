{
  "smartbugs_completed": "No vulnerabilities found",
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function setInitialParamsCampaign(\n\n        address _twoKeySingletonesRegistry,\n\n        address _twoKeyAcquisitionLogicHandler,\n\n        address _conversionHandler,\n\n        address _moderator,\n\n        address _assetContractERC20,\n\n        address _contractor,\n\n        uint [] values\n",
          "message": "IHandleCampaignDeployment.setInitialParamsCampaign (IHandleCampaignDeployment.sol#17-25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function setInitialParamsLogicHandler(\n\n        uint [] values,\n\n        string _currency,\n\n        address _assetContractERC20,\n\n        address _moderator,\n\n        address _contractor,\n\n        address _acquisitionCampaignAddress,\n\n        address _twoKeySingletoneRegistry,\n\n        address _twoKeyConversionHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsLogicHandler (IHandleCampaignDeployment.sol#33-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": 58,
          "vulnerability_code": "    function setInitialParamsConversionHandler(\n\n        uint [] values,\n\n        address _twoKeyAcquisitionCampaignERC20,\n\n        address _twoKeyPurchasesHandler,\n\n        address _contractor,\n\n        address _assetContractERC20,\n\n        address _twoKeyEventSource,\n\n        address _twoKeyBaseReputationRegistry\n",
          "message": "IHandleCampaignDeployment.setInitialParamsConversionHandler (IHandleCampaignDeployment.sol#50-58) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": 73,
          "vulnerability_code": "    function setInitialParamsPurchasesHandler(\n\n        uint[] values,\n\n        address _contractor,\n\n        address _assetContractERC20,\n\n        address _twoKeyEventSource,\n\n        address _proxyConversionHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsPurchasesHandler (IHandleCampaignDeployment.sol#67-73) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": 90,
          "vulnerability_code": "    function setInitialParamsDonationCampaign(\n\n        address _contractor,\n\n        address _moderator,\n\n        address _twoKeySingletonRegistry,\n\n        address _twoKeyDonationConversionHandler,\n\n        address _twoKeyDonationLogicHandler,\n\n        uint [] numberValues,\n\n        bool [] booleanValues\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationCampaign (IHandleCampaignDeployment.sol#82-90) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 98,
          "vulnerability_to_line": 105,
          "vulnerability_code": "    function setInitialParamsDonationConversionHandler(\n\n        string tokenName,\n\n        string tokenSymbol,\n\n        string _currency,\n\n        address _contractor,\n\n        address _twoKeyDonationCampaign,\n\n        address _twoKeySingletonRegistry\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationConversionHandler (IHandleCampaignDeployment.sol#98-105) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": 116,
          "vulnerability_code": "    function setInitialParamsDonationLogicHandler(\n\n        uint[] numberValues,\n\n        string currency,\n\n        address contractor,\n\n        address moderator,\n\n        address twoKeySingletonRegistry,\n\n        address twoKeyDonationCampaign,\n\n        address twoKeyDonationLogicHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationLogicHandler (IHandleCampaignDeployment.sol#108-116) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": "Detected issues with version pragma in IHandleCampaignDeployment.sol:\n\t- pragma solidity^0.4.0 (IHandleCampaignDeployment.sol#3): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _currency,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint[] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] numberValues,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 89,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bool [] booleanValues\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 99,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string tokenName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 100,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string tokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 101,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _currency,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 109,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint[] numberValues,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string currency,\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}