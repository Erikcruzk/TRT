function updateOnConversionExecutedEvent(
    address converter,
    address contractor,
    address acquisitionCampaign
)
public
{
    validateCall(acquisitionCampaign);
    int d = 1;
    int initialRewardWei = 10*(10**18);

    address logicHandlerAddress = getLogicHandlerAddress(acquisitionCampaign);

    bytes32 keyHashContractorScore = keccak256("address2contractorGlobalReputationScoreWei", contractor);
    int contractorScore = PROXY_STORAGE_CONTRACT.getInt(keyHashContractorScore);
    PROXY_STORAGE_CONTRACT.setInt(keyHashContractorScore, contractorScore + initialRewardWei);

    bytes32 keyHashConverterScore = keccak256("address2converterGlobalReputationScoreWei", converter);
    int converterScore = PROXY_STORAGE_CONTRACT.getInt(keyHashConverterScore);
    PROXY_STORAGE_CONTRACT.setInt(keyHashConverterScore, converterScore + initialRewardWei);

    address[] memory referrers = ITwoKeyAcquisitionLogicHandler(logicHandlerAddress).getReferrers(converter, acquisitionCampaign);

    for(uint i=0; i<referrers.length; i++) {
        bytes32 keyHashReferrerScore = keccak256("plasmaAddress2referrerGlobalReputationScoreWei", referrers[i]);
        int referrerScore = PROXY_STORAGE_CONTRACT.getInt(keyHashReferrerScore);
        PROXY_STORAGE_CONTRACT.setInt(keyHashReferrerScore, referrerScore + initialRewardWei/d);
        d = d * 2; // Fix: Changing arithmetic progression to geometric progression
    }
}