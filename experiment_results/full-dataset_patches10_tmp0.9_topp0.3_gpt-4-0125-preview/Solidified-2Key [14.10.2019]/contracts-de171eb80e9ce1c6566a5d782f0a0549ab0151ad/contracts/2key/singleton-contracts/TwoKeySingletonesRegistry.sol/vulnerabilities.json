{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 111,
          "vulnerability_to_line": null,
          "vulnerability_code": "        registry = ITwoKeySingletonesRegistry(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 112,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _implementation = registry.getVersion(_contractName, _version);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 323,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 324,
          "vulnerability_to_line": null,
          "vulnerability_code": "        registry = ITwoKeySingletonesRegistry(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _implementation = registry.getVersion(_contractName, _version);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 326,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 386,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor()\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 387,
          "vulnerability_to_line": null,
          "vulnerability_code": "    public\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 388,
          "vulnerability_to_line": null,
          "vulnerability_code": "    {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 389,
          "vulnerability_to_line": null,
          "vulnerability_code": "        deployer = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 390,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_38"
      ],
      "vulnerability_findings": [
        {
          "name": "uninitialized-state",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ITwoKeySingletonesRegistry internal registry;\n",
          "message": "UpgradeabilityStorage.registry (TwoKeySingletonesRegistry.sol#51) is never initialized. It is used in:\n\t- initialize (TwoKeySingletonesRegistry.sol#348-350)\n"
        },
        {
          "name": "uninitialized-state",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address internal _implementation;\n",
          "message": "UpgradeabilityStorage._implementation (TwoKeySingletonesRegistry.sol#54) is never initialized. It is used in:\n\t- implementation (TwoKeySingletonesRegistry.sol#60-62)\n"
        },
        {
          "name": "locked-ether",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": 100,
          "vulnerability_code": "    function () payable public {\n\n        address _impl = implementation();\n\n        require(_impl != address(0));\n\n\n\n        assembly {\n\n            let ptr := mload(0x40)\n\n            calldatacopy(ptr, 0, calldatasize)\n\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n\n            let size := returndatasize\n\n            returndatacopy(ptr, 0, size)\n\n\n\n            switch result\n\n            case 0 { revert(ptr, size) }\n\n            default { return(ptr, size) }\n\n        }\n",
          "message": "Contract locking ether found in TwoKeySingletonesRegistry.sol:\n\tContract UpgradabilityProxyAcquisition has payable functions:\n\t - fallback (TwoKeySingletonesRegistry.sol#85-100)\n\tBut does not have a function to withdraw the ether\n"
        },
        {
          "name": "locked-ether",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": 100,
          "vulnerability_code": "    function () payable public {\n\n        address _impl = implementation();\n\n        require(_impl != address(0));\n\n\n\n        assembly {\n\n            let ptr := mload(0x40)\n\n            calldatacopy(ptr, 0, calldatasize)\n\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n\n            let size := returndatasize\n\n            returndatacopy(ptr, 0, size)\n\n\n\n            switch result\n\n            case 0 { revert(ptr, size) }\n\n            default { return(ptr, size) }\n\n        }\n",
          "message": "Contract locking ether found in TwoKeySingletonesRegistry.sol:\n\tContract UpgradeabilityProxy has payable functions:\n\t - fallback (TwoKeySingletonesRegistry.sol#85-100)\n\tBut does not have a function to withdraw the ether\n"
        },
        {
          "name": "locked-ether",
          "vulnerability_from_line": 348,
          "vulnerability_to_line": 350,
          "vulnerability_code": "    function initialize(address sender) public payable {\n\n        require(msg.sender == address(registry));\n",
          "message": "Contract locking ether found in TwoKeySingletonesRegistry.sol:\n\tContract Upgradeable has payable functions:\n\t - initialize (TwoKeySingletonesRegistry.sol#348-350)\n\tBut does not have a function to withdraw the ether\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": 100,
          "vulnerability_code": "    function () payable public {\n\n        address _impl = implementation();\n\n        require(_impl != address(0));\n\n\n\n        assembly {\n\n            let ptr := mload(0x40)\n\n            calldatacopy(ptr, 0, calldatasize)\n\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n\n            let size := returndatasize\n\n            returndatacopy(ptr, 0, size)\n\n\n\n            switch result\n\n            case 0 { revert(ptr, size) }\n\n            default { return(ptr, size) }\n\n        }\n",
          "message": "Proxy.fallback uses assembly (TwoKeySingletonesRegistry.sol#85-100)\n\t- TwoKeySingletonesRegistry.sol#89-100\n"
        },
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": "Different versions of Solidity is used in TwoKeySingletonesRegistry.sol:\n\t- Version used: ['^0.4.0', '^0.4.18', '^0.4.24']\n\t- TwoKeySingletonesRegistry.sol#3 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#43 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#67 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#105 declares pragma solidity^0.4.0\n\t- TwoKeySingletonesRegistry.sol#118 declares pragma solidity^0.4.0\n\t- TwoKeySingletonesRegistry.sol#236 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#250 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#258 declares pragma solidity^0.4.0\n\t- TwoKeySingletonesRegistry.sol#309 declares pragma solidity^0.4.18\n\t- TwoKeySingletonesRegistry.sol#341 declares pragma solidity^0.4.24\n\t- TwoKeySingletonesRegistry.sol#355 declares pragma solidity^0.4.24\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addVersion(string _contractName, string version, address implementation) public;\n",
          "message": "ITwoKeySingletonesRegistry.addVersion (TwoKeySingletonesRegistry.sol#30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 420,
          "vulnerability_to_line": 432,
          "vulnerability_code": "    function addVersion(\n\n        string contractName,\n\n        string version,\n\n        address implementation\n\n    )\n\n    public\n\n    onlyMaintainer\n\n    {\n\n        require(versions[contractName][version] == 0x0);\n\n        versions[contractName][version] = implementation;\n\n        contractNameToLatestVersion[contractName] = version;\n\n        emit VersionAdded(version, implementation);\n",
          "message": "TwoKeySingletonesRegistry.addVersion (TwoKeySingletonesRegistry.sol#420-432) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function implementation() public view returns (address) {\n\n        return _implementation;\n",
          "message": "UpgradeabilityStorage.implementation (TwoKeySingletonesRegistry.sol#60-62) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": 100,
          "vulnerability_code": "    function () payable public {\n\n        address _impl = implementation();\n\n        require(_impl != address(0));\n\n\n\n        assembly {\n\n            let ptr := mload(0x40)\n\n            calldatacopy(ptr, 0, calldatasize)\n\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n\n            let size := returndatasize\n\n            returndatacopy(ptr, 0, size)\n\n\n\n            switch result\n\n            case 0 { revert(ptr, size) }\n\n            default { return(ptr, size) }\n\n        }\n",
          "message": "Proxy.fallback (TwoKeySingletonesRegistry.sol#85-100) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 132,
          "vulnerability_to_line": 140,
          "vulnerability_code": "    function setInitialParamsCampaign(\n\n        address _twoKeySingletonesRegistry,\n\n        address _twoKeyAcquisitionLogicHandler,\n\n        address _conversionHandler,\n\n        address _moderator,\n\n        address _assetContractERC20,\n\n        address _contractor,\n\n        uint [] values\n",
          "message": "IHandleCampaignDeployment.setInitialParamsCampaign (TwoKeySingletonesRegistry.sol#132-140) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": 157,
          "vulnerability_code": "    function setInitialParamsLogicHandler(\n\n        uint [] values,\n\n        string _currency,\n\n        address _assetContractERC20,\n\n        address _moderator,\n\n        address _contractor,\n\n        address _acquisitionCampaignAddress,\n\n        address _twoKeySingletoneRegistry,\n\n        address _twoKeyConversionHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsLogicHandler (TwoKeySingletonesRegistry.sol#148-157) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 165,
          "vulnerability_to_line": 173,
          "vulnerability_code": "    function setInitialParamsConversionHandler(\n\n        uint [] values,\n\n        address _twoKeyAcquisitionCampaignERC20,\n\n        address _twoKeyPurchasesHandler,\n\n        address _contractor,\n\n        address _assetContractERC20,\n\n        address _twoKeyEventSource,\n\n        address _twoKeyBaseReputationRegistry\n",
          "message": "IHandleCampaignDeployment.setInitialParamsConversionHandler (TwoKeySingletonesRegistry.sol#165-173) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 182,
          "vulnerability_to_line": 188,
          "vulnerability_code": "    function setInitialParamsPurchasesHandler(\n\n        uint[] values,\n\n        address _contractor,\n\n        address _assetContractERC20,\n\n        address _twoKeyEventSource,\n\n        address _proxyConversionHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsPurchasesHandler (TwoKeySingletonesRegistry.sol#182-188) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 197,
          "vulnerability_to_line": 205,
          "vulnerability_code": "    function setInitialParamsDonationCampaign(\n\n        address _contractor,\n\n        address _moderator,\n\n        address _twoKeySingletonRegistry,\n\n        address _twoKeyDonationConversionHandler,\n\n        address _twoKeyDonationLogicHandler,\n\n        uint [] numberValues,\n\n        bool [] booleanValues\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationCampaign (TwoKeySingletonesRegistry.sol#197-205) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 213,
          "vulnerability_to_line": 220,
          "vulnerability_code": "    function setInitialParamsDonationConversionHandler(\n\n        string tokenName,\n\n        string tokenSymbol,\n\n        string _currency,\n\n        address _contractor,\n\n        address _twoKeyDonationCampaign,\n\n        address _twoKeySingletonRegistry\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationConversionHandler (TwoKeySingletonesRegistry.sol#213-220) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 223,
          "vulnerability_to_line": 231,
          "vulnerability_code": "    function setInitialParamsDonationLogicHandler(\n\n        uint[] numberValues,\n\n        string currency,\n\n        address contractor,\n\n        address moderator,\n\n        address twoKeySingletonRegistry,\n\n        address twoKeyDonationCampaign,\n\n        address twoKeyDonationLogicHandler\n",
          "message": "IHandleCampaignDeployment.setInitialParamsDonationLogicHandler (TwoKeySingletonesRegistry.sol#223-231) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 242,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isCampaignValidated(address campaign) public view returns (bool);\n",
          "message": "ITwoKeyCampaignValidator.isCampaignValidated (TwoKeySingletonesRegistry.sol#242) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 243,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isConversionHandlerCodeValid(address conversionHandler) public view returns (bool);\n",
          "message": "ITwoKeyCampaignValidator.isConversionHandlerCodeValid (TwoKeySingletonesRegistry.sol#243) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function validateAcquisitionCampaign(address campaign, string nonSingletonHash) public;\n",
          "message": "ITwoKeyCampaignValidator.validateAcquisitionCampaign (TwoKeySingletonesRegistry.sol#244) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 245,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function validateDonationCampaign(address campaign, address donationConversionHandler, string nonSingletonHash) public;\n",
          "message": "ITwoKeyCampaignValidator.validateDonationCampaign (TwoKeySingletonesRegistry.sol#245) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 253,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function onlyMaintainer(address _sender) public view returns (bool);\n",
          "message": "ITwoKeyMaintainersRegistry.onlyMaintainer (TwoKeySingletonesRegistry.sol#253) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 332,
          "vulnerability_to_line": 335,
          "vulnerability_code": "    function upgradeTo(string _contractName, string _version, address _impl) public {\n\n        require(msg.sender == address(registry));\n\n        _implementation = _impl;\n",
          "message": "UpgradeabilityProxy.upgradeTo (TwoKeySingletonesRegistry.sol#332-335) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 348,
          "vulnerability_to_line": 350,
          "vulnerability_code": "    function initialize(address sender) public payable {\n\n        require(msg.sender == address(registry));\n",
          "message": "Upgradeable.initialize (TwoKeySingletonesRegistry.sol#348-350) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 404,
          "vulnerability_to_line": 412,
          "vulnerability_code": "    function addNonUpgradableContractToAddress(\n\n        string contractName,\n\n        address contractAddress\n\n    )\n\n    public\n\n    onlyMaintainer\n\n    {\n\n        nonUpgradableContractToAddress[contractName] = contractAddress;\n",
          "message": "TwoKeySingletonesRegistry.addNonUpgradableContractToAddress (TwoKeySingletonesRegistry.sol#404-412) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 457,
          "vulnerability_to_line": 465,
          "vulnerability_code": "    function getLatestContractVersion(\n\n        string contractName\n\n    )\n\n    public\n\n    view\n\n    returns (string)\n\n    {\n\n        return contractNameToLatestVersion[contractName];\n",
          "message": "TwoKeySingletonesRegistry.getLatestContractVersion (TwoKeySingletonesRegistry.sol#457-465) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": 476,
          "vulnerability_code": "    function getNonUpgradableContractAddress(\n\n        string contractName\n\n    )\n\n    public\n\n    view\n\n    returns (address)\n\n    {\n\n        return nonUpgradableContractToAddress[contractName];\n",
          "message": "TwoKeySingletonesRegistry.getNonUpgradableContractAddress (TwoKeySingletonesRegistry.sol#468-476) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 507,
          "vulnerability_to_line": 518,
          "vulnerability_code": "    function upgradeContract(\n\n        string contractName,\n\n        string version\n\n    )\n\n    public\n\n    onlyMaintainer\n\n    //TODO: Change to deployer\n\n    {\n\n        address proxyAddress = getContractProxyAddress(contractName);\n\n        address _impl = getVersion(contractName, version);\n\n        UpgradeabilityProxy(proxyAddress).upgradeTo(contractName, version, _impl);\n",
          "message": "TwoKeySingletonesRegistry.upgradeContract (TwoKeySingletonesRegistry.sol#507-518) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 526,
          "vulnerability_to_line": 539,
          "vulnerability_code": "    function createProxy(\n\n        string contractName,\n\n        string contractNameStorage,\n\n        string version\n\n    )\n\n    public\n\n    onlyMaintainer\n\n    {\n\n        address logicProxy = deployProxy(contractName, version);\n\n        address storageProxy = deployProxy(contractNameStorage, version);\n\n\n\n        IStructuredStorage(storageProxy).setProxyLogicContractAndDeployer(logicProxy, msg.sender);\n\n        emit ProxiesDeployed(logicProxy, storageProxy);\n",
          "message": "TwoKeySingletonesRegistry.createProxy (TwoKeySingletonesRegistry.sol#526-539) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": "Detected issues with version pragma in TwoKeySingletonesRegistry.sol:\n\t- pragma solidity^0.4.0 (TwoKeySingletonesRegistry.sol#105): it allows old versions\n\t- pragma solidity^0.4.0 (TwoKeySingletonesRegistry.sol#118): it allows old versions\n\t- pragma solidity^0.4.0 (TwoKeySingletonesRegistry.sol#258): it allows old versions\n\t- pragma solidity^0.4.18 (TwoKeySingletonesRegistry.sol#309): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address internal _implementation;\n",
          "message": "Variable 'UpgradeabilityStorage._implementation' (TwoKeySingletonesRegistry.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Parameter '_contractName' of UpgradabilityProxyAcquisition. (TwoKeySingletonesRegistry.sol#110) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Parameter '_version' of UpgradabilityProxyAcquisition. (TwoKeySingletonesRegistry.sol#110) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 323,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Parameter '_contractName' of UpgradeabilityProxy. (TwoKeySingletonesRegistry.sol#323) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 323,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": "Parameter '_version' of UpgradeabilityProxy. (TwoKeySingletonesRegistry.sol#323) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 332,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeTo(string _contractName, string _version, address _impl) public {\n",
          "message": "Parameter '_impl' of UpgradeabilityProxy.upgradeTo (TwoKeySingletonesRegistry.sol#332) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 484,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _contractName\n",
          "message": "Parameter '_contractName' of TwoKeySingletonesRegistry.getContractProxyAddress (TwoKeySingletonesRegistry.sol#484) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_LOCKED_MONEY",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract Proxy {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_LOCKED_MONEY",
          "vulnerability_from_line": 343,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract Upgradeable is UpgradeabilityStorage {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 118,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 250,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 258,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 309,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 341,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 355,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function () payable public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addVersion(string _contractName, string version, address implementation) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addVersion(string _contractName, string version, address implementation) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getVersion(string _contractName, string version) public view returns (address);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getVersion(string _contractName, string version) public view returns (address);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 110,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 149,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 150,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _currency,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 166,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 183,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint[] values,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 203,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint [] numberValues,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 204,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bool [] booleanValues\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 214,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string tokenName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 215,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string tokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 216,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _currency,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 224,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint[] numberValues,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 225,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string currency,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function validateAcquisitionCampaign(address campaign, string nonSingletonHash) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 245,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function validateDonationCampaign(address campaign, address donationConversionHandler, string nonSingletonHash) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 323,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 323,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (string _contractName, string _version) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 332,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeTo(string _contractName, string _version, address _impl) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 332,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeTo(string _contractName, string _version, address _impl) public {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 405,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 421,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string version,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 440,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 441,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string version\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 458,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 462,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (string)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 469,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 484,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _contractName\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 495,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 496,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string version\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 508,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string version\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 527,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 528,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string contractNameStorage,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 529,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string version\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 89,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addVersion(string _contractName, string version, address implementation) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function getVersion(string _contractName, string version) public view returns (address);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 373,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (string => address) contractNameToProxyAddress;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 374,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (string => string) contractNameToLatestVersion;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 375,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (string => address) nonUpgradableContractToAddress;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 526,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function createProxy(\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 332,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeTo(string _contractName, string _version, address _impl) public {\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": 420,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addVersion(\n",
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        },
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.\nClassification: SWC-101"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [
        "SYMBOLIC EXECUTION TIMEOUT"
      ],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 537,
          "vulnerability_to_line": null,
          "vulnerability_code": "        IStructuredStorage(storageProxy).setProxyLogicContractAndDeployer(logicProxy, msg.sender);\n",
          "message": null
        }
      ]
    }
  }
}