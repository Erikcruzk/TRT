function referrerWithdraw(
    address _address,
    bool _withdrawAsStable
)
    external
{
    require(msg.sender == _address || twoKeyEventSource.isAddressMaintainer(msg.sender), "Unauthorized");
    address twoKeyAdminAddress;
    address twoKeyUpgradableExchangeContract;

    uint balance;
    address _referrer = twoKeyEventSource.plasmaOf(_address);

    if(referrerPlasma2Balances2key[_referrer] != 0) {
        twoKeyAdminAddress = getContractProxyAddress("TwoKeyAdmin");
        twoKeyUpgradableExchangeContract = getContractProxyAddress("TwoKeyUpgradableExchange");

        balance = referrerPlasma2Balances2key[_referrer];
        referrerPlasma2Balances2key[_referrer] = 0;

        if(_withdrawAsStable == true) {
            require(IERC20(twoKeyEconomy).approve(twoKeyUpgradableExchangeContract, balance), "Approval failed");
            IUpgradableExchange(twoKeyUpgradableExchangeContract).buyStableCoinWith2key(balance, _address);
        }
        else if (block.timestamp >= ITwoKeyAdmin(twoKeyAdminAddress).getTwoKeyRewardsReleaseDate()) {
            require(IERC20(twoKeyEconomy).transfer(_address, balance), "Transfer failed");
        }
        else {
            revert("Rewards not available yet");
        }

    }
    reservedAmount2keyForRewards -= balance;
}