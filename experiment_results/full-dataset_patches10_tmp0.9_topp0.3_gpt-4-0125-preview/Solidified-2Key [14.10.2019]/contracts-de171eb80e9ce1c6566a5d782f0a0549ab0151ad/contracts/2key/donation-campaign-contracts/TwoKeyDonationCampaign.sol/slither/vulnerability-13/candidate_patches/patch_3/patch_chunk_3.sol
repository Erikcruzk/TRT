function buyTokensAndDistributeReferrerRewards(
    uint256 _maxReferralRewardETHWei,
    address _converter,
    uint _conversionId
)
external
returns (uint)
{
    require(msg.sender == twoKeyDonationConversionHandler);
    //If fiat conversion do exactly the same just send different reward and don't buy tokens, take them from contract
    uint totalBounty2keys;
    if(maxReferralRewardPercent > 0) {
        //Buy tokens from upgradable exchange
        totalBounty2keys = buyTokensFromUpgradableExchange(_maxReferralRewardETHWei, address(this));
        
        // Since the original code is potentially vulnerable to reentrancy attacks where
        // external calls can lead to re-entering the function and manipulate its state
        // before it finishes executing, move the external call (buyTokensFromUpgradableExchange)
        // before state updates to adhere to the checks-effects-interactions pattern.
        
        //Handle refchain rewards
        ITwoKeyDonationLogicHandler(twoKeyDonationLogicHandler).updateRefchainRewards(
            _maxReferralRewardETHWei,
            _converter,
            _conversionId,
            totalBounty2keys);

    }
    reservedAmount2keyForRewards = reservedAmount2keyForRewards.add(totalBounty2keys);
    return totalBounty2keys;
}