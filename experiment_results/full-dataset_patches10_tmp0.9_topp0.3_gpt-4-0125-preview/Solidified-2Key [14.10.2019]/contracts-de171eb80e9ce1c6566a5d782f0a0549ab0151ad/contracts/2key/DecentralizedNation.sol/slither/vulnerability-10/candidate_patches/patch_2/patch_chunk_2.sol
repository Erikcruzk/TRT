function executeVoting(uint campaign_id, bytes signature) public returns (uint) {
    Campaign storage campaign = allCampaigns[campaign_id];
    require(campaign.finished == false);
    ITwoKeyWeightedVoteContract(campaign.votingContract).transferSig(signature);
    address [] memory allParticipants = ITwoKeyWeightedVoteContract(campaign.votingContract).getAllVoters();
    for(uint i=0; i<allParticipants.length; i++) {
        bool vote;
        uint power;
        (vote,power) = ITwoKeyWeightedVoteContract(campaign.votingContract).getVoteAndChoicePerAddress(allParticipants[i]);
        if(vote == true) {
            campaign.votesYes++;
            campaign.votingResultForYes = campaign.votingResultForYes + int(power);
        }
        if(vote == false){
            campaign.votesNo++;
            campaign.votingResultForNo = campaign.votingResultForNo + int(power);
        }
    }
    campaign.finished = true;
}