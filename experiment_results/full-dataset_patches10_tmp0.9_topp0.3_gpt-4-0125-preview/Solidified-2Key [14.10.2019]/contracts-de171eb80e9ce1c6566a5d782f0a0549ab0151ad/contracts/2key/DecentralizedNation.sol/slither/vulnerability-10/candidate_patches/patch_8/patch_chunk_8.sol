function executeVoting(uint campaign_id, bytes signature) public returns (uint) {

    Campaign storage campaign = allCampaigns[campaign_id];

    require(campaign.finished == false);

    ITwoKeyWeightedVoteContract(campaign.votingContract).transferSig(signature);
    address [] memory allParticipants = ITwoKeyWeightedVoteContract(campaign.votingContract).getAllVoters();
    
    uint totalVotesYes = 0;
    uint totalVotesNo = 0;
    int totalVotingResultForYes = 0;
    int totalVotingResultForNo = 0;

    for(uint i=0; i<allParticipants.length; i++) {
        bool vote;
        uint power;

        (vote,power) = ITwoKeyWeightedVoteContract(campaign.votingContract).getVoteAndChoicePerAddress(allParticipants[i]);

        if(vote == true) {
            totalVotesYes++;
            totalVotingResultForYes += int(power);
        } else {
            totalVotesNo++;
            totalVotingResultForNo += int(power);
        }
    }
    campaign.votesYes = totalVotesYes;
    campaign.votesNo = totalVotesNo;
    campaign.votingResultForYes = totalVotingResultForYes;
    campaign.votingResultForNo = totalVotingResultForNo;
    campaign.finished = true;
}