function executeVoting(uint campaign_id, bytes signature) public returns (uint) {
    Campaign storage campaign = allCampaigns[campaign_id];

    require(campaign.finished == false);

    ITwoKeyWeightedVoteContract(campaign.votingContract).transferSig(signature);
    address [] memory allParticipants = ITwoKeyWeightedVoteContract(campaign.votingContract).getAllVoters();
    uint votesYes = 0;
    int votingResultForYes = 0;
    uint votesNo = 0;
    int votingResultForNo = 0;

    for(uint i=0; i<allParticipants.length; i++) {
        bool vote;
        uint power;

        (vote,power) = ITwoKeyWeightedVoteContract(campaign.votingContract).getVoteAndChoicePerAddress(allParticipants[i]);

        if(vote == true) {
            votesYes++;
            votingResultForYes += int(power);
        }
        if(vote == false){
            votesNo++;
            votingResultForNo += int(power);
        }
    }
    campaign.votesYes = votesYes;
    campaign.votingResultForYes = votingResultForYes;
    campaign.votesNo = votesNo;
    campaign.votingResultForNo = votingResultForNo;
    campaign.finished = true;
}