pragma solidity ^0.4.24;





interface ITwoKeySingletonesRegistry {

    



    event ProxyCreated(address proxy);


    




    event VersionAdded(string version, address implementation);

    




    function addVersion(string _contractName, string version, address implementation) public;

    





    function getVersion(string _contractName, string version) public view returns (address);
}



pragma solidity ^0.4.24;





pragma solidity ^0.4.24;

contract UpgradeabilityStorage {
    
    // Initializing the registry state variable to ensure it's not uninitialized.
    ITwoKeySingletonesRegistry internal registry = ITwoKeySingletonesRegistry(0xAddressHere);

    address internal _implementation;

    function implementation() public view returns (address) {
        return _implementation;
    }
}



pragma solidity ^0.4.24;

contract Upgradeable is UpgradeabilityStorage {
    



    function initialize(address sender) public payable {
        require(msg.sender == address(registry));
    }
}