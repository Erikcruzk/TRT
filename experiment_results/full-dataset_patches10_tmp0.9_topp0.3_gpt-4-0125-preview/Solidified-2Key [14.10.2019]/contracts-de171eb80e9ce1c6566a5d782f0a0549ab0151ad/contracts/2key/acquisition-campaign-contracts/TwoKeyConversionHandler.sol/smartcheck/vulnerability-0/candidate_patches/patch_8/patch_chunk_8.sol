function moveFromStateAToStateB(
    address _converter,
    bytes32 destinationState
)
internal
{
    ConverterState state = converterToState[_converter];
    bytes32 key = convertConverterStateToBytes(state);
    uint i;
    for(i = 0; i < stateToConverter[key].length; i++) {
        if(stateToConverter[key][i] == _converter) {
            stateToConverter[destinationState].push(_converter);
            if(i < stateToConverter[key].length - 1) {
                stateToConverter[key][i] = stateToConverter[key][stateToConverter[key].length-1];
            }
            stateToConverter[key].length--;
            break;
        }
    }
}