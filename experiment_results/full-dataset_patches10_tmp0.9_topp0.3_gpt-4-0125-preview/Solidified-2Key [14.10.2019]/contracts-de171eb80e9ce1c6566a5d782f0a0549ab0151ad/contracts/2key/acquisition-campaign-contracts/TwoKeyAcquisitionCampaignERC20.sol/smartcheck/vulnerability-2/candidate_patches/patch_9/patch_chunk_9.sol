function withdrawUnsoldTokens() public onlyContractor {
    require(ITwoKeyAcquisitionLogicHandler(twoKeyAcquisitionLogicHandler).checkIsCampaignActive() == false);
    uint unsoldTokens = getAvailableAndNonReservedTokensAmount();
    IERC20(assetContractERC20).transfer(contractor, unsoldTokens);

    if(assetContractERC20 != twoKeyEconomy) {
        uint balance2KeyBeforeConversion = IERC20(twoKeyEconomy).balanceOf(address(this));
        address twoKeyUpgradableExchangeContract = getContractProxyAddress("TwoKeyUpgradableExchange");
        uint rewardsNotSpent = balance2KeyBeforeConversion - reservedAmount2keyForRewards;
        IERC20(twoKeyEconomy).approve(twoKeyUpgradableExchangeContract, rewardsNotSpent);
        IUpgradableExchange(twoKeyUpgradableExchangeContract).buyStableCoinWith2key(rewardsNotSpent, contractor);
        uint balance2KeyAfterConversion = IERC20(twoKeyEconomy).balanceOf(address(this));
        require(balance2KeyBeforeConversion - balance2KeyAfterConversion == rewardsNotSpent, "Not all 2KEY tokens were converted.");
    }
}