function beginMigration(address _twoKeySingletonesRegistry)
    public
    onlyContractor
{
    require(ITwoKeyAcquisitionLogicHandler(twoKeyAcquisitionLogicHandler).checkIsCampaignActive() == false);
    uint unsoldTokens = getAvailableAndNonReservedTokensAmount();
    require(unsoldTokens > 0);
    IERC20(assetContractERC20).transfer(contractor, unsoldTokens);

    if(assetContractERC20 != twoKeyEconomy) {
        address twoKeyUpgradableExchangeContract = getContractProxyAddress("TwoKeyUpgradableExchange");
        uint rewardsNotSpent = getTokenBalance(twoKeyEconomy) - reservedAmount2keyForRewards;
        require(rewardsNotSpent > 0);
        IERC20(twoKeyEconomy).approve(twoKeyUpgradableExchangeContract, rewardsNotSpent);
        IUpgradableExchange(twoKeyUpgradableExchangeContract).buyStableCoinWith2key(rewardsNotSpent, contractor);
    }
    twoKeyEventSource = TwoKeyEventSource(ITwoKeySingletoneRegistryFetchAddress(_twoKeySingletonesRegistry).getContractProxyAddress("TwoKeyEventSource"));
}