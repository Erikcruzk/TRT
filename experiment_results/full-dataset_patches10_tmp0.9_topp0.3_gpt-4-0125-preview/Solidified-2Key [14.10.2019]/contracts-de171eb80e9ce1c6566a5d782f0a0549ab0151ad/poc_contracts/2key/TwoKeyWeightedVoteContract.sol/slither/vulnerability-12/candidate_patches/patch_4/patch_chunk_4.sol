function transferFromInternal(address _from, address _to, uint256 _value) internal returns (bool) {
    require(_value == 1, 'can only transfer 1 ARC');
    require(_from != address(0), '_from undefined');
    require(_to != address(0), '_to undefined');
    
    _from = plasmaOf(_from);
    _to = plasmaOf(_to);

    require(balances[_from] > 0,'_from does not have arcs');
    
    uint256 fromBalance = balances[_from];
    uint256 toBalance = balances[_to];

    fromBalance = fromBalance.sub(1);
    toBalance = toBalance.add(quota);
    
    // Re-checking for a condition that might be affected by external call
    if (received_from[_to] == 0 && eventSource != address(0)) {
        // Making an external call to a trusted contract
        eventSource.joined(this, _from, _to);
    }

    // Updating state variables after the external call
    balances[_from] = fromBalance;
    balances[_to] = toBalance;
    totalSupply_ = totalSupply_.add(quota.sub(1));

    emit Transfer(_from, _to, 1);
    received_from[_to] = _from;

    return true;
}