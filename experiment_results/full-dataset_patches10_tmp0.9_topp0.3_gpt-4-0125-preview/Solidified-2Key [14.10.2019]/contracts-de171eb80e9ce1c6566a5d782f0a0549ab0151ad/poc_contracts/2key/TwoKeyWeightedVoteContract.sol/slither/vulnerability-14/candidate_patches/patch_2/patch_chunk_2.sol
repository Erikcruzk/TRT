function transferCoins(address[] voters, uint i, uint tokens) private {
    address influencer = voters[i];
    require(address(erc20_token_sell_contract).call(bytes4(keccak256("transferFrom(address,address,uint256)")),
      ethereumOf(influencer), address(this), tokens));
    
    xbalances[owner_plasma] += tokens;

    for (uint j = 0; j <= i; j++) {
        uint k = i - j;
        tokens = sqrt(tokens.mul(cost));
        if (tokens == 0) {
            break;
        }
        address voter = voters[k];
        xbalances[plasmaOf(voter)] += tokens;
        xbalances[owner_plasma] -= tokens;

        // Moving external call to the end of the transaction to prevent re-entrancy
    }

    // Perform actual ERC20 token transfer in a separate loop to avoid re-entrancy attack
    for (uint j = 0; j <= i; j++) {
        if (j != i) { // Skip the last since it's already been transferred above
            tokens = sqrt(tokens.mul(cost));
        }
        if (tokens == 0) {
            break;
        }
        require(erc20_token_sell_contract.transferFrom(this, ethereumOf(voters[j]), tokens), "Transfer failed");
    }
}