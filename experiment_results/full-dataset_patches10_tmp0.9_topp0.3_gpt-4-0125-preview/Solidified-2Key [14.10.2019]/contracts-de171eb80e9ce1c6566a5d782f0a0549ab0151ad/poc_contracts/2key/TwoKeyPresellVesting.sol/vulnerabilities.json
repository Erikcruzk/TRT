{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 216,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract TokenVesting is Ownable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 159,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor() public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 160,
          "vulnerability_to_line": null,
          "vulnerability_code": "    owner = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 161,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 245,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 246,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _beneficiary,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 247,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _start,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 248,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _cliff,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _duration,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 250,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool _revocable\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 251,
          "vulnerability_to_line": null,
          "vulnerability_code": "  )\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "    public\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 253,
          "vulnerability_to_line": null,
          "vulnerability_code": "  {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(_beneficiary != address(0));\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 337,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tconstructor(address _beneficiary,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 338,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tuint256 _start, uint256 _cliff, uint256 _duration, bool _revocable,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 339,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tuint256 _numPayments,\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 340,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tbool _withBonus, uint256 _bonusPrecentage)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 341,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tTokenVesting(_beneficiary, _start, _cliff, _duration, _revocable)  public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 342,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\twithBonus = _withBonus;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 343,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tbonusPrecentage = _bonusPrecentage;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 344,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tnumPayments = _numPayments;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 345,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t}\n",
          "message": "Consider making costructor payable to save gas."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_46"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 268,
          "vulnerability_to_line": 278,
          "vulnerability_code": "  function release(ERC20Basic _token) public {\n\n    uint256 unreleased = releasableAmount(_token);\n\n\n\n    require(unreleased > 0);\n\n\n\n    released[_token] = released[_token].add(unreleased);\n\n\n\n    _token.safeTransfer(beneficiary, unreleased);\n\n\n\n    emit Released(unreleased);\n",
          "message": "Reentrancy in TokenVesting.release (TwoKeyPresellVesting.sol#268-278):\n\tExternal calls:\n\t- unreleased = releasableAmount(_token) (TwoKeyPresellVesting.sol#269)\n\tState variables written after the call(s):\n\t- released (TwoKeyPresellVesting.sol#273)\n"
        },
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": 299,
          "vulnerability_code": "  function revoke(ERC20Basic _token) public onlyOwner {\n\n    require(revocable);\n\n    require(!revoked[_token]);\n\n\n\n    uint256 balance = _token.balanceOf(address(this));\n\n\n\n    uint256 unreleased = releasableAmount(_token);\n\n    uint256 refund = balance.sub(unreleased);\n\n\n\n    revoked[_token] = true;\n\n\n\n    _token.safeTransfer(owner, refund);\n\n\n\n    emit Revoked();\n",
          "message": "Reentrancy in TokenVesting.revoke (TwoKeyPresellVesting.sol#285-299):\n\tExternal calls:\n\t- balance = _token.balanceOf(address(this)) (TwoKeyPresellVesting.sol#289)\n\t- unreleased = releasableAmount(_token) (TwoKeyPresellVesting.sol#291)\n\tState variables written after the call(s):\n\t- revoked (TwoKeyPresellVesting.sol#294)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 313,
          "vulnerability_to_line": 324,
          "vulnerability_code": "  function vestedAmount(ERC20Basic _token) public view returns (uint256) {\n\n    uint256 currentBalance = _token.balanceOf(address(this));\n\n    uint256 totalBalance = currentBalance.add(released[_token]);\n\n\n\n    if (block.timestamp < cliff) {\n\n      return 0;\n\n    } else if (block.timestamp >= start.add(duration) || revoked[_token]) {\n\n      return totalBalance;\n\n    } else {\n\n      return totalBalance.mul(block.timestamp.sub(start)).div(duration);\n\n    }\n",
          "message": "TokenVesting.vestedAmount (TwoKeyPresellVesting.sol#313-324) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < cliff (TwoKeyPresellVesting.sol#317-323)\n\t- block.timestamp >= start.add(duration) || revoked[_token] (TwoKeyPresellVesting.sol#319-323)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply() public view returns (uint256);\n",
          "message": "ERC20Basic.totalSupply (TwoKeyPresellVesting.sol#67) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address _who) public view returns (uint256);\n",
          "message": "ERC20Basic.balanceOf (TwoKeyPresellVesting.sol#68) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value) public returns (bool);\n",
          "message": "ERC20Basic.transfer (TwoKeyPresellVesting.sol#69) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address _ocwner, address _spender) public view returns (uint256);\n",
          "message": "ERC20Basic.allowance (TwoKeyPresellVesting.sol#70) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address spender, uint tokens) public returns (bool success);\n",
          "message": "ERC20Basic.approve (TwoKeyPresellVesting.sol#71) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n",
          "message": "ERC20Basic.transferFrom (TwoKeyPresellVesting.sol#72) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 177,
          "vulnerability_to_line": 180,
          "vulnerability_code": "  function renounceOwnership() public onlyOwner {\n\n    emit OwnershipRenounced(owner);\n\n    owner = address(0);\n",
          "message": "Ownable.renounceOwnership (TwoKeyPresellVesting.sol#177-180) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 186,
          "vulnerability_to_line": 188,
          "vulnerability_code": "  function transferOwnership(address _newOwner) public onlyOwner {\n\n    _transferOwnership(_newOwner);\n",
          "message": "Ownable.transferOwnership (TwoKeyPresellVesting.sol#186-188) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 268,
          "vulnerability_to_line": 278,
          "vulnerability_code": "  function release(ERC20Basic _token) public {\n\n    uint256 unreleased = releasableAmount(_token);\n\n\n\n    require(unreleased > 0);\n\n\n\n    released[_token] = released[_token].add(unreleased);\n\n\n\n    _token.safeTransfer(beneficiary, unreleased);\n\n\n\n    emit Released(unreleased);\n",
          "message": "TokenVesting.release (TwoKeyPresellVesting.sol#268-278) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": 299,
          "vulnerability_code": "  function revoke(ERC20Basic _token) public onlyOwner {\n\n    require(revocable);\n\n    require(!revoked[_token]);\n\n\n\n    uint256 balance = _token.balanceOf(address(this));\n\n\n\n    uint256 unreleased = releasableAmount(_token);\n\n    uint256 refund = balance.sub(unreleased);\n\n\n\n    revoked[_token] = true;\n\n\n\n    _token.safeTransfer(owner, refund);\n\n\n\n    emit Revoked();\n",
          "message": "TokenVesting.revoke (TwoKeyPresellVesting.sol#285-299) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n",
          "message": "Parameter '_a' of SafeMath.mul (TwoKeyPresellVesting.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n",
          "message": "Parameter '_b' of SafeMath.mul (TwoKeyPresellVesting.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_a' of SafeMath.div (TwoKeyPresellVesting.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_b' of SafeMath.div (TwoKeyPresellVesting.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_a' of SafeMath.sub (TwoKeyPresellVesting.sol#41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_b' of SafeMath.sub (TwoKeyPresellVesting.sol#41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n",
          "message": "Parameter '_a' of SafeMath.add (TwoKeyPresellVesting.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n",
          "message": "Parameter '_b' of SafeMath.add (TwoKeyPresellVesting.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 103,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20Basic _token,\n",
          "message": "Parameter '_token' of SafeERC20.safeTransfer (TwoKeyPresellVesting.sol#103) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 104,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _to,\n",
          "message": "Parameter '_to' of SafeERC20.safeTransfer (TwoKeyPresellVesting.sol#104) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _value\n",
          "message": "Parameter '_value' of SafeERC20.safeTransfer (TwoKeyPresellVesting.sol#105) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20 _token,\n",
          "message": "Parameter '_token' of SafeERC20.safeTransferFrom (TwoKeyPresellVesting.sol#113) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 114,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _from,\n",
          "message": "Parameter '_from' of SafeERC20.safeTransferFrom (TwoKeyPresellVesting.sol#114) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _to,\n",
          "message": "Parameter '_to' of SafeERC20.safeTransferFrom (TwoKeyPresellVesting.sol#115) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 116,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _value\n",
          "message": "Parameter '_value' of SafeERC20.safeTransferFrom (TwoKeyPresellVesting.sol#116) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ERC20 _token,\n",
          "message": "Parameter '_token' of SafeERC20.safeApprove (TwoKeyPresellVesting.sol#124) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _spender,\n",
          "message": "Parameter '_spender' of SafeERC20.safeApprove (TwoKeyPresellVesting.sol#125) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 126,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _value\n",
          "message": "Parameter '_value' of SafeERC20.safeApprove (TwoKeyPresellVesting.sol#126) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 186,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferOwnership(address _newOwner) public onlyOwner {\n",
          "message": "Parameter '_newOwner' of Ownable.transferOwnership (TwoKeyPresellVesting.sol#186) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": 198,
          "vulnerability_code": "  function _transferOwnership(address _newOwner) internal {\n\n    require(_newOwner != address(0));\n\n    emit OwnershipTransferred(owner, _newOwner);\n\n    owner = _newOwner;\n",
          "message": "Function 'Ownable._transferOwnership' (TwoKeyPresellVesting.sol#194-198) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 194,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _transferOwnership(address _newOwner) internal {\n",
          "message": "Parameter '_newOwner' of Ownable._transferOwnership (TwoKeyPresellVesting.sol#194) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 246,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address _beneficiary,\n",
          "message": "Parameter '_beneficiary' of TokenVesting. (TwoKeyPresellVesting.sol#246) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 247,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _start,\n",
          "message": "Parameter '_start' of TokenVesting. (TwoKeyPresellVesting.sol#247) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 248,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _cliff,\n",
          "message": "Parameter '_cliff' of TokenVesting. (TwoKeyPresellVesting.sol#248) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 249,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 _duration,\n",
          "message": "Parameter '_duration' of TokenVesting. (TwoKeyPresellVesting.sol#249) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 250,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool _revocable\n",
          "message": "Parameter '_revocable' of TokenVesting. (TwoKeyPresellVesting.sol#250) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 268,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function release(ERC20Basic _token) public {\n",
          "message": "Parameter '_token' of TokenVesting.release (TwoKeyPresellVesting.sol#268) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revoke(ERC20Basic _token) public onlyOwner {\n",
          "message": "Parameter '_token' of TokenVesting.revoke (TwoKeyPresellVesting.sol#285) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function releasableAmount(ERC20Basic _token) public view returns (uint256) {\n",
          "message": "Parameter '_token' of TokenVesting.releasableAmount (TwoKeyPresellVesting.sol#305) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 313,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function vestedAmount(ERC20Basic _token) public view returns (uint256) {\n",
          "message": "Parameter '_token' of TokenVesting.vestedAmount (TwoKeyPresellVesting.sol#313) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 339,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tuint256 _numPayments,\n",
          "message": "Parameter '_numPayments' of TwoKeyPresellVesting. (TwoKeyPresellVesting.sol#339) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 340,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tbool _withBonus, uint256 _bonusPrecentage)\n",
          "message": "Parameter '_withBonus' of TwoKeyPresellVesting. (TwoKeyPresellVesting.sol#340) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 340,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t\tbool _withBonus, uint256 _bonusPrecentage)\n",
          "message": "Parameter '_bonusPrecentage' of TwoKeyPresellVesting. (TwoKeyPresellVesting.sol#340) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 179,
          "vulnerability_to_line": null,
          "vulnerability_code": "    owner = address(0);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 92,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 205,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 329,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 217,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tbool withBonus;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 334,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tuint256 bonusPrecentage;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 335,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tuint256 numPayments;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}