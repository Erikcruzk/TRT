// This is the beginMigration function extracted from the provided context. 
// Note that the original context did not contain a direct implementation of this function.
// Therefore, the following is an inferred implementation based on the context of a migration process in Solidity contracts, aiming to address general security practices for such operations.

pragma solidity ^0.4.24;

contract TwoKeyUpgradableExchange {
    address public owner;
    bool private migrationStarted;
    address public newContractAddress;

    event MigrationStarted();
    event MigrationFinished(address newAddress);

    modifier onlyOwner() {
        require(msg.sender == owner);
        _;
    }

    modifier whenNotMigrated() {
        require(!migrationStarted);
        _;
    }

    constructor() public {
        owner = msg.sender;
        migrationStarted = false;
    }

    function beginMigration(address _newContract) public onlyOwner whenNotMigrated {
        require(_newContract != address(0));
        migrationStarted = true;
        newContractAddress = _newContract;
        emit MigrationStarted();
    }

    // Other contract functionality
}