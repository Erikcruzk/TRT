function replaceOneself(address newAdminContract) external wasNotReplaced adminsVotingApproved {
    require(newAdminContract != address(0), "New admin contract address cannot be zero.");

    AdminContract adminContract = AdminContract(newAdminContract);
    uint balanceOfOldAdmin = economy.balanceOf(address(this));
    uint contractBalance = address(this).balance;

    // Ensure no state changes before external calls to mitigate reentrancy
    wasReplaced = true;
    newAdmin = newAdminContract;

    // External calls after state changes
    economy.transfer(newAdminContract, balanceOfOldAdmin);
    economy.transferOwnership(newAdminContract);
    exchange.transferOwnership(newAdminContract);

    // Use call.value()() instead of transfer for forwarding all available gas. Avoids issues with gas stipend
    (bool success, ) = newAdminContract.call.value(contractBalance)("");
    require(success, "Transfer of contract balance failed.");
}