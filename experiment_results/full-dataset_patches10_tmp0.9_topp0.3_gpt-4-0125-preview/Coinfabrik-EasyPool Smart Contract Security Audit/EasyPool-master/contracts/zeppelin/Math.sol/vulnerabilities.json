{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function max(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_a' of Math.max (Math.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function max(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_b' of Math.max (Math.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function min(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_a' of Math.min (Math.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function min(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_b' of Math.min (Math.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function average(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_a' of Math.average (Math.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function average(uint256 _a, uint256 _b) internal pure returns (uint256) {\n",
          "message": "Parameter '_b' of Math.average (Math.sol#19) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.24;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}