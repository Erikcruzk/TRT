{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_53"
      ],
      "vulnerability_findings": [
        {
          "name": "uninitialized-state",
          "vulnerability_from_line": 117,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 totalSupply_;\n",
          "message": "BasicToken.totalSupply_ (ERC827Token.sol#117) is never initialized. It is used in:\n\t- totalSupply (ERC827Token.sol#122-124)\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 117,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 totalSupply_;\n",
          "message": "BasicToken.totalSupply_ should be constant (ERC827Token.sol#117)\n"
        },
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Different versions of Solidity is used in ERC827Token.sol:\n\t- Version used: ['^0.4.13', '^0.4.18']\n\t- ERC827Token.sol#3 declares pragma solidity^0.4.18\n\t- ERC827Token.sol#20 declares pragma solidity^0.4.18\n\t- ERC827Token.sol#35 declares pragma solidity^0.4.13\n\t- ERC827Token.sol#54 declares pragma solidity^0.4.18\n\t- ERC827Token.sol#105 declares pragma solidity^0.4.18\n\t- ERC827Token.sol#155 declares pragma solidity^0.4.18\n\t- ERC827Token.sol#255 declares pragma solidity^0.4.13\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function totalSupply() public view returns (uint256);\n",
          "message": "ERC20Basic.totalSupply (ERC827Token.sol#12) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 122,
          "vulnerability_to_line": 124,
          "vulnerability_code": "  function totalSupply() public view returns (uint256) {\n\n    return totalSupply_;\n",
          "message": "BasicToken.totalSupply (ERC827Token.sol#122-124) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address who) public view returns (uint256);\n",
          "message": "ERC20Basic.balanceOf (ERC827Token.sol#13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 147,
          "vulnerability_to_line": 149,
          "vulnerability_code": "  function balanceOf(address _owner) public view returns (uint256 balance) {\n\n    return balances[_owner];\n",
          "message": "BasicToken.balanceOf (ERC827Token.sol#147-149) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address owner, address spender) public view returns (uint256);\n",
          "message": "ERC20.allowance (ERC827Token.sol#27) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": 212,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n\n    return allowed[_owner][_spender];\n",
          "message": "StandardToken.allowance (ERC827Token.sol#210-212) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve( address _spender, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": "ERC827.approve (ERC827Token.sol#46) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": 293,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.approve(_spender, _value);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "ERC827Token.approve (ERC827Token.sol#285-293) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer( address _to, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": "ERC827.transfer (ERC827Token.sol#47) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": 312,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_to != address(this));\n\n\n\n    super.transfer(_to, _value);\n\n\n\n    require(_to.call(_data));\n\n    return true;\n",
          "message": "ERC827Token.transfer (ERC827Token.sol#305-312) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom( address _from, address _to, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": "ERC827.transferFrom (ERC827Token.sol#48) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": 332,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_to != address(this));\n\n\n\n    super.transferFrom(_from, _to, _value);\n\n\n\n    require(_to.call(_data));\n\n    return true;\n",
          "message": "ERC827Token.transferFrom (ERC827Token.sol#325-332) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": 354,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.increaseApproval(_spender, _addedValue);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "ERC827Token.increaseApproval (ERC827Token.sol#346-354) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": 376,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.decreaseApproval(_spender, _subtractedValue);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "ERC827Token.decreaseApproval (ERC827Token.sol#368-376) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Detected issues with version pragma in ERC827Token.sol:\n\t- pragma solidity^0.4.18 (ERC827Token.sol#3): it allows old versions\n\t- pragma solidity^0.4.18 (ERC827Token.sol#20): it allows old versions\n\t- pragma solidity^0.4.13 (ERC827Token.sol#35): it allows old versions\n\t- pragma solidity^0.4.18 (ERC827Token.sol#54): it allows old versions\n\t- pragma solidity^0.4.18 (ERC827Token.sol#105): it allows old versions\n\t- pragma solidity^0.4.18 (ERC827Token.sol#155): it allows old versions\n\t- pragma solidity^0.4.13 (ERC827Token.sol#255): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": 293,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.approve(_spender, _value);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "Low level call in ERC827Token.approve (ERC827Token.sol#285-293):\n\t-require(bool)(_spender.call(_data)) ERC827Token.sol#290\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": 312,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_to != address(this));\n\n\n\n    super.transfer(_to, _value);\n\n\n\n    require(_to.call(_data));\n\n    return true;\n",
          "message": "Low level call in ERC827Token.transfer (ERC827Token.sol#305-312):\n\t-require(bool)(_to.call(_data)) ERC827Token.sol#310\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": 332,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n\n    require(_to != address(this));\n\n\n\n    super.transferFrom(_from, _to, _value);\n\n\n\n    require(_to.call(_data));\n\n    return true;\n",
          "message": "Low level call in ERC827Token.transferFrom (ERC827Token.sol#325-332):\n\t-require(bool)(_to.call(_data)) ERC827Token.sol#330\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": 354,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.increaseApproval(_spender, _addedValue);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "Low level call in ERC827Token.increaseApproval (ERC827Token.sol#346-354):\n\t-require(bool)(_spender.call(_data)) ERC827Token.sol#351\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": 376,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n\n    require(_spender != address(this));\n\n\n\n    super.decreaseApproval(_spender, _subtractedValue);\n\n\n\n    require(_spender.call(_data));\n\n\n\n    return true;\n",
          "message": "Low level call in ERC827Token.decreaseApproval (ERC827Token.sol#368-376):\n\t-require(bool)(_spender.call(_data)) ERC827Token.sol#373\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 147,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function balanceOf(address _owner) public view returns (uint256 balance) {\n",
          "message": "Parameter '_owner' of BasicToken.balanceOf (ERC827Token.sol#147) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 131,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_to' of BasicToken.transfer (ERC827Token.sol#131) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 131,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of BasicToken.transfer (ERC827Token.sol#131) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n",
          "message": "Parameter '_owner' of StandardToken.allowance (ERC827Token.sol#210) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 210,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address _owner, address _spender) public view returns (uint256) {\n",
          "message": "Parameter '_spender' of StandardToken.allowance (ERC827Token.sol#210) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_from' of StandardToken.transferFrom (ERC827Token.sol#176) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_to' of StandardToken.transferFrom (ERC827Token.sol#176) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of StandardToken.transferFrom (ERC827Token.sol#176) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.approve (ERC827Token.sol#198) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": "Parameter '_value' of StandardToken.approve (ERC827Token.sol#198) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 224,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.increaseApproval (ERC827Token.sol#224) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 224,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n",
          "message": "Parameter '_addedValue' of StandardToken.increaseApproval (ERC827Token.sol#224) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n",
          "message": "Parameter '_spender' of StandardToken.decreaseApproval (ERC827Token.sol#240) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n",
          "message": "Parameter '_subtractedValue' of StandardToken.decreaseApproval (ERC827Token.sol#240) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_spender' of ERC827Token.approve (ERC827Token.sol#285) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_value' of ERC827Token.approve (ERC827Token.sol#285) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_data' of ERC827Token.approve (ERC827Token.sol#285) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_to' of ERC827Token.transfer (ERC827Token.sol#305) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_value' of ERC827Token.transfer (ERC827Token.sol#305) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_data' of ERC827Token.transfer (ERC827Token.sol#305) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_from' of ERC827Token.transferFrom (ERC827Token.sol#325) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_to' of ERC827Token.transferFrom (ERC827Token.sol#325) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_value' of ERC827Token.transferFrom (ERC827Token.sol#325) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_data' of ERC827Token.transferFrom (ERC827Token.sol#325) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_spender' of ERC827Token.increaseApproval (ERC827Token.sol#346) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_addedValue' of ERC827Token.increaseApproval (ERC827Token.sol#346) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_data' of ERC827Token.increaseApproval (ERC827Token.sol#346) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_spender' of ERC827Token.decreaseApproval (ERC827Token.sol#368) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_subtractedValue' of ERC827Token.decreaseApproval (ERC827Token.sol#368) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n",
          "message": "Parameter '_data' of ERC827Token.decreaseApproval (ERC827Token.sol#368) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 198,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 155,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 255,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 113,
          "vulnerability_to_line": null,
          "vulnerability_code": "  using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve( address _spender, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer( address _to, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom( address _from, address _to, uint256 _value, bytes _data ) public returns (bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 285,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address _spender, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 305,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 325,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address _from, address _to, uint256 _value, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function decreaseApproval(address _spender, uint _subtractedValue, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 115,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => uint256) balances;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 117,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 totalSupply_;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 c = a + b;\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 346,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function increaseApproval(address _spender, uint _addedValue, bytes _data) public returns (bool) {\n",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 c = a + b;\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}