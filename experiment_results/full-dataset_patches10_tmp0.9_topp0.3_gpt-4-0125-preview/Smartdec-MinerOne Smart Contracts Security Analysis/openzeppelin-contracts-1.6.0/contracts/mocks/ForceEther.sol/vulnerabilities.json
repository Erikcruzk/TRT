{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "accessible-selfdestruct",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    selfdestruct(_recipient);\n",
          "message": "Contract can be destructed by anyone in destroyAndSend"
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "suicidal",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "  function destroyAndSend(address _recipient) public {\n\n    selfdestruct(_recipient);\n",
          "message": "ForceEther.destroyAndSend (ForceEther.sol#15-17) allows anyone to destruct the contract\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "  function destroyAndSend(address _recipient) public {\n\n    selfdestruct(_recipient);\n",
          "message": "ForceEther.destroyAndSend (ForceEther.sol#15-17) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Detected issues with version pragma in ForceEther.sol:\n\t- pragma solidity^0.4.18 (ForceEther.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function ForceEther() public payable { }\n",
          "message": "Function 'ForceEther.ForceEther' (ForceEther.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function destroyAndSend(address _recipient) public {\n",
          "message": "Parameter '_recipient' of ForceEther.destroyAndSend (ForceEther.sol#15) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Unprotected Selfdestruct (SWC 106)",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    selfdestruct(_recipient);\n",
          "message": "Any sender can cause the contract to self-destruct.\nAny sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.\nClassification: SWC-106"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}