{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract Heritable is Ownable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 177,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(payee != 0 && payee != address(this));\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_14"
      ],
      "vulnerability_findings": [
        {
          "name": "incorrect-equality",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": 141,
          "vulnerability_code": "  function ownerLives() internal view returns (bool) {\n\n    return timeOfDeath == 0;\n",
          "message": "Heritable.ownerLives (SimpleSavingsWallet.sol#139-141) uses a dangerous strict equality:\n\t- timeOfDeath == 0\n"
        },
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Different versions of Solidity is used in SimpleSavingsWallet.sol:\n\t- Version used: ['^0.4.11', '^0.4.18']\n\t- SimpleSavingsWallet.sol#3 declares pragma solidity^0.4.18\n\t- SimpleSavingsWallet.sol#48 declares pragma solidity^0.4.11\n\t- SimpleSavingsWallet.sol#146 declares pragma solidity^0.4.11\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 42,
          "vulnerability_code": "  function transferOwnership(address newOwner) public onlyOwner {\n\n    require(newOwner != address(0));\n\n    OwnershipTransferred(owner, newOwner);\n\n    owner = newOwner;\n",
          "message": "Ownable.transferOwnership (SimpleSavingsWallet.sol#38-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 89,
          "vulnerability_to_line": 94,
          "vulnerability_code": "  function setHeir(address newHeir) public onlyOwner {\n\n    require(newHeir != owner);\n\n    heartbeat();\n\n    HeirChanged(owner, newHeir);\n\n    heir = newHeir;\n",
          "message": "Heritable.setHeir (SimpleSavingsWallet.sol#89-94) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 99,
          "vulnerability_to_line": 102,
          "vulnerability_code": "  function removeHeir() public onlyOwner {\n\n    heartbeat();\n\n    heir = 0;\n",
          "message": "Heritable.removeHeir (SimpleSavingsWallet.sol#99-102) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": 112,
          "vulnerability_code": "  function proclaimDeath() public onlyHeir {\n\n    require(ownerLives());\n\n    OwnerProclaimedDead(owner, heir, timeOfDeath);\n\n    timeOfDeath = now;\n",
          "message": "Heritable.proclaimDeath (SimpleSavingsWallet.sol#108-112) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": 132,
          "vulnerability_code": "  function claimHeirOwnership() public onlyHeir {\n\n    require(!ownerLives());\n\n    require(now >= timeOfDeath + heartbeatTimeout);\n\n    OwnershipTransferred(owner, heir);\n\n    HeirOwnershipClaimed(owner, heir);\n\n    owner = heir;\n\n    timeOfDeath = 0;\n",
          "message": "Heritable.claimHeirOwnership (SimpleSavingsWallet.sol#125-132) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": 171,
          "vulnerability_code": "  function () public payable {\n\n    Received(msg.sender, msg.value, this.balance);\n",
          "message": "SimpleSavingsWallet.fallback (SimpleSavingsWallet.sol#169-171) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": 181,
          "vulnerability_code": "  function sendTo(address payee, uint256 amount) public onlyOwner {\n\n    require(payee != 0 && payee != address(this));\n\n    require(amount > 0);\n\n    payee.transfer(amount);\n\n    Sent(payee, amount, this.balance);\n",
          "message": "SimpleSavingsWallet.sendTo (SimpleSavingsWallet.sol#176-181) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": "Detected issues with version pragma in SimpleSavingsWallet.sol:\n\t- pragma solidity^0.4.18 (SimpleSavingsWallet.sol#3): it allows old versions\n\t- pragma solidity^0.4.11 (SimpleSavingsWallet.sol#48): it allows old versions\n\t- pragma solidity^0.4.11 (SimpleSavingsWallet.sol#146): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "  function Ownable() public {\n\n    owner = msg.sender;\n",
          "message": "Function 'Ownable.Ownable' (SimpleSavingsWallet.sol#22-24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": 87,
          "vulnerability_code": "  function Heritable(uint256 _heartbeatTimeout) public {\n\n    setHeartbeatTimeout(_heartbeatTimeout);\n",
          "message": "Function 'Heritable.Heritable' (SimpleSavingsWallet.sol#85-87) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 85,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function Heritable(uint256 _heartbeatTimeout) public {\n",
          "message": "Parameter '_heartbeatTimeout' of Heritable.Heritable (SimpleSavingsWallet.sol#85) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 164,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function SimpleSavingsWallet(uint256 _heartbeatTimeout) Heritable(_heartbeatTimeout) public {}\n",
          "message": "Function 'SimpleSavingsWallet.SimpleSavingsWallet' (SimpleSavingsWallet.sol#164) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_OVERPOWERED_ROLE",
          "vulnerability_from_line": 89,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setHeir(address newHeir) public onlyOwner {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_OVERPOWERED_ROLE",
          "vulnerability_from_line": 134,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setHeartbeatTimeout(uint256 newHeartbeatTimeout) internal onlyOwner {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 146,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 169,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function () public payable {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 127,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(now >= timeOfDeath + heartbeatTimeout);\n",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 127,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(now >= timeOfDeath + heartbeatTimeout);\n",
          "message": null
        }
      ]
    }
  }
}