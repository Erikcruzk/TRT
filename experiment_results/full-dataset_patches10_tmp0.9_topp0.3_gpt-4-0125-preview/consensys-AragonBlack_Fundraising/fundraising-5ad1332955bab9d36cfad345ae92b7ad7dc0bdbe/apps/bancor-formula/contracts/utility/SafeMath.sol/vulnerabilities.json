{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function add(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_x' of SafeMath.add (SafeMath.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function add(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_y' of SafeMath.add (SafeMath.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sub(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_x' of SafeMath.sub (SafeMath.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sub(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_y' of SafeMath.sub (SafeMath.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mul(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_x' of SafeMath.mul (SafeMath.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mul(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_y' of SafeMath.mul (SafeMath.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function div(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_x' of SafeMath.div (SafeMath.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function div(uint256 _x, uint256 _y) internal pure returns (uint256) {\n",
          "message": "Parameter '_y' of SafeMath.div (SafeMath.sol#62) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}