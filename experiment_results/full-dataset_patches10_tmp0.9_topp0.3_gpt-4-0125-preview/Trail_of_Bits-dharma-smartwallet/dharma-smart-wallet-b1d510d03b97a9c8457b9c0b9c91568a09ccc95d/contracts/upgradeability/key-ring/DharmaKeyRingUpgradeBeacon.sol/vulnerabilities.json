{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "assembly",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 39,
          "vulnerability_code": "  function () external {\n\n    // Return implementation address for all callers other than the controller.\n\n    if (msg.sender != _CONTROLLER) {\n\n      // Load implementation from storage slot zero into memory and return it.\n\n      assembly {\n\n        mstore(0, sload(0))\n\n        return(0, 32)\n\n      }\n\n    } else {\n\n      // Set implementation - put first word in calldata in storage slot zero.\n\n      assembly { sstore(0, calldataload(0)) }\n\n    }\n",
          "message": "DharmaKeyRingUpgradeBeacon.fallback uses assembly (DharmaKeyRingUpgradeBeacon.sol#27-39)\n\t- DharmaKeyRingUpgradeBeacon.sol#31-34\n\t- DharmaKeyRingUpgradeBeacon.sol#37\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _implementation;\n",
          "message": "DharmaKeyRingUpgradeBeacon._implementation should be constant (DharmaKeyRingUpgradeBeacon.sol#14)\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.11;\n",
          "message": "Detected issues with version pragma in DharmaKeyRingUpgradeBeacon.sol:\n\t- pragma solidity0.5.11 (DharmaKeyRingUpgradeBeacon.sol#3): it allows old versions\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _implementation;\n",
          "message": "DharmaKeyRingUpgradeBeacon._implementation (DharmaKeyRingUpgradeBeacon.sol#14) is never used in DharmaKeyRingUpgradeBeacon\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    0x00000000011dF015e8aD00D7B2486a88C2Eb8210\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private _implementation;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  address private constant _CONTROLLER = address(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "      assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "      assembly { sstore(0, calldataload(0)) }\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}