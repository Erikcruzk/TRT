{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 15,
          "vulnerability_code": "  function transfer(address to, uint256 value) public returns (bool);\n\n\n",
          "message": "ISendToken.transfer (ISendToken.sol#13-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "  function isVerified(address _address) public constant returns(bool);\n\n\n",
          "message": "ISendToken.isVerified (ISendToken.sol#15-17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 19,
          "vulnerability_code": "  function verify(address _address) public;\n\n\n",
          "message": "ISendToken.verify (ISendToken.sol#17-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "  function unverify(address _address) public;\n\n\n",
          "message": "ISendToken.unverify (ISendToken.sol#19-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 30,
          "vulnerability_code": "  function verifiedTransferFrom(\n\n      address from,\n\n      address to,\n\n      uint256 value,\n\n      uint256 referenceId,\n\n      uint256 exchangeRate,\n\n      uint256 fee\n\n  ) public;\n\n\n",
          "message": "ISendToken.verifiedTransferFrom (ISendToken.sol#21-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 39,
          "vulnerability_code": "  function issueExchangeRate(\n\n      address _from,\n\n      address _to,\n\n      address _verifiedAddress,\n\n      uint256 _value,\n\n      uint256 _referenceId,\n\n      uint256 _exchangeRate\n\n  ) public;\n\n\n",
          "message": "ISendToken.issueExchangeRate (ISendToken.sol#30-39) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 6,
          "vulnerability_code": "pragma solidity ^0.4.18;\n\n\n",
          "message": "Detected issues with version pragma in ISendToken.sol:\n\t- pragma solidity^0.4.18 (ISendToken.sol#4-6): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isVerified(address _address) public constant returns(bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address to, uint256 value) public returns (bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isVerified(address _address) public constant returns(bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function verify(address _address) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function unverify(address _address) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) public;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) public;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}