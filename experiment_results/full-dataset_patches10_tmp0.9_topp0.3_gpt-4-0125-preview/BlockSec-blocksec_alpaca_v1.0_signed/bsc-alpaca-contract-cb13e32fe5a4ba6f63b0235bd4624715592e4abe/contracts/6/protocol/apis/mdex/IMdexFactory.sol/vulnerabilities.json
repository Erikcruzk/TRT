{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_13"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.6.6;\n",
          "message": "Detected issues with version pragma in IMdexFactory.sol:\n\t- pragma solidity0.6.6 (IMdexFactory.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FEE_RATE_DENOMINATOR() external view returns (uint256);\n",
          "message": "Function 'IMdexFactory.FEE_RATE_DENOMINATOR' (IMdexFactory.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pairFeeToRate(address) external view returns (uint256);\n",
          "message": "Parameter '' of IMdexFactory.pairFeeToRate (IMdexFactory.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pairFees(address) external view returns (uint256);\n",
          "message": "Parameter '' of IMdexFactory.pairFees (IMdexFactory.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allPairs(uint256) external view returns (address pair);\n",
          "message": "Parameter '' of IMdexFactory.allPairs (IMdexFactory.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFeeTo(address) external;\n",
          "message": "Parameter '' of IMdexFactory.setFeeTo (IMdexFactory.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFeeToSetter(address) external;\n",
          "message": "Parameter '' of IMdexFactory.setFeeToSetter (IMdexFactory.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addPair(address) external returns (bool);\n",
          "message": "Parameter '' of IMdexFactory.addPair (IMdexFactory.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function delPair(address) external returns (bool);\n",
          "message": "Parameter '' of IMdexFactory.delPair (IMdexFactory.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFeeRateNumerator(uint256) external;\n",
          "message": "Parameter '' of IMdexFactory.setFeeRateNumerator (IMdexFactory.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setDefaultFeeToRate(uint256) external;\n",
          "message": "Parameter '' of IMdexFactory.setDefaultFeeToRate (IMdexFactory.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getPairFees(address) external view returns (uint256);\n",
          "message": "Parameter '' of IMdexFactory.getPairFees (IMdexFactory.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getPairRate(address) external view returns (uint256);\n",
          "message": "Parameter '' of IMdexFactory.getPairRate (IMdexFactory.sol#56) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sortTokens(address tokenA, address tokenB) external pure returns (address token0, address token1);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getReserves(address tokenA, address tokenB) external view returns (uint256 reserveA, uint256 reserveB);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}