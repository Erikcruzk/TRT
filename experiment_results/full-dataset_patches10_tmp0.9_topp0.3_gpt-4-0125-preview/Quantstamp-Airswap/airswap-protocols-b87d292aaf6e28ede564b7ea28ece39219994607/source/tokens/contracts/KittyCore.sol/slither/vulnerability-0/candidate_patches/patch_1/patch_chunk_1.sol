function bidOnSiringAuction(
    uint256 _sireId,
    uint256 _matronId
)
    external
    payable
    whenNotPaused
{
    require(_owns(msg.sender, _matronId));
    require(isReadyToBreed(_matronId));
    require(_canBreedWithViaAuction(_matronId, _sireId));

    uint256 currentPrice = siringAuction.getCurrentPrice(_sireId);
    require(msg.value >= currentPrice + autoBirthFee);

    // Fix for reentrancy: transfer the Ether to the siringAuction before changing the state
    siringAuction.bid.value(msg.value - autoBirthFee)(_sireId);
    _breedWith(uint32(_matronId), uint32(_sireId));
}