function bidOnSiringAuction(
    uint256 _sireId,
    uint256 _matronId
)
    external
    payable
    whenNotPaused
{
    // Auction contract checks input sizes
    require(_owns(msg.sender, _matronId));
    require(isReadyToBreed(_matronId));
    require(_canBreedWithViaAuction(_matronId, _sireId));

    // Define the current price of the auction.
    uint256 currentPrice = siringAuction.getCurrentPrice(_sireId);
    require(msg.value >= currentPrice + autoBirthFee);

    // Transfer the bid amount minus the autoBirthFee to the siringAuction contract
    siringAuction.bid.value(msg.value - autoBirthFee)(_sireId);
    // Calling a separate internal function that is non-payable to avoid re-entrancy
    _breedWith(uint32(_matronId), uint32(_sireId));
}