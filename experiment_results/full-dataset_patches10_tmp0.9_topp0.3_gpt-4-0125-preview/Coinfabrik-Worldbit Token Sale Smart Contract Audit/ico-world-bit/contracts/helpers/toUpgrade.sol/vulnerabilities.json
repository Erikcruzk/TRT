{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 29,
          "vulnerability_code": "  function isUpgradeAgent() public constant returns (bool) {\n\n    return true;\n",
          "message": "UpgradeAgent.isUpgradeAgent (toUpgrade.sol#27-29) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": 64,
          "vulnerability_code": "  function upgradeFrom(address, uint) public {\n\n    //Does nothing, can't fail\n",
          "message": "toUpgrade.upgradeFrom (toUpgrade.sol#62-64) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function upgradeFrom(address from, uint value) public;\n",
          "message": "UpgradeAgent.upgradeFrom (toUpgrade.sol#47) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.15;\n",
          "message": "Detected issues with version pragma in toUpgrade.sol:\n\t- pragma solidity^0.4.15 (toUpgrade.sol#3): it allows old versions\n\t- pragma solidity^0.4.15 (toUpgrade.sol#53): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": 65,
          "vulnerability_code": "contract toUpgrade is UpgradeAgent {\n\n    \n\n  function toUpgrade(uint value) public {\n\n    originalSupply = value;\n\n  }\n\n\n\n  function upgradeFrom(address, uint) public {\n\n    //Does nothing, can't fail\n\n  }\n",
          "message": "Contract 'toUpgrade' (toUpgrade.sol#56-65) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function upgradeFrom(address, uint) public {\n",
          "message": "Parameter '' of toUpgrade.upgradeFrom (toUpgrade.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function upgradeFrom(address, uint) public {\n",
          "message": "Parameter '_scope_0' of toUpgrade.upgradeFrom (toUpgrade.sol#62) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_DEPRECATED_CONSTRUCTIONS",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isUpgradeAgent() public constant returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.15;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.15;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}