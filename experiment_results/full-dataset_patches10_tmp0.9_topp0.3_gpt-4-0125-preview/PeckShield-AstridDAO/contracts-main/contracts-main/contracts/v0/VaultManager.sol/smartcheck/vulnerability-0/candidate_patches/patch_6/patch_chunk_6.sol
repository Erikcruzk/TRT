function beginMigration() external override {
    _requireCallerIsBOorTroveM(address(0));
    IStabilityPool stabilityPoolCached = stabilityPool;

    // First pay out any pending rewards to the Stability Pool depositors
    stabilityPoolCached.payOutATIDRewards();

    uint256 newTotalNumberOfStakes = 0;
    uint256[] memory stakes = new uint256[](VaultOwners.length);
    address[] memory vaultsToMigrate = new address[](VaultOwners.length);
    uint256 arrayIndex = 0;

    for (uint256 i = 0; i < VaultOwners.length; i++) {
        address vaultOwner = VaultOwners[i];
        if (Vaults[vaultOwner].status == Status.active && Vaults[vaultOwner].stake > 0) {
            // Record only active vaults with non-zero stakes for migration
            vaultsToMigrate[arrayIndex] = vaultOwner;
            stakes[arrayIndex] = Vaults[vaultOwner].stake;
            newTotalNumberOfStakes = newTotalNumberOfStakes + Vaults[vaultOwner].stake;
            arrayIndex++;
        }
    }

    require(arrayIndex > 0, "Migrator: No vaults to migrate");

    // Initiate the migration in the StabilityPool
    stabilityPoolCached.beginMigration(vaultsToMigrate, stakes);

    // Adjust the total number of stakes after migration
    totalStakes = newTotalNumberOfStakes;
}