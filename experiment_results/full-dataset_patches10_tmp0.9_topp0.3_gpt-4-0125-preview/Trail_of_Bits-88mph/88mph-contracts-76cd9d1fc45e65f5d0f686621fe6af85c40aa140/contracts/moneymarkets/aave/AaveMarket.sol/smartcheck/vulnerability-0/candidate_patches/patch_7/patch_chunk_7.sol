function safeApprove(
    IERC20 token,
    address spender,
    uint256 value
) internal {
    // This is a workaround for a known ERC20 issue, where calling `approve` on a non-zero allowance
    // can be front-run and exploited. To mitigate this issue, we first set the allowance to zero,
    // and then set it to the new value.
    if ((value != 0) && (token.allowance(address(this), spender) != 0)) {
        _callOptionalReturn(
            token,
            abi.encodeWithSelector(token.approve.selector, spender, 0)
        );
    }
    _callOptionalReturn(
        token,
        abi.encodeWithSelector(token.approve.selector, spender, value)
    );
}