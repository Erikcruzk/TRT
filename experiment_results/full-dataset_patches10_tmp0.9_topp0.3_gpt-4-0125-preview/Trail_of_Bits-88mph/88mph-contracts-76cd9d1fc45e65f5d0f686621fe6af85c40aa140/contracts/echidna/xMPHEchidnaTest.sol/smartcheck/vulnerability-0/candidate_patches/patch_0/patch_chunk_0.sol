function distributeReward(uint256 rewardAmount) external virtual {
    require(totalSupply() >= MIN_AMOUNT, "xMPH: supply");
    require(rewardAmount >= MIN_AMOUNT, "xMPH: reward");
    require(
        rewardAmount < type(uint256).max / PRECISION,
        "xMPH: rewards too large, would lock"
    );
    require(hasRole(DISTRIBUTOR_ROLE, msg.sender), "xMPH: not distributor");

    
    
    mph.transferFrom(msg.sender, address(this), rewardAmount);

    if (block.timestamp >= currentUnlockEndTimestamp) {
        
        currentUnlockEndTimestamp = block.timestamp + rewardUnlockPeriod;
        lastRewardTimestamp = block.timestamp;
        lastRewardAmount = rewardAmount;
    } else {
        
        uint256 lockedRewardAmount =
            (lastRewardAmount *
                (currentUnlockEndTimestamp - block.timestamp)) /
                (currentUnlockEndTimestamp - lastRewardTimestamp);
        lastRewardTimestamp = block.timestamp;
        lastRewardAmount = rewardAmount + lockedRewardAmount;
    }
}