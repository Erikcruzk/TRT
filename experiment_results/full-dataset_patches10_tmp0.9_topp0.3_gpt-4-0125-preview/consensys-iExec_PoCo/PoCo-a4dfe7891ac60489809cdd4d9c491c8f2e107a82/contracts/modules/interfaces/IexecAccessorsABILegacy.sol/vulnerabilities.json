{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Different versions of Solidity is used in IexecAccessorsABILegacy.sol:\n\t- Version used: ['ABIEncoderV2', '^0.6.0']\n\t- IexecAccessorsABILegacy.sol#3 declares pragma solidity^0.6.0\n\t- IexecAccessorsABILegacy.sol#116-117 declares pragma solidity^0.6.0\n\t- IexecAccessorsABILegacy.sol#117-119 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Detected issues with version pragma in IexecAccessorsABILegacy.sol:\n\t- pragma solidity^0.6.0 (IexecAccessorsABILegacy.sol#3): it allows old versions\n\t- pragma solidity^0.6.0 (IexecAccessorsABILegacy.sol#116-117): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 114,
          "vulnerability_code": "library IexecLibCore_v5\n\n{\n\n\t/**\n\n\t* Tools\n\n\t*/\n\n\tstruct Account\n\n\t{\n\n\t\tuint256 stake;\n\n\t\tuint256 locked;\n\n\t}\n\n\tstruct Category\n\n\t{\n\n\t\tstring  name;\n\n\t\tstring  description;\n\n\t\tuint256 workClockTimeRef;\n\n\t}\n\n\n\n\t/**\n\n\t * Clerk - Deals\n\n\t */\n\n\tstruct Resource\n\n\t{\n\n\t\taddress pointer;\n\n\t\taddress owner;\n\n\t\tuint256 price;\n\n\t}\n\n\tstruct Deal\n\n\t{\n\n\t\t// Ressources\n\n\t\tResource app;\n\n\t\tResource dataset;\n\n\t\tResource workerpool;\n\n\t\tuint256 trust;\n\n\t\tuint256 category;\n\n\t\tbytes32 tag;\n\n\t\t// execution details\n\n\t\taddress requester;\n\n\t\taddress beneficiary;\n\n\t\taddress callback;\n\n\t\tstring  params;\n\n\t\t// execution settings\n\n\t\tuint256 startTime;\n\n\t\tuint256 botFirst;\n\n\t\tuint256 botSize;\n\n\t\t// consistency\n\n\t\tuint256 workerStake;\n\n\t\tuint256 schedulerRewardRatio;\n\n\t}\n\n\n\n\t/**\n\n\t * Tasks\n\n\t */\n\n\tenum TaskStatusEnum\n\n\t{\n\n\t\tUNSET,     // Work order not yet initialized (invalid address)\n\n\t\tACTIVE,    // Marketed \u2192 constributions are open\n\n\t\tREVEALING, // Starting consensus reveal\n\n\t\tCOMPLETED, // Concensus achieved\n\n\t\tFAILLED    // Failled consensus\n\n\t}\n\n\tstruct Task\n\n\t{\n\n\t\tTaskStatusEnum status;\n\n\t\tbytes32   dealid;\n\n\t\tuint256   idx;\n\n\t\tuint256   timeref;\n\n\t\tuint256   contributionDeadline;\n\n\t\tuint256   revealDeadline;\n\n\t\tuint256   finalDeadline;\n\n\t\tbytes32   consensusValue;\n\n\t\tuint256   revealCounter;\n\n\t\tuint256   winnerCounter;\n\n\t\taddress[] contributors;\n\n\t\tbytes32   resultDigest;\n\n\t\tbytes     results;\n\n\t\tuint256   resultsTimestamp;\n\n\t}\n\n\n\n\t/**\n\n\t * Consensus\n\n\t */\n\n\tstruct Consensus\n\n\t{\n\n\t\tmapping(bytes32 => uint256) group;\n\n\t\tuint256                     total;\n\n\t}\n\n\n\n\t/**\n\n\t * Consensus\n\n\t */\n\n\tenum ContributionStatusEnum\n\n\t{\n\n\t\tUNSET,\n\n\t\tCONTRIBUTED,\n\n\t\tPROVED,\n\n\t\tREJECTED\n\n\t}\n\n\tstruct Contribution\n\n\t{\n\n\t\tContributionStatusEnum status;\n\n\t\tbytes32 resultHash;\n\n\t\tbytes32 resultSeal;\n\n\t\taddress enclaveChallenge;\n\n\t\tuint256 weight;\n\n\t}\n\n\n\n}\n\n\n",
          "message": "Contract 'IexecLibCore_v5' (IexecAccessorsABILegacy.sol#6-114) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": 137,
          "vulnerability_code": "\tfunction viewDealABILegacy_pt1(bytes32 _id)\n\n\texternal view returns\n\n\t( address\n\n\t, address\n\n\t, uint256\n\n\t, address\n\n\t, address\n\n\t, uint256\n\n\t, address\n\n\t, address\n\n\t, uint256\n\n\t);\n\n\n",
          "message": "Function 'IexecAccessorsABILegacy.viewDealABILegacy_pt1' (IexecAccessorsABILegacy.sol#124-137) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 137,
          "vulnerability_to_line": 147,
          "vulnerability_code": "\tfunction viewDealABILegacy_pt2(bytes32 _id)\n\n\texternal view returns\n\n\t( uint256\n\n\t, bytes32\n\n\t, address\n\n\t, address\n\n\t, address\n\n\t, string memory\n\n\t);\n\n\n",
          "message": "Function 'IexecAccessorsABILegacy.viewDealABILegacy_pt2' (IexecAccessorsABILegacy.sol#137-147) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 116,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 122,
          "vulnerability_to_line": null,
          "vulnerability_code": "\texternal view returns (uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 126,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t( address\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 139,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t( uint256\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 149,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t( IexecLibCore_v5.TaskStatusEnum\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 165,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t( IexecLibCore_v5.ContributionStatusEnum\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 172,
          "vulnerability_to_line": null,
          "vulnerability_code": "\texternal view returns (string memory, string memory, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 176,
          "vulnerability_to_line": null,
          "vulnerability_code": "\t( uint256\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (IndexError: pop from empty list)"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}