{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Different versions of Solidity is used in IexecTokenSpender.sol:\n\t- Version used: ['ABIEncoderV2', '^0.6.0']\n\t- IexecTokenSpender.sol#3 declares pragma solidity^0.6.0\n\t- IexecTokenSpender.sol#4 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Detected issues with version pragma in IexecTokenSpender.sol:\n\t- pragma solidity^0.6.0 (IexecTokenSpender.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction receiveApproval(address,uint256,address,bytes calldata) external returns (bool);\n",
          "message": "Parameter '' of IexecTokenSpender.receiveApproval (IexecTokenSpender.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction receiveApproval(address,uint256,address,bytes calldata) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecTokenSpender.receiveApproval (IexecTokenSpender.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction receiveApproval(address,uint256,address,bytes calldata) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IexecTokenSpender.receiveApproval (IexecTokenSpender.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction receiveApproval(address,uint256,address,bytes calldata) external returns (bool);\n",
          "message": "Parameter '_scope_2' of IexecTokenSpender.receiveApproval (IexecTokenSpender.sol#9) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}