{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_16"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Different versions of Solidity is used in IexecERC20.sol:\n\t- Version used: ['ABIEncoderV2', '^0.6.0']\n\t- IexecERC20.sol#3 declares pragma solidity^0.6.0\n\t- IexecERC20.sol#4 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": "Detected issues with version pragma in IexecERC20.sol:\n\t- pragma solidity^0.6.0 (IexecERC20.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction transfer(address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.transfer (IexecERC20.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction transfer(address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.transfer (IexecERC20.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction approve(address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.approve (IexecERC20.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction approve(address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.approve (IexecERC20.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction transferFrom(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.transferFrom (IexecERC20.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction transferFrom(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.transferFrom (IexecERC20.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction transferFrom(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IexecERC20.transferFrom (IexecERC20.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction increaseAllowance(address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.increaseAllowance (IexecERC20.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction increaseAllowance(address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.increaseAllowance (IexecERC20.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction decreaseAllowance(address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.decreaseAllowance (IexecERC20.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction decreaseAllowance(address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.decreaseAllowance (IexecERC20.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction approveAndCall(address,uint256,bytes calldata) external returns (bool);\n",
          "message": "Parameter '' of IexecERC20.approveAndCall (IexecERC20.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction approveAndCall(address,uint256,bytes calldata) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IexecERC20.approveAndCall (IexecERC20.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction approveAndCall(address,uint256,bytes calldata) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IexecERC20.approveAndCall (IexecERC20.sol#17) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.6.0;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}