{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.9;\n",
          "message": "Detected issues with version pragma in ICurve.sol:\n\t- pragma solidity^0.5.9 (ICurve.sol#21): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 39,
          "vulnerability_code": "    function exchange_underlying(\n\n        int128 i,\n\n        int128 j,\n\n        uint256 sellAmount,\n\n        uint256 minBuyAmount\n\n    )\n",
          "message": "Function 'ICurve.exchange_underlying' (ICurve.sol#33-39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 51,
          "vulnerability_code": "    function get_dy_underlying(\n\n        int128 i,\n\n        int128 j,\n\n        uint256 sellAmount\n\n    )\n\n        external\n",
          "message": "Function 'ICurve.get_dy_underlying' (ICurve.sol#45-51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": 63,
          "vulnerability_code": "    function get_dx_underlying(\n\n        int128 i,\n\n        int128 j,\n\n        uint256 buyAmount\n\n    )\n\n        external\n",
          "message": "Function 'ICurve.get_dx_underlying' (ICurve.sol#57-63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": 71,
          "vulnerability_code": "    function underlying_coins(\n\n        int128 i\n\n    )\n\n        external\n",
          "message": "Function 'ICurve.underlying_coins' (ICurve.sol#67-71) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.9;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}