{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_15"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in ICErc20Delegator.sol:\n\t- pragma solidity>=0.6.11 (ICErc20Delegator.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _acceptAdmin() external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._acceptAdmin' (ICErc20Delegator.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _addReserves(uint256 addAmount) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._addReserves' (ICErc20Delegator.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _reduceReserves(uint256 reduceAmount) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._reduceReserves' (ICErc20Delegator.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _renounceAdminRights() external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._renounceAdminRights' (ICErc20Delegator.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _renounceFuseAdminRights() external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._renounceFuseAdminRights' (ICErc20Delegator.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _resignImplementation() external;\n",
          "message": "Function 'ICErc20Delegator._resignImplementation' (ICErc20Delegator.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setAdminFee(uint256 newAdminFeeMantissa) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setAdminFee' (ICErc20Delegator.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setComptroller(address newComptroller) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setComptroller' (ICErc20Delegator.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setFuseFee() external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setFuseFee' (ICErc20Delegator.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setInterestRateModel(address newInterestRateModel) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setInterestRateModel' (ICErc20Delegator.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setPendingAdmin(address newPendingAdmin) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setPendingAdmin' (ICErc20Delegator.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setReserveFactor(uint256 newReserveFactorMantissa) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._setReserveFactor' (ICErc20Delegator.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _withdrawAdminFees(uint256 withdrawAmount) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._withdrawAdminFees' (ICErc20Delegator.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _withdrawFuseFees(uint256 withdrawAmount) external returns(uint256);\n",
          "message": "Function 'ICErc20Delegator._withdrawFuseFees' (ICErc20Delegator.sol#20) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAccountSnapshot(address account) external view returns(uint256, uint256, uint256, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}