{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_28"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IRariComptroller.sol:\n\t- pragma solidity>=0.6.11 (IRariComptroller.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _become(address unitroller) external;\n",
          "message": "Function 'IRariComptroller._become' (IRariComptroller.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _borrowGuardianPaused() external view returns(bool);\n",
          "message": "Function 'IRariComptroller._borrowGuardianPaused' (IRariComptroller.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _mintGuardianPaused() external view returns(bool);\n",
          "message": "Function 'IRariComptroller._mintGuardianPaused' (IRariComptroller.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setBorrowPaused(address cToken, bool state) external returns(bool);\n",
          "message": "Function 'IRariComptroller._setBorrowPaused' (IRariComptroller.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setCloseFactor(uint256 newCloseFactorMantissa) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setCloseFactor' (IRariComptroller.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setCollateralFactor(address cToken, uint256 newCollateralFactorMantissa) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setCollateralFactor' (IRariComptroller.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setLiquidationIncentive(uint256 newLiquidationIncentiveMantissa) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setLiquidationIncentive' (IRariComptroller.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setMaxAssets(uint256 newMaxAssets) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setMaxAssets' (IRariComptroller.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setMintPaused(address cToken, bool state) external returns(bool);\n",
          "message": "Function 'IRariComptroller._setMintPaused' (IRariComptroller.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setPauseGuardian(address newPauseGuardian) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setPauseGuardian' (IRariComptroller.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setPriceOracle(address newOracle) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._setPriceOracle' (IRariComptroller.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setSeizePaused(bool state) external returns(bool);\n",
          "message": "Function 'IRariComptroller._setSeizePaused' (IRariComptroller.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setTransferPaused(bool state) external returns(bool);\n",
          "message": "Function 'IRariComptroller._setTransferPaused' (IRariComptroller.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _supportMarket(address cToken) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._supportMarket' (IRariComptroller.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _supportMarketAndSetCollateralFactor(address cToken, uint256 newCollateralFactorMantissa) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._supportMarketAndSetCollateralFactor' (IRariComptroller.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _unsupportMarket(address cToken) external returns(uint256);\n",
          "message": "Function 'IRariComptroller._unsupportMarket' (IRariComptroller.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function accountAssets(address, uint256) external view returns(address);\n",
          "message": "Parameter '' of IRariComptroller.accountAssets (IRariComptroller.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function accountAssets(address, uint256) external view returns(address);\n",
          "message": "Parameter '_scope_0' of IRariComptroller.accountAssets (IRariComptroller.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allBorrowers(uint256) external view returns(address);\n",
          "message": "Parameter '' of IRariComptroller.allBorrowers (IRariComptroller.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allMarkets(uint256) external view returns(address);\n",
          "message": "Parameter '' of IRariComptroller.allMarkets (IRariComptroller.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function borrowGuardianPaused(address) external view returns(bool);\n",
          "message": "Parameter '' of IRariComptroller.borrowGuardianPaused (IRariComptroller.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function cTokensByUnderlying(address) external view returns(address);\n",
          "message": "Parameter '' of IRariComptroller.cTokensByUnderlying (IRariComptroller.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markets(address) external view returns(bool isListed, uint256 collateralFactorMantissa);\n",
          "message": "Parameter '' of IRariComptroller.markets (IRariComptroller.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintGuardianPaused(address) external view returns(bool);\n",
          "message": "Parameter '' of IRariComptroller.mintGuardianPaused (IRariComptroller.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function suppliers(address) external view returns(bool);\n",
          "message": "Parameter '' of IRariComptroller.suppliers (IRariComptroller.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function whitelist(address) external view returns(bool);\n",
          "message": "Parameter '' of IRariComptroller.whitelist (IRariComptroller.sol#73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function whitelistArray(uint256) external view returns(address);\n",
          "message": "Parameter '' of IRariComptroller.whitelistArray (IRariComptroller.sol#74) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getAccountLiquidity(address account) external view returns(uint256, uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getHypotheticalAccountLiquidity(address account, address cTokenModify, uint256 redeemTokens, uint256 borrowAmount) external view returns(uint256, uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMaxBorrow(address account, address cTokenModify) external returns(uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMaxRedeem(address account, address cTokenModify) external returns(uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function liquidateCalculateSeizeTokens(address cTokenBorrowed, address cTokenCollateral, uint256 actualRepayAmount) external view returns(uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markets(address) external view returns(bool isListed, uint256 collateralFactorMantissa);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}