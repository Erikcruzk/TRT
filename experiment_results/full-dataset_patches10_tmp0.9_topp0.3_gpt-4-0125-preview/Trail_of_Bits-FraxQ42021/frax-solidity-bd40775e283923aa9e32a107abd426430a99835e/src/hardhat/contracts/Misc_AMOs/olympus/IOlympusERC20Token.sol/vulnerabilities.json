{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allowance(address owner, address spender) external view returns (uint256);\n",
          "message": "IOlympusERC20Token.allowance.owner (local variable @ IOlympusERC20Token.sol#12) shadows:\n\t- IOlympusERC20Token.owner (function @ IOlympusERC20Token.sol#25)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function nonces(address owner) external view returns (uint256);\n",
          "message": "IOlympusERC20Token.nonces.owner (local variable @ IOlympusERC20Token.sol#24) shadows:\n\t- IOlympusERC20Token.owner (function @ IOlympusERC20Token.sol#25)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n",
          "message": "IOlympusERC20Token.permit.owner (local variable @ IOlympusERC20Token.sol#26) shadows:\n\t- IOlympusERC20Token.owner (function @ IOlympusERC20Token.sol#25)\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IOlympusERC20Token.sol:\n\t- pragma solidity>=0.6.11 (IOlympusERC20Token.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function DOMAIN_SEPARATOR() external view returns (bytes32);\n",
          "message": "Function 'IOlympusERC20Token.DOMAIN_SEPARATOR' (IOlympusERC20Token.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function PERMIT_TYPEHASH() external view returns (bytes32);\n",
          "message": "Function 'IOlympusERC20Token.PERMIT_TYPEHASH' (IOlympusERC20Token.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _burnFrom(address account_, uint256 amount_) external;\n",
          "message": "Function 'IOlympusERC20Token._burnFrom' (IOlympusERC20Token.sol#10) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}