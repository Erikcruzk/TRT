{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_21"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-builtin",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowState(address) external view returns (uint224 index, uint32 block);\n",
          "message": "IComptroller.compBorrowState.block (local variable @ IComptroller.sol#26) shadows built-in symbol \"block\"\n"
        },
        {
          "name": "shadowing-builtin",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplyState(address) external view returns (uint224 index, uint32 block);\n",
          "message": "IComptroller.compSupplyState.block (local variable @ IComptroller.sol#32) shadows built-in symbol \"block\"\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IComptroller.sol:\n\t- pragma solidity>=0.6.11 (IComptroller.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function SingleAssetDynamicRainMakerContractHash() external view returns (bytes32);\n",
          "message": "Function 'IComptroller.SingleAssetDynamicRainMakerContractHash' (IComptroller.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _acceptAdmin() external returns (uint256);\n",
          "message": "Function 'IComptroller._acceptAdmin' (IComptroller.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setDynamicCompSpeed(address cToken, uint256 compSupplySpeed, uint256 compBorrowSpeed) external;\n",
          "message": "Function 'IComptroller._setDynamicCompSpeed' (IComptroller.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setDynamicCompSpeeds(address[] memory _cTokens, uint256[] memory _compSupplySpeeds, uint256[] memory _compBorrowSpeeds) external;\n",
          "message": "Function 'IComptroller._setDynamicCompSpeeds' (IComptroller.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setLnIncentiveToken(address incentiveTokenAddress) external;\n",
          "message": "Function 'IComptroller._setLnIncentiveToken' (IComptroller.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _setPendingAdmin(address newPendingAdmin) external returns (uint256);\n",
          "message": "Function 'IComptroller._setPendingAdmin' (IComptroller.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function _supportMarket(address cToken) external;\n",
          "message": "Function 'IComptroller._supportMarket' (IComptroller.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function allMarkets(uint256) external view returns (address);\n",
          "message": "Parameter '' of IComptroller.allMarkets (IComptroller.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compAccrued(address) external view returns (uint256);\n",
          "message": "Parameter '' of IComptroller.compAccrued (IComptroller.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowSpeeds(address) external view returns (uint256);\n",
          "message": "Parameter '' of IComptroller.compBorrowSpeeds (IComptroller.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowState(address) external view returns (uint224 index, uint32 block);\n",
          "message": "Parameter '' of IComptroller.compBorrowState (IComptroller.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowerIndex(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IComptroller.compBorrowerIndex (IComptroller.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowerIndex(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IComptroller.compBorrowerIndex (IComptroller.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplierIndex(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IComptroller.compSupplierIndex (IComptroller.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplierIndex(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IComptroller.compSupplierIndex (IComptroller.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplySpeeds(address) external view returns (uint256);\n",
          "message": "Parameter '' of IComptroller.compSupplySpeeds (IComptroller.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplyState(address) external view returns (uint224 index, uint32 block);\n",
          "message": "Parameter '' of IComptroller.compSupplyState (IComptroller.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isListed(address) external view returns (bool);\n",
          "message": "Parameter '' of IComptroller.isListed (IComptroller.sol#40) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compBorrowState(address) external view returns (uint224 index, uint32 block);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function compSupplyState(address) external view returns (uint224 index, uint32 block);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}