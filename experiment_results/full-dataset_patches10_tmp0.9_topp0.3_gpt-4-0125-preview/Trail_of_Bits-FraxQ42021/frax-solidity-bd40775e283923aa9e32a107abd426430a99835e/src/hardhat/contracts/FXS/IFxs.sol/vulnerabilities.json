{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_22"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IFxs.sol:\n\t- pragma solidity>=0.6.11 (IFxs.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function DEFAULT_ADMIN_ROLE() external view returns(bytes32);\n",
          "message": "Function 'IFxs.DEFAULT_ADMIN_ROLE' (IFxs.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FRAXStablecoinAdd() external view returns(address);\n",
          "message": "Function 'IFxs.FRAXStablecoinAdd' (IFxs.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FXS_DAO_min() external view returns(uint256);\n",
          "message": "Function 'IFxs.FXS_DAO_min' (IFxs.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function checkpoints(address, uint32) external view returns(uint32 fromBlock, uint96 votes);\n",
          "message": "Parameter '' of IFxs.checkpoints (IFxs.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function checkpoints(address, uint32) external view returns(uint32 fromBlock, uint96 votes);\n",
          "message": "Parameter '_scope_0' of IFxs.checkpoints (IFxs.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function genesis_supply() external view returns(uint256);\n",
          "message": "Function 'IFxs.genesis_supply' (IFxs.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function numCheckpoints(address) external view returns(uint32);\n",
          "message": "Parameter '' of IFxs.numCheckpoints (IFxs.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function oracle_address() external view returns(address);\n",
          "message": "Function 'IFxs.oracle_address' (IFxs.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function owner_address() external view returns(address);\n",
          "message": "Function 'IFxs.owner_address' (IFxs.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount) external;\n",
          "message": "Function 'IFxs.pool_burn_from' (IFxs.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount) external;\n",
          "message": "Parameter 'b_address' of IFxs.pool_burn_from (IFxs.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount) external;\n",
          "message": "Parameter 'b_amount' of IFxs.pool_burn_from (IFxs.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount) external;\n",
          "message": "Function 'IFxs.pool_mint' (IFxs.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount) external;\n",
          "message": "Parameter 'm_address' of IFxs.pool_mint (IFxs.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount) external;\n",
          "message": "Parameter 'm_amount' of IFxs.pool_mint (IFxs.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFRAXAddress(address frax_contract_address) external;\n",
          "message": "Parameter 'frax_contract_address' of IFxs.setFRAXAddress (IFxs.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFXSMinDAO(uint256 min_FXS) external;\n",
          "message": "Parameter 'min_FXS' of IFxs.setFXSMinDAO (IFxs.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setOracle(address new_oracle) external;\n",
          "message": "Parameter 'new_oracle' of IFxs.setOracle (IFxs.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setOwner(address _owner_address) external;\n",
          "message": "Parameter '_owner_address' of IFxs.setOwner (IFxs.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setTimelock(address new_timelock) external;\n",
          "message": "Parameter 'new_timelock' of IFxs.setTimelock (IFxs.sol#40) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function timelock_address() external view returns(address);\n",
          "message": "Function 'IFxs.timelock_address' (IFxs.sol#42) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function checkpoints(address, uint32) external view returns(uint32 fromBlock, uint96 votes);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}