{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_38"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in ILiquidityGaugeV2.sol:\n\t- pragma solidity>=0.6.11 (ILiquidityGaugeV2.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function crv_token() external view returns (address);\n",
          "message": "Function 'ILiquidityGaugeV2.crv_token' (ILiquidityGaugeV2.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function lp_token() external view returns (address);\n",
          "message": "Function 'ILiquidityGaugeV2.lp_token' (ILiquidityGaugeV2.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function voting_escrow() external view returns (address);\n",
          "message": "Function 'ILiquidityGaugeV2.voting_escrow' (ILiquidityGaugeV2.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.balanceOf (ILiquidityGaugeV2.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function future_epoch_time() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.future_epoch_time' (ILiquidityGaugeV2.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Function 'ILiquidityGaugeV2.approved_to_deposit' (ILiquidityGaugeV2.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.approved_to_deposit (ILiquidityGaugeV2.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function approved_to_deposit(address, address) external view returns (bool);\n",
          "message": "Parameter '_scope_0' of ILiquidityGaugeV2.approved_to_deposit (ILiquidityGaugeV2.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_balances(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.working_balances' (ILiquidityGaugeV2.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_balances(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.working_balances (ILiquidityGaugeV2.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function working_supply() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.working_supply' (ILiquidityGaugeV2.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function period_timestamp(uint256) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.period_timestamp' (ILiquidityGaugeV2.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function period_timestamp(uint256) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.period_timestamp (ILiquidityGaugeV2.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply(uint256) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.integrate_inv_supply' (ILiquidityGaugeV2.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply(uint256) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.integrate_inv_supply (ILiquidityGaugeV2.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply_of(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.integrate_inv_supply_of' (ILiquidityGaugeV2.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_inv_supply_of(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.integrate_inv_supply_of (ILiquidityGaugeV2.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint_of(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.integrate_checkpoint_of' (ILiquidityGaugeV2.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint_of(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.integrate_checkpoint_of (ILiquidityGaugeV2.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_fraction(address) external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.integrate_fraction' (ILiquidityGaugeV2.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_fraction(address) external view returns (uint256);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.integrate_fraction (ILiquidityGaugeV2.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function inflation_rate() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.inflation_rate' (ILiquidityGaugeV2.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function integrate_checkpoint() external view returns (uint256);\n",
          "message": "Function 'ILiquidityGaugeV2.integrate_checkpoint' (ILiquidityGaugeV2.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function user_checkpoint(address) external returns (bool);\n",
          "message": "Function 'ILiquidityGaugeV2.user_checkpoint' (ILiquidityGaugeV2.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function user_checkpoint(address) external returns (bool);\n",
          "message": "Parameter '' of ILiquidityGaugeV2.user_checkpoint (ILiquidityGaugeV2.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claim_rewards(address) external;\n",
          "message": "Function 'ILiquidityGaugeV2.claim_rewards' (ILiquidityGaugeV2.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claim_rewards(address) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.claim_rewards (ILiquidityGaugeV2.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claimable_tokens(address) external view returns (uint256); // function can be manually changed to \"view\" in the ABI\n",
          "message": "Function 'ILiquidityGaugeV2.claimable_tokens' (ILiquidityGaugeV2.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function claimable_tokens(address) external view returns (uint256); // function can be manually changed to \"view\" in the ABI\n",
          "message": "Parameter '' of ILiquidityGaugeV2.claimable_tokens (ILiquidityGaugeV2.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function kick(address) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.kick (ILiquidityGaugeV2.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Function 'ILiquidityGaugeV2.set_approve_deposit' (ILiquidityGaugeV2.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.set_approve_deposit (ILiquidityGaugeV2.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function set_approve_deposit(address, bool) external;\n",
          "message": "Parameter '_scope_0' of ILiquidityGaugeV2.set_approve_deposit (ILiquidityGaugeV2.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "\tfunction deposit(uint256) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.deposit (ILiquidityGaugeV2.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function deposit(uint256, address) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.deposit (ILiquidityGaugeV2.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function deposit(uint256, address) external;\n",
          "message": "Parameter '_scope_0' of ILiquidityGaugeV2.deposit (ILiquidityGaugeV2.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint256) external;\n",
          "message": "Parameter '' of ILiquidityGaugeV2.withdraw (ILiquidityGaugeV2.sol#40) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}