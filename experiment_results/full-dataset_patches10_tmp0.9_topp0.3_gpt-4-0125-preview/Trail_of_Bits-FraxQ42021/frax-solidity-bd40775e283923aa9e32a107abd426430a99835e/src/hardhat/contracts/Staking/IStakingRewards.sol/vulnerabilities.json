{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_19"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Different versions of Solidity is used in IStakingRewards.sol:\n\t- Version used: ['>=0.6.11', 'ABIEncoderV2']\n\t- IStakingRewards.sol#4 declares pragma solidity>=0.6.11\n\t- IStakingRewards.sol#5 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IStakingRewards.sol:\n\t- pragma solidity>=0.6.11 (IStakingRewards.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function cr_boost_max_multiplier() external view returns (uint256);\n",
          "message": "Function 'IStakingRewards.cr_boost_max_multiplier' (IStakingRewards.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function greylist(address) external view returns (bool);\n",
          "message": "Parameter '' of IStakingRewards.greylist (IStakingRewards.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function locked_stake_max_multiplier() external view returns (uint256);\n",
          "message": "Function 'IStakingRewards.locked_stake_max_multiplier' (IStakingRewards.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function locked_stake_min_time() external view returns (uint256);\n",
          "message": "Function 'IStakingRewards.locked_stake_min_time' (IStakingRewards.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function locked_stake_time_for_max_multiplier() external view returns (uint256);\n",
          "message": "Function 'IStakingRewards.locked_stake_time_for_max_multiplier' (IStakingRewards.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function owner_address() external view returns (address);\n",
          "message": "Function 'IStakingRewards.owner_address' (IStakingRewards.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function rewards(address) external view returns (uint256);\n",
          "message": "Parameter '' of IStakingRewards.rewards (IStakingRewards.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setLockedStakeTimeForMinAndMaxMultiplier(uint256 _locked_stake_time_for_max_multiplier, uint256 _locked_stake_min_time) external;\n",
          "message": "Parameter '_locked_stake_time_for_max_multiplier' of IStakingRewards.setLockedStakeTimeForMinAndMaxMultiplier (IStakingRewards.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setLockedStakeTimeForMinAndMaxMultiplier(uint256 _locked_stake_time_for_max_multiplier, uint256 _locked_stake_min_time) external;\n",
          "message": "Parameter '_locked_stake_min_time' of IStakingRewards.setLockedStakeTimeForMinAndMaxMultiplier (IStakingRewards.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMultipliers(uint256 _locked_stake_max_multiplier, uint256 _cr_boost_max_multiplier) external;\n",
          "message": "Parameter '_locked_stake_max_multiplier' of IStakingRewards.setMultipliers (IStakingRewards.sol#51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMultipliers(uint256 _locked_stake_max_multiplier, uint256 _cr_boost_max_multiplier) external;\n",
          "message": "Parameter '_cr_boost_max_multiplier' of IStakingRewards.setMultipliers (IStakingRewards.sol#51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setOwnerAndTimelock(address _new_owner, address _new_timelock) external;\n",
          "message": "Parameter '_new_owner' of IStakingRewards.setOwnerAndTimelock (IStakingRewards.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setOwnerAndTimelock(address _new_owner, address _new_timelock) external;\n",
          "message": "Parameter '_new_timelock' of IStakingRewards.setOwnerAndTimelock (IStakingRewards.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setRewardRate(uint256 _new_rate) external;\n",
          "message": "Parameter '_new_rate' of IStakingRewards.setRewardRate (IStakingRewards.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function timelock_address() external view returns (address);\n",
          "message": "Function 'IStakingRewards.timelock_address' (IStakingRewards.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 68,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function userRewardPerTokenPaid(address) external view returns (uint256);\n",
          "message": "Parameter '' of IStakingRewards.userRewardPerTokenPaid (IStakingRewards.sol#68) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawLocked(bytes32 kek_id) external;\n",
          "message": "Parameter 'kek_id' of IStakingRewards.withdrawLocked (IStakingRewards.sol#70) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}