{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_12"
      ],
      "vulnerability_findings": [
        {
          "name": "pragma",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Different versions of Solidity is used in IveFXSYieldDistributor.sol:\n\t- Version used: ['>=0.6.11', 'ABIEncoderV2']\n\t- IveFXSYieldDistributor.sol#4 declares pragma solidity>=0.6.11\n\t- IveFXSYieldDistributor.sol#5 declares pragma experimentalABIEncoderV2\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IveFXSYieldDistributor.sol:\n\t- pragma solidity>=0.6.11 (IveFXSYieldDistributor.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function emitted_token_address() external view returns (address);\n",
          "message": "Function 'IveFXSYieldDistributor.emitted_token_address' (IveFXSYieldDistributor.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function greylist(address) external view returns (bool);\n",
          "message": "Parameter '' of IveFXSYieldDistributor.greylist (IveFXSYieldDistributor.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTimelock(address _new_timelock) external;\n",
          "message": "Parameter '_new_timelock' of IveFXSYieldDistributor.setTimelock (IveFXSYieldDistributor.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setYieldRate(uint256 _new_rate0, bool sync_too) external;\n",
          "message": "Parameter '_new_rate0' of IveFXSYieldDistributor.setYieldRate (IveFXSYieldDistributor.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setYieldRate(uint256 _new_rate0, bool sync_too) external;\n",
          "message": "Parameter 'sync_too' of IveFXSYieldDistributor.setYieldRate (IveFXSYieldDistributor.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function timelock_address() external view returns (address);\n",
          "message": "Function 'IveFXSYieldDistributor.timelock_address' (IveFXSYieldDistributor.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function userIsInitialized(address) external view returns (bool);\n",
          "message": "Parameter '' of IveFXSYieldDistributor.userIsInitialized (IveFXSYieldDistributor.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function userVeFXSCheckpointed(address) external view returns (uint256);\n",
          "message": "Parameter '' of IveFXSYieldDistributor.userVeFXSCheckpointed (IveFXSYieldDistributor.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function userYieldPerTokenPaid(address) external view returns (uint256);\n",
          "message": "Parameter '' of IveFXSYieldDistributor.userYieldPerTokenPaid (IveFXSYieldDistributor.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function yields(address) external view returns (uint256);\n",
          "message": "Parameter '' of IveFXSYieldDistributor.yields (IveFXSYieldDistributor.sol#43) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}