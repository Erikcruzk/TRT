{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_35"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IFraxPool.sol:\n\t- pragma solidity>=0.6.11 (IFraxPool.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function minting_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPool.minting_fee' (IFraxPool.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redemption_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPool.redemption_fee' (IFraxPool.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function buyback_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPool.buyback_fee' (IFraxPool.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function recollat_fee() external returns (uint256);\n",
          "message": "Function 'IFraxPool.recollat_fee' (IFraxPool.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setCollatETHOracle(address _collateral_weth_oracle_address, address _weth_address) external;\n",
          "message": "Parameter '_collateral_weth_oracle_address' of IFraxPool.setCollatETHOracle (IFraxPool.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setCollatETHOracle(address _collateral_weth_oracle_address, address _weth_address) external;\n",
          "message": "Parameter '_weth_address' of IFraxPool.setCollatETHOracle (IFraxPool.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mint1t1FRAX(uint256 collateral_amount, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'collateral_amount' of IFraxPool.mint1t1FRAX (IFraxPool.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mint1t1FRAX(uint256 collateral_amount, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'FRAX_out_min' of IFraxPool.mint1t1FRAX (IFraxPool.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintAlgorithmicFRAX(uint256 fxs_amount_d18, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'fxs_amount_d18' of IFraxPool.mintAlgorithmicFRAX (IFraxPool.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintAlgorithmicFRAX(uint256 fxs_amount_d18, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'FRAX_out_min' of IFraxPool.mintAlgorithmicFRAX (IFraxPool.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintFractionalFRAX(uint256 collateral_amount, uint256 fxs_amount, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'collateral_amount' of IFraxPool.mintFractionalFRAX (IFraxPool.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintFractionalFRAX(uint256 collateral_amount, uint256 fxs_amount, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'fxs_amount' of IFraxPool.mintFractionalFRAX (IFraxPool.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintFractionalFRAX(uint256 collateral_amount, uint256 fxs_amount, uint256 FRAX_out_min) external;\n",
          "message": "Parameter 'FRAX_out_min' of IFraxPool.mintFractionalFRAX (IFraxPool.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeem1t1FRAX(uint256 FRAX_amount, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'FRAX_amount' of IFraxPool.redeem1t1FRAX (IFraxPool.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeem1t1FRAX(uint256 FRAX_amount, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'COLLATERAL_out_min' of IFraxPool.redeem1t1FRAX (IFraxPool.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemFractionalFRAX(uint256 FRAX_amount, uint256 FXS_out_min, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'FRAX_amount' of IFraxPool.redeemFractionalFRAX (IFraxPool.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemFractionalFRAX(uint256 FRAX_amount, uint256 FXS_out_min, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'FXS_out_min' of IFraxPool.redeemFractionalFRAX (IFraxPool.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemFractionalFRAX(uint256 FRAX_amount, uint256 FXS_out_min, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'COLLATERAL_out_min' of IFraxPool.redeemFractionalFRAX (IFraxPool.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemAlgorithmicFRAX(uint256 FRAX_amount, uint256 FXS_out_min) external;\n",
          "message": "Parameter 'FRAX_amount' of IFraxPool.redeemAlgorithmicFRAX (IFraxPool.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemAlgorithmicFRAX(uint256 FRAX_amount, uint256 FXS_out_min) external;\n",
          "message": "Parameter 'FXS_out_min' of IFraxPool.redeemAlgorithmicFRAX (IFraxPool.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function recollateralizeFRAX(uint256 collateral_amount, uint256 FXS_out_min) external;\n",
          "message": "Parameter 'collateral_amount' of IFraxPool.recollateralizeFRAX (IFraxPool.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function recollateralizeFRAX(uint256 collateral_amount, uint256 FXS_out_min) external;\n",
          "message": "Parameter 'FXS_out_min' of IFraxPool.recollateralizeFRAX (IFraxPool.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function buyBackFXS(uint256 FXS_amount, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'FXS_amount' of IFraxPool.buyBackFXS (IFraxPool.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function buyBackFXS(uint256 FXS_amount, uint256 COLLATERAL_out_min) external;\n",
          "message": "Parameter 'COLLATERAL_out_min' of IFraxPool.buyBackFXS (IFraxPool.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function toggleCollateralPrice(uint256 _new_price) external;\n",
          "message": "Parameter '_new_price' of IFraxPool.toggleCollateralPrice (IFraxPool.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_ceiling' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_bonus_rate' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_redemption_delay' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_mint_fee' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_redeem_fee' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_buyback_fee' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setPoolParameters(uint256 new_ceiling, uint256 new_bonus_rate, uint256 new_redemption_delay, uint256 new_mint_fee, uint256 new_redeem_fee, uint256 new_buyback_fee, uint256 new_recollat_fee) external;\n",
          "message": "Parameter 'new_recollat_fee' of IFraxPool.setPoolParameters (IFraxPool.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setTimelock(address new_timelock) external;\n",
          "message": "Parameter 'new_timelock' of IFraxPool.setTimelock (IFraxPool.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setOwner(address _owner_address) external;\n",
          "message": "Parameter '_owner_address' of IFraxPool.setOwner (IFraxPool.sol#32) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}