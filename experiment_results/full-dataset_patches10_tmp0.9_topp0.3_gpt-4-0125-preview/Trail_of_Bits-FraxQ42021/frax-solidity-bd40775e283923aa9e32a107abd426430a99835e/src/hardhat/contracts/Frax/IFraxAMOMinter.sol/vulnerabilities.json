{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_55"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IFraxAMOMinter.sol:\n\t- pragma solidity>=0.6.11 (IFraxAMOMinter.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FRAX() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.FRAX' (IFraxAMOMinter.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FXS() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.FXS' (IFraxAMOMinter.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinter.addAMO (IFraxAMOMinter.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'sync_too' of IFraxAMOMinter.addAMO (IFraxAMOMinter.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos(address) external view returns(bool);\n",
          "message": "Parameter '' of IFraxAMOMinter.amos (IFraxAMOMinter.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos_array(uint256) external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.amos_array' (IFraxAMOMinter.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos_array(uint256) external view returns(address);\n",
          "message": "Parameter '' of IFraxAMOMinter.amos_array (IFraxAMOMinter.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function burnFraxFromAMO(uint256 frax_amount) external;\n",
          "message": "Parameter 'frax_amount' of IFraxAMOMinter.burnFraxFromAMO (IFraxAMOMinter.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function burnFxsFromAMO(uint256 fxs_amount) external;\n",
          "message": "Parameter 'fxs_amount' of IFraxAMOMinter.burnFxsFromAMO (IFraxAMOMinter.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function col_idx() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinter.col_idx' (IFraxAMOMinter.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrow_cap() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.collat_borrow_cap' (IFraxAMOMinter.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_balances(address) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.collat_borrowed_balances' (IFraxAMOMinter.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_balances(address) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinter.collat_borrowed_balances (IFraxAMOMinter.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_sum() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.collat_borrowed_sum' (IFraxAMOMinter.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collateral_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.collateral_address' (IFraxAMOMinter.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collateral_token() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.collateral_token' (IFraxAMOMinter.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function correction_offsets_amos(address, uint256) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.correction_offsets_amos' (IFraxAMOMinter.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function correction_offsets_amos(address, uint256) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinter.correction_offsets_amos (IFraxAMOMinter.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function correction_offsets_amos(address, uint256) external view returns(int256);\n",
          "message": "Parameter '_scope_0' of IFraxAMOMinter.correction_offsets_amos (IFraxAMOMinter.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function custodian_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.custodian_address' (IFraxAMOMinter.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fraxTrackedAMO(address amo_address) external view returns(int256);\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinter.fraxTrackedAMO (IFraxAMOMinter.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_mint_balances(address) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.frax_mint_balances' (IFraxAMOMinter.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_mint_balances(address) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinter.frax_mint_balances (IFraxAMOMinter.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_mint_cap() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.frax_mint_cap' (IFraxAMOMinter.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_mint_sum() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.frax_mint_sum' (IFraxAMOMinter.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_mint_balances(address) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.fxs_mint_balances' (IFraxAMOMinter.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_mint_balances(address) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinter.fxs_mint_balances (IFraxAMOMinter.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_mint_cap() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.fxs_mint_cap' (IFraxAMOMinter.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_mint_sum() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinter.fxs_mint_sum' (IFraxAMOMinter.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function giveCollatToAMO(address destination_amo, uint256 collat_amount) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinter.giveCollatToAMO (IFraxAMOMinter.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function giveCollatToAMO(address destination_amo, uint256 collat_amount) external;\n",
          "message": "Parameter 'collat_amount' of IFraxAMOMinter.giveCollatToAMO (IFraxAMOMinter.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function min_cr() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinter.min_cr' (IFraxAMOMinter.sol#40) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFraxForAMO(address destination_amo, uint256 frax_amount) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinter.mintFraxForAMO (IFraxAMOMinter.sol#41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFraxForAMO(address destination_amo, uint256 frax_amount) external;\n",
          "message": "Parameter 'frax_amount' of IFraxAMOMinter.mintFraxForAMO (IFraxAMOMinter.sol#41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFxsForAMO(address destination_amo, uint256 fxs_amount) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinter.mintFxsForAMO (IFraxAMOMinter.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFxsForAMO(address destination_amo, uint256 fxs_amount) external;\n",
          "message": "Parameter 'fxs_amount' of IFraxAMOMinter.mintFxsForAMO (IFraxAMOMinter.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function missing_decimals() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinter.missing_decimals' (IFraxAMOMinter.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function oldPoolCollectAndGive(address destination_amo) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinter.oldPoolCollectAndGive (IFraxAMOMinter.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function oldPoolRedeem(uint256 frax_amount) external;\n",
          "message": "Parameter 'frax_amount' of IFraxAMOMinter.oldPoolRedeem (IFraxAMOMinter.sol#47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function old_pool() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.old_pool' (IFraxAMOMinter.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function receiveCollatFromAMO(uint256 usdc_amount) external;\n",
          "message": "Parameter 'usdc_amount' of IFraxAMOMinter.receiveCollatFromAMO (IFraxAMOMinter.sol#51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinter.removeAMO (IFraxAMOMinter.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'sync_too' of IFraxAMOMinter.removeAMO (IFraxAMOMinter.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setAMOCorrectionOffsets(address amo_address, int256 frax_e18_correction, int256 collat_e18_correction) external;\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinter.setAMOCorrectionOffsets (IFraxAMOMinter.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setAMOCorrectionOffsets(address amo_address, int256 frax_e18_correction, int256 collat_e18_correction) external;\n",
          "message": "Parameter 'frax_e18_correction' of IFraxAMOMinter.setAMOCorrectionOffsets (IFraxAMOMinter.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setAMOCorrectionOffsets(address amo_address, int256 frax_e18_correction, int256 collat_e18_correction) external;\n",
          "message": "Parameter 'collat_e18_correction' of IFraxAMOMinter.setAMOCorrectionOffsets (IFraxAMOMinter.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setCollatBorrowCap(uint256 _collat_borrow_cap) external;\n",
          "message": "Parameter '_collat_borrow_cap' of IFraxAMOMinter.setCollatBorrowCap (IFraxAMOMinter.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setCustodian(address _custodian_address) external;\n",
          "message": "Parameter '_custodian_address' of IFraxAMOMinter.setCustodian (IFraxAMOMinter.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFraxMintCap(uint256 _frax_mint_cap) external;\n",
          "message": "Parameter '_frax_mint_cap' of IFraxAMOMinter.setFraxMintCap (IFraxAMOMinter.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFraxPool(address _pool_address) external;\n",
          "message": "Parameter '_pool_address' of IFraxAMOMinter.setFraxPool (IFraxAMOMinter.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFxsMintCap(uint256 _fxs_mint_cap) external;\n",
          "message": "Parameter '_fxs_mint_cap' of IFraxAMOMinter.setFxsMintCap (IFraxAMOMinter.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setMinimumCollateralRatio(uint256 _min_cr) external;\n",
          "message": "Parameter '_min_cr' of IFraxAMOMinter.setMinimumCollateralRatio (IFraxAMOMinter.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setTimelock(address new_timelock) external;\n",
          "message": "Parameter 'new_timelock' of IFraxAMOMinter.setTimelock (IFraxAMOMinter.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function timelock_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinter.timelock_address' (IFraxAMOMinter.sol#63) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function dollarBalances() external view returns(uint256 frax_val_e18, uint256 collat_val_e18);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}