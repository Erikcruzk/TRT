{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_40"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IFraxAMOMinterOld.sol:\n\t- pragma solidity>=0.6.11 (IFraxAMOMinterOld.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FRAX() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.FRAX' (IFraxAMOMinterOld.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function FXS() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.FXS' (IFraxAMOMinterOld.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinterOld.addAMO (IFraxAMOMinterOld.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'sync_too' of IFraxAMOMinterOld.addAMO (IFraxAMOMinterOld.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amoProfit(address amo_address) external view returns(int256);\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinterOld.amoProfit (IFraxAMOMinterOld.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos(address) external view returns(bool);\n",
          "message": "Parameter '' of IFraxAMOMinterOld.amos (IFraxAMOMinterOld.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos_array(uint256) external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.amos_array' (IFraxAMOMinterOld.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function amos_array(uint256) external view returns(address);\n",
          "message": "Parameter '' of IFraxAMOMinterOld.amos_array (IFraxAMOMinterOld.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function burnFraxFromAMO(uint256 frax_amount) external;\n",
          "message": "Parameter 'frax_amount' of IFraxAMOMinterOld.burnFraxFromAMO (IFraxAMOMinterOld.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function burnFxsFromAMO(uint256 fxs_amount) external;\n",
          "message": "Parameter 'fxs_amount' of IFraxAMOMinterOld.burnFxsFromAMO (IFraxAMOMinterOld.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function col_idx() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinterOld.col_idx' (IFraxAMOMinterOld.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrow_cap() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.collat_borrow_cap' (IFraxAMOMinterOld.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_balances(address) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.collat_borrowed_balances' (IFraxAMOMinterOld.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_balances(address) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinterOld.collat_borrowed_balances (IFraxAMOMinterOld.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collat_borrowed_sum() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.collat_borrowed_sum' (IFraxAMOMinterOld.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collateral_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.collateral_address' (IFraxAMOMinterOld.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collateral_token() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.collateral_token' (IFraxAMOMinterOld.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function custodian_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.custodian_address' (IFraxAMOMinterOld.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function giveCollatToAMO(address destination_amo, uint256 collat_amount) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinterOld.giveCollatToAMO (IFraxAMOMinterOld.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function giveCollatToAMO(address destination_amo, uint256 collat_amount) external;\n",
          "message": "Parameter 'collat_amount' of IFraxAMOMinterOld.giveCollatToAMO (IFraxAMOMinterOld.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function min_cr() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinterOld.min_cr' (IFraxAMOMinterOld.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFraxForAMO(address destination_amo, uint256 frax_amount) external;\n",
          "message": "Parameter 'destination_amo' of IFraxAMOMinterOld.mintFraxForAMO (IFraxAMOMinterOld.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mintFraxForAMO(address destination_amo, uint256 frax_amount) external;\n",
          "message": "Parameter 'frax_amount' of IFraxAMOMinterOld.mintFraxForAMO (IFraxAMOMinterOld.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mint_balances(address) external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.mint_balances' (IFraxAMOMinterOld.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mint_balances(address) external view returns(int256);\n",
          "message": "Parameter '' of IFraxAMOMinterOld.mint_balances (IFraxAMOMinterOld.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mint_cap() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.mint_cap' (IFraxAMOMinterOld.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function mint_sum() external view returns(int256);\n",
          "message": "Function 'IFraxAMOMinterOld.mint_sum' (IFraxAMOMinterOld.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function missing_decimals() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinterOld.missing_decimals' (IFraxAMOMinterOld.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function override_collat_balance() external view returns(bool);\n",
          "message": "Function 'IFraxAMOMinterOld.override_collat_balance' (IFraxAMOMinterOld.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function override_collat_balance_amount() external view returns(uint256);\n",
          "message": "Function 'IFraxAMOMinterOld.override_collat_balance_amount' (IFraxAMOMinterOld.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function receiveCollatFromAMO(uint256 usdc_amount) external;\n",
          "message": "Parameter 'usdc_amount' of IFraxAMOMinterOld.receiveCollatFromAMO (IFraxAMOMinterOld.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'amo_address' of IFraxAMOMinterOld.removeAMO (IFraxAMOMinterOld.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeAMO(address amo_address, bool sync_too) external;\n",
          "message": "Parameter 'sync_too' of IFraxAMOMinterOld.removeAMO (IFraxAMOMinterOld.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setCustodian(address _custodian_address) external;\n",
          "message": "Parameter '_custodian_address' of IFraxAMOMinterOld.setCustodian (IFraxAMOMinterOld.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFraxPool(address _pool_address) external;\n",
          "message": "Parameter '_pool_address' of IFraxAMOMinterOld.setFraxPool (IFraxAMOMinterOld.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setMinimumCollateralRatio(uint256 _min_cr) external;\n",
          "message": "Parameter '_min_cr' of IFraxAMOMinterOld.setMinimumCollateralRatio (IFraxAMOMinterOld.sol#47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setMintCap(uint256 _mint_cap) external;\n",
          "message": "Parameter '_mint_cap' of IFraxAMOMinterOld.setMintCap (IFraxAMOMinterOld.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setTimelock(address new_timelock) external;\n",
          "message": "Parameter 'new_timelock' of IFraxAMOMinterOld.setTimelock (IFraxAMOMinterOld.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function timelock_address() external view returns(address);\n",
          "message": "Function 'IFraxAMOMinterOld.timelock_address' (IFraxAMOMinterOld.sol#52) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}