{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_54"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": "Detected issues with version pragma in IFrax.sol:\n\t- pragma solidity>=0.6.11 (IFrax.sol#4): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function COLLATERAL_RATIO_PAUSER() external view returns (bytes32);\n",
          "message": "Function 'IFrax.COLLATERAL_RATIO_PAUSER' (IFrax.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function DEFAULT_ADMIN_ADDRESS() external view returns (address);\n",
          "message": "Function 'IFrax.DEFAULT_ADMIN_ADDRESS' (IFrax.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function DEFAULT_ADMIN_ROLE() external view returns (bytes32);\n",
          "message": "Function 'IFrax.DEFAULT_ADMIN_ROLE' (IFrax.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addPool(address pool_address ) external;\n",
          "message": "Parameter 'pool_address' of IFrax.addPool (IFrax.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function collateral_ratio_paused() external view returns (bool);\n",
          "message": "Function 'IFrax.collateral_ratio_paused' (IFrax.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function controller_address() external view returns (address);\n",
          "message": "Function 'IFrax.controller_address' (IFrax.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function creator_address() external view returns (address);\n",
          "message": "Function 'IFrax.creator_address' (IFrax.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function eth_usd_consumer_address() external view returns (address);\n",
          "message": "Function 'IFrax.eth_usd_consumer_address' (IFrax.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function eth_usd_price() external view returns (uint256);\n",
          "message": "Function 'IFrax.eth_usd_price' (IFrax.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_eth_oracle_address() external view returns (address);\n",
          "message": "Function 'IFrax.frax_eth_oracle_address' (IFrax.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_info() external view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256);\n",
          "message": "Function 'IFrax.frax_info' (IFrax.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_pools(address ) external view returns (bool);\n",
          "message": "Function 'IFrax.frax_pools' (IFrax.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_pools(address ) external view returns (bool);\n",
          "message": "Parameter '' of IFrax.frax_pools (IFrax.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_pools_array(uint256 ) external view returns (address);\n",
          "message": "Function 'IFrax.frax_pools_array' (IFrax.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_pools_array(uint256 ) external view returns (address);\n",
          "message": "Parameter '' of IFrax.frax_pools_array (IFrax.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_price() external view returns (uint256);\n",
          "message": "Function 'IFrax.frax_price' (IFrax.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_step() external view returns (uint256);\n",
          "message": "Function 'IFrax.frax_step' (IFrax.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_address() external view returns (address);\n",
          "message": "Function 'IFrax.fxs_address' (IFrax.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_eth_oracle_address() external view returns (address);\n",
          "message": "Function 'IFrax.fxs_eth_oracle_address' (IFrax.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function fxs_price() external view returns (uint256);\n",
          "message": "Function 'IFrax.fxs_price' (IFrax.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function genesis_supply() external view returns (uint256);\n",
          "message": "Function 'IFrax.genesis_supply' (IFrax.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function global_collateral_ratio() external view returns (uint256);\n",
          "message": "Function 'IFrax.global_collateral_ratio' (IFrax.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function last_call_time() external view returns (uint256);\n",
          "message": "Function 'IFrax.last_call_time' (IFrax.sol#41) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function minting_fee() external view returns (uint256);\n",
          "message": "Function 'IFrax.minting_fee' (IFrax.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function owner_address() external view returns (address);\n",
          "message": "Function 'IFrax.owner_address' (IFrax.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount ) external;\n",
          "message": "Function 'IFrax.pool_burn_from' (IFrax.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount ) external;\n",
          "message": "Parameter 'b_address' of IFrax.pool_burn_from (IFrax.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_burn_from(address b_address, uint256 b_amount ) external;\n",
          "message": "Parameter 'b_amount' of IFrax.pool_burn_from (IFrax.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount ) external;\n",
          "message": "Function 'IFrax.pool_mint' (IFrax.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount ) external;\n",
          "message": "Parameter 'm_address' of IFrax.pool_mint (IFrax.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function pool_mint(address m_address, uint256 m_amount ) external;\n",
          "message": "Parameter 'm_amount' of IFrax.pool_mint (IFrax.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function price_band() external view returns (uint256);\n",
          "message": "Function 'IFrax.price_band' (IFrax.sol#47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function price_target() external view returns (uint256);\n",
          "message": "Function 'IFrax.price_target' (IFrax.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function redemption_fee() external view returns (uint256);\n",
          "message": "Function 'IFrax.redemption_fee' (IFrax.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function refresh_cooldown() external view returns (uint256);\n",
          "message": "Function 'IFrax.refresh_cooldown' (IFrax.sol#51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removePool(address pool_address ) external;\n",
          "message": "Parameter 'pool_address' of IFrax.removePool (IFrax.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setController(address _controller_address ) external;\n",
          "message": "Parameter '_controller_address' of IFrax.setController (IFrax.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setETHUSDOracle(address _eth_usd_consumer_address ) external;\n",
          "message": "Parameter '_eth_usd_consumer_address' of IFrax.setETHUSDOracle (IFrax.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFRAXEthOracle(address _frax_oracle_addr, address _weth_address ) external;\n",
          "message": "Parameter '_frax_oracle_addr' of IFrax.setFRAXEthOracle (IFrax.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFRAXEthOracle(address _frax_oracle_addr, address _weth_address ) external;\n",
          "message": "Parameter '_weth_address' of IFrax.setFRAXEthOracle (IFrax.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFXSAddress(address _fxs_address ) external;\n",
          "message": "Parameter '_fxs_address' of IFrax.setFXSAddress (IFrax.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFXSEthOracle(address _fxs_oracle_addr, address _weth_address ) external;\n",
          "message": "Parameter '_fxs_oracle_addr' of IFrax.setFXSEthOracle (IFrax.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFXSEthOracle(address _fxs_oracle_addr, address _weth_address ) external;\n",
          "message": "Parameter '_weth_address' of IFrax.setFXSEthOracle (IFrax.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setFraxStep(uint256 _new_step ) external;\n",
          "message": "Parameter '_new_step' of IFrax.setFraxStep (IFrax.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setMintingFee(uint256 min_fee ) external;\n",
          "message": "Parameter 'min_fee' of IFrax.setMintingFee (IFrax.sol#61) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setOwner(address _owner_address ) external;\n",
          "message": "Parameter '_owner_address' of IFrax.setOwner (IFrax.sol#62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setPriceBand(uint256 _price_band ) external;\n",
          "message": "Parameter '_price_band' of IFrax.setPriceBand (IFrax.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setPriceTarget(uint256 _new_price_target ) external;\n",
          "message": "Parameter '_new_price_target' of IFrax.setPriceTarget (IFrax.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setRedemptionFee(uint256 red_fee ) external;\n",
          "message": "Parameter 'red_fee' of IFrax.setRedemptionFee (IFrax.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setRefreshCooldown(uint256 _new_cooldown ) external;\n",
          "message": "Parameter '_new_cooldown' of IFrax.setRefreshCooldown (IFrax.sol#66) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setTimelock(address new_timelock ) external;\n",
          "message": "Parameter 'new_timelock' of IFrax.setTimelock (IFrax.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function timelock_address() external view returns (address);\n",
          "message": "Function 'IFrax.timelock_address' (IFrax.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function weth_address() external view returns (address);\n",
          "message": "Function 'IFrax.weth_address' (IFrax.sol#74) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity >=0.6.11;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function frax_info() external view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}