function optimalDeposit(
    uint256 amtA,
    uint256 amtB,
    uint256 resA,
    uint256 resB,
    uint256 fee
) internal pure returns (uint256 swapAmt, bool isReversed) {
    if (amtA.mul(resB) >= amtB.mul(resA)) {
        require(amtB.add(resB) > 0, "Division by zero");
        uint256 a = amtA.mul(resB);
        uint256 b = amtB.mul(resA);
        uint256 nominator = a.sub(b);
        uint256 denominator = amtB.add(resB);
        swapAmt = nominator.div(denominator).mul(fee).div(10000);
        isReversed = false;
    } else {
        require(amtA.add(resA) > 0, "Division by zero");
        uint256 a = amtB.mul(resA);
        uint256 b = amtA.mul(resB);
        uint256 nominator = a.sub(b);
        uint256 denominator = amtA.add(resA);
        swapAmt = nominator.div(denominator).mul(fee).div(10000);
        isReversed = true;
    }
}