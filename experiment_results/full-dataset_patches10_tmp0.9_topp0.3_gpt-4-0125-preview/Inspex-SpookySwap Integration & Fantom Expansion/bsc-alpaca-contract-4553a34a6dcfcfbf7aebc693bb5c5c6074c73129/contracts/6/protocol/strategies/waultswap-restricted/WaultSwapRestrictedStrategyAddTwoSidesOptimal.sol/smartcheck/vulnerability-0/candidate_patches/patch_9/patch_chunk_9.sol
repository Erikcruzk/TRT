function _optimalDepositA(
  uint256 amtA,
  uint256 amtB,
  uint256 resA,
  uint256 resB
) internal pure returns (uint256) {
  require(amtA.mul(resB) >= amtB.mul(resA), "Reversed");

  uint256 a = 998;
  uint256 b = uint256(1998).mul(resA);
  uint256 _c = (amtA.mul(resB)).sub(amtB.mul(resA));
  uint256 c = _c.mul(1000);
  uint256 d = a.mul(c).mul(4);
  uint256 e = AlpacaMath.sqrt(b.mul(b).add(d));

  uint256 numerator = e.sub(b);
  uint256 denominator = a.mul(2).mul(amtB.add(resB)).mul(resA);

  return numerator.div(denominator);
}