function optimalDeposit(
    uint256 amtA,
    uint256 amtB,
    uint256 resA,
    uint256 resB,
    uint256 fee
) internal pure returns (uint256 swapAmt, bool isReversed) {
    if (amtA.mul(resB) >= amtB.mul(resA)) {
        uint256 a = amtA.mul(resB);
        uint256 b = amtB.mul(resA);
        if (a.sub(b) > b) {
            swapAmt = _optimalDepositA(amtA, amtB, resA, resB, fee);
            isReversed = false;
        } else {
            swapAmt = 0;
            isReversed = false;
        }
    } else {
        uint256 a = amtB.mul(resA);
        uint256 b = amtA.mul(resB);
        if (a.sub(b) > b) {
            swapAmt = _optimalDepositA(amtB, amtA, resB, resA, fee);
            isReversed = true;
        } else {
            swapAmt = 0;
            isReversed = true;
        }
    }
}