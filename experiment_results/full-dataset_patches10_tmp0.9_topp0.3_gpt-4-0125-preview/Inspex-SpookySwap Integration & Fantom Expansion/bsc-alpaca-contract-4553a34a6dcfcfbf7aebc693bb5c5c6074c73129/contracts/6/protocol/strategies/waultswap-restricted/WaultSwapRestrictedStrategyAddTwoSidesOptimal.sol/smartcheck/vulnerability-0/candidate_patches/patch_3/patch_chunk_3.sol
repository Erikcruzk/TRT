function optimalDeposit(
    uint256 amtA,
    uint256 amtB,
    uint256 resA,
    uint256 resB
) internal pure returns (uint256 swapAmt, bool isReversed) {
    if (amtA.mul(resB) >= amtB.mul(resA)) {
        // Ensure multiplication is done after division.
        uint256 a = 998;
        uint256 b = 1998 * resA;
        uint256 c = (amtA.mul(resB) / amtB.add(resB)).mul(resA);
        uint256 nom = AlpacaMath.sqrt(a.mul(c).mul(4).add(b.mul(b))) - b;
        swapAmt = nom / (a * 2);
        isReversed = false;
    } else {
        // Ensure multiplication is done after division.
        uint256 a = 998;
        uint256 b = 1998 * resB;
        uint256 c = (amtB.mul(resA) / amtA.add(resA)).mul(resB);
        uint256 nom = AlpacaMath.sqrt(a.mul(c).mul(4).add(b.mul(b))) - b;
        swapAmt = nom / (a * 2);
        isReversed = true;
    }
}