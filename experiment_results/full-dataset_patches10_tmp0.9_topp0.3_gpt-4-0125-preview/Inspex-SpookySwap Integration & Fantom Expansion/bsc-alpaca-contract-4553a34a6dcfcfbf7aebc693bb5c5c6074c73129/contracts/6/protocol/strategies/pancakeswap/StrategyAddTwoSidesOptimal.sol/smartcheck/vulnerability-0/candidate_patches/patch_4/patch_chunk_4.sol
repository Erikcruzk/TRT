function _optimalDepositA(
    uint256 amtA,
    uint256 amtB,
    uint256 resA,
    uint256 resB
) internal pure returns (uint256) {
    require(amtA.mul(resB) >= amtB.mul(resA), "Reversed");

    uint256 a = 998;
    uint256 b = uint256(1998).mul(resA);
    uint256 c = ((amtA.mul(resB)).sub(amtB.mul(resA))).mul(1000);
    uint256 d = c.div(amtB.add(resB)).mul(resA);

    uint256 e = a.mul(d).mul(4);
    uint256 f = AlpacaMath.sqrt(b.mul(b).add(e));

    uint256 numerator = f.sub(b);
    uint256 denominator = a.mul(2);

    return numerator.div(denominator);
}