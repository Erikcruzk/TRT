function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {
    blockNumber = block.number;
    returnData = new bytes[](calls.length);
    uint256 gasLimit = gasleft();
    for (uint256 i = 0; i < calls.length; i++) {
        gasLimit = gasLimit / (calls.length - i); // Adjust gas limit to prevent deliberate out-of-gas errors
        (bool success, bytes memory ret) = calls[i].target.call{gas: gasLimit}(calls[i].callData);
        require(success);
        returnData[i] = ret;
    }
}