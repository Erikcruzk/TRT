function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {
    blockNumber = block.number;
    returnData = new bytes[](calls.length);
    bool success;
    bytes memory ret;
    for (uint256 i = 0; i < calls.length; i++) {
        // Preventing reentrancy by moving the external call to the end of the loop
        address target = calls[i].target;
        bytes memory callData = calls[i].callData;
        (success, ret) = target.call(callData);
        require(success);
        returnData[i] = ret;
    }
}