{
  "smartbugs_completed": "No vulnerabilities found",
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 720,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 728,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 746,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 755,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 766,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 776,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 779,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 2158,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract MiniFL is IMiniFL, OwnableUpgradeable, ReentrancyGuardUpgradeable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "state-variable-read-in-a-loop",
          "vulnerability_from_line": 2483,
          "vulnerability_to_line": null,
          "vulnerability_code": "      PoolInfo storage _poolInfo = poolInfo[_pids[i]];\n",
          "message": "Replace state variable reads and writes within loops with local variable reads and writes."
        },
        {
          "name": "state-variable-read-in-a-loop",
          "vulnerability_from_line": 2486,
          "vulnerability_to_line": null,
          "vulnerability_code": "      stakeDebtTokenAllowance[_pids[i]][_stakers[i]] = _allow;\n",
          "message": "Replace state variable reads and writes within loops with local variable reads and writes."
        },
        {
          "name": "unnecessary-checked-arithmetic-in-loop",
          "vulnerability_from_line": 2351,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; i++) {\n",
          "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
        },
        {
          "name": "unnecessary-checked-arithmetic-in-loop",
          "vulnerability_from_line": 2359,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; ++i) {\n",
          "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
        },
        {
          "name": "unnecessary-checked-arithmetic-in-loop",
          "vulnerability_from_line": 2482,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < _stakers.length; i++) {\n",
          "message": "A lot of times there is no risk that the loop counter can overflow. Using Solidity's unchecked block saves the overflow checks."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(success, \"Address: unable to send value, recipient may have reverted\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 207,
          "vulnerability_to_line": null,
          "vulnerability_code": "                require(isContract(target), \"Address: call to non-contract\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 334,
          "vulnerability_to_line": null,
          "vulnerability_code": "            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 335,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Initializable: contract is already initialized\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 336,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 367,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 380,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_initializing, \"Initializable: contract is not initializing\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 393,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_initializing, \"Initializable: contract is initializing\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 528,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 742,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 743,
          "vulnerability_to_line": null,
          "vulnerability_code": "            (value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 744,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"SafeERC20: approve from non-zero to non-zero allowance\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 745,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 765,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 801,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 816,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 901,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 966,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 983,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1000,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1017,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1034,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1051,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1068,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1085,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1102,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1119,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1136,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1170,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1187,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1204,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1221,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1238,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1255,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1272,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1289,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1306,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1323,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1340,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1357,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1374,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1391,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1408,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1442,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1459,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1476,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1490,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value >= 0, \"SafeCast: value must be positive\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1527,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1545,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1563,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1581,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1599,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1617,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1635,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1653,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1671,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1689,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1707,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1725,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1743,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1761,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1779,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1797,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1815,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1833,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1851,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1869,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1887,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1905,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1923,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1941,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1959,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1977,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1995,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2013,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2031,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2049,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2063,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 334,
          "vulnerability_to_line": null,
          "vulnerability_code": "            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 335,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Initializable: contract is already initialized\"\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 336,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-multiple-require",
          "vulnerability_from_line": 367,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n",
          "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2311,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (block.timestamp > pool.lastRewardTime && stakedBalance != 0) {\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2312,
          "vulnerability_to_line": null,
          "vulnerability_code": "      uint256 timePast = block.timestamp - pool.lastRewardTime;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2313,
          "vulnerability_to_line": null,
          "vulnerability_code": "      uint256 alpacaReward = (timePast * alpacaPerSecond * pool.allocPoint) / totalAllocPoint;\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2314,
          "vulnerability_to_line": null,
          "vulnerability_code": "      accAlpacaPerShare = accAlpacaPerShare + ((alpacaReward * ACC_ALPACA_PRECISION) / stakedBalance);\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2315,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2376,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (pool.isDebtTokenPool && !stakeDebtTokenAllowance[_pid][msg.sender]) revert MiniFL_Forbidden();\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2377,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (!pool.isDebtTokenPool && msg.sender != _for) revert MiniFL_Forbidden();\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2406,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (pool.isDebtTokenPool && !stakeDebtTokenAllowance[_pid][msg.sender]) revert MiniFL_Forbidden();\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-nested-if",
          "vulnerability_from_line": 2407,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (!pool.isDebtTokenPool && msg.sender != _for) revert MiniFL_Forbidden();\n",
          "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports."
        },
        {
          "name": "use-prefix-increment-not-postfix",
          "vulnerability_from_line": 2351,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; i++) {\n",
          "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
        },
        {
          "name": "use-prefix-increment-not-postfix",
          "vulnerability_from_line": 2482,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < _stakers.length; i++) {\n",
          "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(success, \"Address: unable to send value, recipient may have reverted\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 136,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 334,
          "vulnerability_to_line": null,
          "vulnerability_code": "            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 335,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"Initializable: contract is already initialized\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 336,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 367,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 380,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_initializing, \"Initializable: contract is not initializing\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 393,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_initializing, \"Initializable: contract is initializing\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 528,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 742,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 743,
          "vulnerability_to_line": null,
          "vulnerability_code": "            (value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 744,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"SafeERC20: approve from non-zero to non-zero allowance\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 745,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 765,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 801,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 816,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 966,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 983,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1000,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1017,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1034,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1051,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1068,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1085,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1102,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1119,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1136,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1153,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1170,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1187,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1204,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1221,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1238,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1255,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1272,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1289,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1306,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1323,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1340,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1357,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1374,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1391,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1408,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1442,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1459,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1476,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1527,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1545,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1563,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1581,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1599,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1617,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1635,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1653,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1671,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1689,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1707,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1725,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1743,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1761,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1779,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1797,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1815,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1833,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1851,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1869,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1887,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1905,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1923,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1941,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1959,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1977,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1995,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 2013,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 2031,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 2049,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 2063,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 520,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _transferOwnership(address(0));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
          "vulnerability_from_line": 2351,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; i++) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_EXTRA_GAS_IN_LOOPS",
          "vulnerability_from_line": 2359,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; ++i) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_GAS_LIMIT_IN_LOOPS",
          "vulnerability_from_line": 2351,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < len; i++) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_OVERPOWERED_ROLE",
          "vulnerability_from_line": 2272,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setPool(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_OVERPOWERED_ROLE",
          "vulnerability_from_line": 2294,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setAlpacaPerSecond(uint256 _alpacaPerSecond, bool _withUpdate) external onlyOwner {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.1;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 253,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 420,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 459,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 636,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 699,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 843,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 935,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.8.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 310,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint8 private _initialized;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 315,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool private _initializing;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 451,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[50] private __gap;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 475,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _owner;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 547,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[49] private __gap;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 873,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private constant _NOT_ENTERED = 1;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 874,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private constant _ENTERED = 2;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 876,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _status;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 926,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[49] private __gap;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 2190,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private constant ACC_ALPACA_PRECISION = 1e12;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 2132,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) external view returns (IERC20Upgradeable[] memory, uint256[] memory);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 720,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 728,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 746,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 755,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 766,
          "vulnerability_to_line": null,
          "vulnerability_code": "            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 832,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, bytes memory returndata) = address(token).call(data);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UPGRADE_TO_050",
          "vulnerability_from_line": 442,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _msgData() internal view virtual returns (bytes calldata) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2475,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approveStakeDebtToken(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(this).balance >= amount, \"Address: insufficient balance\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, ) = recipient.call{value: amount}(\"\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, ) = recipient.call{value: amount}(\"\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, ) = recipient.call{value: amount}(\"\");\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2163,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_DuplicatePool();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2163,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_DuplicatePool();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2164,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_Forbidden();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2164,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_Forbidden();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2165,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2165,
          "vulnerability_to_line": null,
          "vulnerability_code": "  error MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2477,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address[] calldata _stakers,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2478,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool _allow\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2479,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) external onlyOwner {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2480,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (_stakers.length != _pids.length) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2480,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (_stakers.length != _pids.length) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2480,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (_stakers.length != _pids.length) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2480,
          "vulnerability_to_line": null,
          "vulnerability_code": "    if (_stakers.length != _pids.length) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2482,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < _stakers.length; i++) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2482,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < _stakers.length; i++) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2482,
          "vulnerability_to_line": null,
          "vulnerability_code": "    for (uint256 i = 0; i < _stakers.length; i++) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2483,
          "vulnerability_to_line": null,
          "vulnerability_code": "      PoolInfo storage _poolInfo = poolInfo[_pids[i]];\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2484,
          "vulnerability_to_line": null,
          "vulnerability_code": "      if (_poolInfo.isDebtTokenPool == false) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2484,
          "vulnerability_to_line": null,
          "vulnerability_code": "      if (_poolInfo.isDebtTokenPool == false) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2484,
          "vulnerability_to_line": null,
          "vulnerability_code": "      if (_poolInfo.isDebtTokenPool == false) revert MiniFL_InvalidArguments();\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2486,
          "vulnerability_to_line": null,
          "vulnerability_code": "      stakeDebtTokenAllowance[_pids[i]][_stakers[i]] = _allow;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2486,
          "vulnerability_to_line": null,
          "vulnerability_code": "      stakeDebtTokenAllowance[_pids[i]][_stakers[i]] = _allow;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2486,
          "vulnerability_to_line": null,
          "vulnerability_code": "      stakeDebtTokenAllowance[_pids[i]][_stakers[i]] = _allow;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2487,
          "vulnerability_to_line": null,
          "vulnerability_code": "      emit LogApproveStakeDebtToken(_pids[i], _stakers[i], _allow);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2487,
          "vulnerability_to_line": null,
          "vulnerability_code": "      emit LogApproveStakeDebtToken(_pids[i], _stakers[i], _allow);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2487,
          "vulnerability_to_line": null,
          "vulnerability_code": "      emit LogApproveStakeDebtToken(_pids[i], _stakers[i], _allow);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "Solc experienced a fatal error"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}