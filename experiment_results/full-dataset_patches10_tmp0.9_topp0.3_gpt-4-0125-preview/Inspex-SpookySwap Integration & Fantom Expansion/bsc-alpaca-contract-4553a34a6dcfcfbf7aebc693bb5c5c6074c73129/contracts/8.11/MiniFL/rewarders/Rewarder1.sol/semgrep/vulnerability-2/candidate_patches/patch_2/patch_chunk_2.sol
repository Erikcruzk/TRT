function onWithdraw(
  uint256 _pid,
  address _user,
  uint256, 
  uint256 _newAmount
) external override nonReentrant onlyFL {
  PoolInfo memory pool = _updatePool(_pid);
  UserInfo storage user = userInfo[_pid][_user];

  if (user.amount > _newAmount) {
    
    uint256 _amount = user.amount - _newAmount;

    user.rewardDebt = user.rewardDebt - int256((_amount * pool.accRewardPerShare) / ACC_REWARD_PRECISION);
    user.amount = _newAmount;

    emit LogOnWithdraw(_user, _pid, _amount);
  } else {
    
    
    uint256 _amount = _newAmount - user.amount;
    user.amount = _newAmount;
    user.rewardDebt = user.rewardDebt + int256((_amount * pool.accRewardPerShare) / ACC_REWARD_PRECISION);

    emit LogOnDeposit(_user, _pid, _amount);
  }
}