function onHarvest(
  uint256 _pid,
  address _user,
  uint256 
) external override nonReentrant onlyFL {
  PoolInfo memory pool = _updatePool(_pid);
  UserInfo storage user = userInfo[_pid][_user];

  int256 _accumulatedRewards = ((user.amount * pool.accRewardPerShare) / ACC_REWARD_PRECISION).toInt256();
  uint256 _pendingRewards = 0;
  if(_accumulatedRewards - user.rewardDebt > 0) {
    _pendingRewards = (_accumulatedRewards - user.rewardDebt).toUint256();
  }

  user.rewardDebt = _accumulatedRewards;

  if (_pendingRewards != 0) {
    rewardToken.safeTransfer(_user, _pendingRewards);
  }

  emit LogHarvest(_user, _pid, _pendingRewards);
}