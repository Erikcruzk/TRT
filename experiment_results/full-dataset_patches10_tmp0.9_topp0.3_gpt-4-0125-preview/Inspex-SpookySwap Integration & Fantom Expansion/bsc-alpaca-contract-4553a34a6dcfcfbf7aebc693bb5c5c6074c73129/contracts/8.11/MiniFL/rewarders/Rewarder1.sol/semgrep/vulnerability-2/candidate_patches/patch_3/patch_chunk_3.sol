function onWithdraw(
    uint256 _pid,
    address _user,
    uint256, 
    uint256 _newAmount
  ) external override nonReentrant onlyFL {
    PoolInfo memory pool = _updatePool(_pid);
    UserInfo storage user = userInfo[_pid][_user];

    uint256 _amount = 0;
    if (user.amount > _newAmount) {
      
      _amount = user.amount - _newAmount;

      user.rewardDebt = user.rewardDebt - (((_amount * pool.accRewardPerShare) / ACC_REWARD_PRECISION)).toInt256();
      user.amount = user.amount - _amount;

      emit LogOnWithdraw(_user, _pid, _amount);
    } else if (user.amount < _newAmount) {
      
      
      _amount = _newAmount - user.amount;
      user.amount = _newAmount;
      user.rewardDebt = user.rewardDebt + ((_amount * pool.accRewardPerShare) / ACC_REWARD_PRECISION).toInt256();

      emit LogOnDeposit(_user, _pid, _amount);
    }
  }