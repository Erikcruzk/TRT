{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_12"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.13;\n",
          "message": "Detected issues with version pragma in IRCNftHubXdai.sol:\n\t- pragma solidity0.5.13 (IRCNftHubXdai.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function ownerOf(uint256) external view returns (address);\n",
          "message": "Parameter '' of IRCNftHubXdai.ownerOf (IRCNftHubXdai.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function tokenURI(uint256) external view returns (string memory);\n",
          "message": "Parameter '' of IRCNftHubXdai.tokenURI (IRCNftHubXdai.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMarket(address) external returns (bool);\n",
          "message": "Parameter '' of IRCNftHubXdai.addMarket (IRCNftHubXdai.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintNft(address,uint256,string calldata) external returns (bool);\n",
          "message": "Parameter '' of IRCNftHubXdai.mintNft (IRCNftHubXdai.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintNft(address,uint256,string calldata) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IRCNftHubXdai.mintNft (IRCNftHubXdai.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintNft(address,uint256,string calldata) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IRCNftHubXdai.mintNft (IRCNftHubXdai.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferNft(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IRCNftHubXdai.transferNft (IRCNftHubXdai.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferNft(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IRCNftHubXdai.transferNft (IRCNftHubXdai.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferNft(address,address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IRCNftHubXdai.transferNft (IRCNftHubXdai.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeCard(address,uint256) external returns (bool);\n",
          "message": "Parameter '' of IRCNftHubXdai.upgradeCard (IRCNftHubXdai.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function upgradeCard(address,uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IRCNftHubXdai.upgradeCard (IRCNftHubXdai.sol#11) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}