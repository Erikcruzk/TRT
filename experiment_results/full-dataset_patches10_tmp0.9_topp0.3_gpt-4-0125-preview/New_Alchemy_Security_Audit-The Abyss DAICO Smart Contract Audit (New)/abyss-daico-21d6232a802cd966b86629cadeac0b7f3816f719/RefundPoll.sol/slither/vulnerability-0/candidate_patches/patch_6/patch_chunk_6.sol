function vote(bool agree) public checkTime {
    require(votesByAddress[msg.sender].time == 0);

    uint256 voiceWeight = token.balanceOf(msg.sender);
    uint256 maxVoiceWeight = safeDiv(token.totalSupply(), MAX_TOKENS_WEIGHT_DENOM);
    voiceWeight =  voiceWeight <= maxVoiceWeight ? voiceWeight : maxVoiceWeight;

    if(agree) {
        yesCounter = safeAdd(yesCounter, voiceWeight);
    } else {
        noCounter = safeAdd(noCounter, voiceWeight);
    }

    // Update the state before external call
    votesByAddress[msg.sender].time = now;
    votesByAddress[msg.sender].weight = voiceWeight;
    votesByAddress[msg.sender].agree = agree;
    totalVoted = safeAdd(totalVoted, 1);

    // The external call (to a token contract) should be the last action to prevent re-entrancy attacks
    voiceWeight = token.balanceOf(msg.sender); // This call to balanceOf could be potentially dangerous if not placed last
}