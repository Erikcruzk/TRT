function vote(bool agree) public checkTime {
    require(votesByAddress[msg.sender].time == 0);

    uint256 voiceWeight = token.balanceOf(msg.sender);
    uint256 maxVoiceWeight = safeDiv(token.totalSupply(), MAX_TOKENS_WEIGHT_DENOM);
    voiceWeight = voiceWeight <= maxVoiceWeight ? voiceWeight : maxVoiceWeight;

    uint256 prevYesCounter = yesCounter;
    uint256 prevNoCounter = noCounter;

    if(agree) {
        yesCounter = safeAdd(yesCounter, voiceWeight);
    } else {
        noCounter = safeAdd(noCounter, voiceWeight);
    }

    votesByAddress[msg.sender].time = now;
    votesByAddress[msg.sender].weight = voiceWeight;
    votesByAddress[msg.sender].agree = agree;

    totalVoted = safeAdd(totalVoted, 1);

    // Ensure state changes occur before external calls
    // External call to the token contract
    require(token.balanceOf(msg.sender) == voiceWeight, "Balance must match vote weight after vote");

    // Revert state if the balance does not hold after the external call
    if(token.balanceOf(msg.sender) != voiceWeight) {
        votesByAddress[msg.sender].time = 0;
        votesByAddress[msg.sender].weight = 0;
        votesByAddress[msg.sender].agree = false;
        yesCounter = prevYesCounter;
        noCounter = prevNoCounter;
        totalVoted = safeSub(totalVoted, 1);
        revert("Reverted due to balance mismatch after vote.");
    }
}