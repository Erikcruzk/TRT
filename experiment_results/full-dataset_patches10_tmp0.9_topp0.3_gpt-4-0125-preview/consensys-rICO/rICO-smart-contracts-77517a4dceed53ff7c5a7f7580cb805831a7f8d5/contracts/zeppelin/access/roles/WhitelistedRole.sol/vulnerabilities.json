{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _addWhitelistAdmin(msg.sender);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!has(role, account), \"Roles: account already has role\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(has(role, account), \"Roles: account does not have role\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(account != address(0), \"Roles: account is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isWhitelistAdmin(msg.sender), \"WhitelistAdminRole: caller does not have the WhitelistAdmin role\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isParticipantWhitelisted(msg.sender), \"WhitelistedRole: caller does not have the Whitelisted role\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(has(role, account), \"Roles: account does not have role\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(account != address(0), \"Roles: account is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 61,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isWhitelistAdmin(msg.sender), \"WhitelistAdminRole: caller does not have the WhitelistAdmin role\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 108,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isParticipantWhitelisted(msg.sender), \"WhitelistedRole: caller does not have the Whitelisted role\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 71,
          "vulnerability_code": "    function addWhitelistAdmin(address account) public onlyWhitelistAdmin {\n\n        _addWhitelistAdmin(account);\n",
          "message": "WhitelistAdminRole.addWhitelistAdmin (WhitelistedRole.sol#69-71) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": 75,
          "vulnerability_code": "    function renounceWhitelistAdmin() public {\n\n        _removeWhitelistAdmin(msg.sender);\n",
          "message": "WhitelistAdminRole.renounceWhitelistAdmin (WhitelistedRole.sol#73-75) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 116,
          "vulnerability_to_line": 118,
          "vulnerability_code": "    function addWhitelisted(address account) public onlyWhitelistAdmin {\n\n        _addWhitelisted(account);\n",
          "message": "WhitelistedRole.addWhitelisted (WhitelistedRole.sol#116-118) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 120,
          "vulnerability_to_line": 122,
          "vulnerability_code": "    function removeWhitelisted(address account) public onlyWhitelistAdmin {\n\n        _removeWhitelisted(account);\n",
          "message": "WhitelistedRole.removeWhitelisted (WhitelistedRole.sol#120-122) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": 126,
          "vulnerability_code": "    function renounceWhitelisted() public {\n\n        _removeWhitelisted(msg.sender);\n",
          "message": "WhitelistedRole.renounceWhitelisted (WhitelistedRole.sol#124-126) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": "Detected issues with version pragma in WhitelistedRole.sol:\n\t- pragma solidity^0.5.0 (WhitelistedRole.sol#3): it allows old versions\n\t- pragma solidity^0.5.0 (WhitelistedRole.sol#42): it allows old versions\n\t- pragma solidity^0.5.0 (WhitelistedRole.sol#90): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": 80,
          "vulnerability_code": "    function _addWhitelistAdmin(address account) internal {\n\n        _whitelistAdmins.add(account);\n\n        emit WhitelistAdminAdded(account);\n",
          "message": "Function 'WhitelistAdminRole._addWhitelistAdmin' (WhitelistedRole.sol#77-80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": 85,
          "vulnerability_code": "    function _removeWhitelistAdmin(address account) internal {\n\n        _whitelistAdmins.remove(account);\n\n        emit WhitelistAdminRemoved(account);\n",
          "message": "Function 'WhitelistAdminRole._removeWhitelistAdmin' (WhitelistedRole.sol#82-85) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 128,
          "vulnerability_to_line": 131,
          "vulnerability_code": "    function _addWhitelisted(address account) internal {\n\n        _whitelisteds.add(account);\n\n        emit WhitelistedAdded(account);\n",
          "message": "Function 'WhitelistedRole._addWhitelisted' (WhitelistedRole.sol#128-131) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 133,
          "vulnerability_to_line": 136,
          "vulnerability_code": "    function _removeWhitelisted(address account) internal {\n\n        _whitelisteds.remove(account);\n\n        emit WhitelistedRemoved(account);\n",
          "message": "Function 'WhitelistedRole._removeWhitelisted' (WhitelistedRole.sol#133-136) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Roles.Role private _whitelistAdmins;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Roles.Role private _whitelisteds;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}