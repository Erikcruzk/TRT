{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newContract != address(0), \"Could not deploy contract\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "         require(newContract != address(0), \"Could not deploy contract\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "assembly",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function performCreate2(uint256 value, bytes memory deploymentData, bytes32 salt) public returns(address newContract) {\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            newContract := create2(value, add(0x20, deploymentData), mload(deploymentData), salt)\n\n        }\n\n        require(newContract != address(0), \"Could not deploy contract\");\n\n        emit ContractCreation(newContract);\n",
          "message": "CreateCall.performCreate2 uses assembly (CreateCall.sol#11-18)\n\t- CreateCall.sol#13-15\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function performCreate(uint256 value, bytes memory deploymentData) public returns(address newContract) {\n\n        //  solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            newContract := create(value, add(deploymentData, 0x00), mload(deploymentData))\n\n        }\n\n         require(newContract != address(0), \"Could not deploy contract\");\n\n        emit ContractCreation(newContract);\n",
          "message": "CreateCall.performCreate uses assembly (CreateCall.sol#20-27)\n\t- CreateCall.sol#22-24\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function performCreate2(uint256 value, bytes memory deploymentData, bytes32 salt) public returns(address newContract) {\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            newContract := create2(value, add(0x20, deploymentData), mload(deploymentData), salt)\n\n        }\n\n        require(newContract != address(0), \"Could not deploy contract\");\n\n        emit ContractCreation(newContract);\n",
          "message": "CreateCall.performCreate2 (CreateCall.sol#11-18) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function performCreate(uint256 value, bytes memory deploymentData) public returns(address newContract) {\n\n        //  solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            newContract := create(value, add(deploymentData, 0x00), mload(deploymentData))\n\n        }\n\n         require(newContract != address(0), \"Could not deploy contract\");\n\n        emit ContractCreation(newContract);\n",
          "message": "CreateCall.performCreate (CreateCall.sol#20-27) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity 0.5.17;\n",
          "message": "Detected issues with version pragma in CreateCall.sol:\n\t- pragma solidity0.5.17 (CreateCall.sol#3): it allows old versions\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function performCreate2(uint256 value, bytes memory deploymentData, bytes32 salt) public returns(address newContract) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function performCreate(uint256 value, bytes memory deploymentData) public returns(address newContract) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}