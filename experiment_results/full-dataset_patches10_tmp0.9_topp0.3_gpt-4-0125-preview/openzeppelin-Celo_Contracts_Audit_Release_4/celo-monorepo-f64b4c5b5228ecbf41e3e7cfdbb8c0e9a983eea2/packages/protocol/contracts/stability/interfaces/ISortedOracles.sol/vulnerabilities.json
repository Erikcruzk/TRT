{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_16"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": "Detected issues with version pragma in ISortedOracles.sol:\n\t- pragma solidity^0.5.13 (ISortedOracles.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addOracle(address, address) external;\n",
          "message": "Parameter '' of ISortedOracles.addOracle (ISortedOracles.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function addOracle(address, address) external;\n",
          "message": "Parameter '_scope_0' of ISortedOracles.addOracle (ISortedOracles.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeOracle(address, address, uint256) external;\n",
          "message": "Parameter '' of ISortedOracles.removeOracle (ISortedOracles.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeOracle(address, address, uint256) external;\n",
          "message": "Parameter '_scope_0' of ISortedOracles.removeOracle (ISortedOracles.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeOracle(address, address, uint256) external;\n",
          "message": "Parameter '_scope_1' of ISortedOracles.removeOracle (ISortedOracles.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function report(address, uint256, address, address) external;\n",
          "message": "Parameter '' of ISortedOracles.report (ISortedOracles.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function report(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_0' of ISortedOracles.report (ISortedOracles.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function report(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_1' of ISortedOracles.report (ISortedOracles.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function report(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_2' of ISortedOracles.report (ISortedOracles.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeExpiredReports(address, uint256) external;\n",
          "message": "Parameter '' of ISortedOracles.removeExpiredReports (ISortedOracles.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function removeExpiredReports(address, uint256) external;\n",
          "message": "Parameter '_scope_0' of ISortedOracles.removeExpiredReports (ISortedOracles.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function numRates(address) external view returns (uint256);\n",
          "message": "Parameter '' of ISortedOracles.numRates (ISortedOracles.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function medianRate(address) external view returns (uint256, uint256);\n",
          "message": "Parameter '' of ISortedOracles.medianRate (ISortedOracles.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function numTimestamps(address) external view returns (uint256);\n",
          "message": "Parameter '' of ISortedOracles.numTimestamps (ISortedOracles.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function medianTimestamp(address) external view returns (uint256);\n",
          "message": "Parameter '' of ISortedOracles.medianTimestamp (ISortedOracles.sol#14) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isOldestReportExpired(address token) external view returns (bool, address);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function medianRate(address) external view returns (uint256, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}