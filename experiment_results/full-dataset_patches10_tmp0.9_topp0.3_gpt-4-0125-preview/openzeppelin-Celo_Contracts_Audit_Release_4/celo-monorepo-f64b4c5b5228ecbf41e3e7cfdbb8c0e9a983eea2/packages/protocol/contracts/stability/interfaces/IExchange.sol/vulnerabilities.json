{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_16"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": "Detected issues with version pragma in IExchange.sol:\n\t- pragma solidity^0.5.13 (IExchange.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function buy(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '' of IExchange.buy (IExchange.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function buy(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_0' of IExchange.buy (IExchange.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function buy(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_1' of IExchange.buy (IExchange.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sell(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '' of IExchange.sell (IExchange.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sell(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_0' of IExchange.sell (IExchange.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sell(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_1' of IExchange.sell (IExchange.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function exchange(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '' of IExchange.exchange (IExchange.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function exchange(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_0' of IExchange.exchange (IExchange.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function exchange(uint256, uint256, bool) external returns (uint256);\n",
          "message": "Parameter '_scope_1' of IExchange.exchange (IExchange.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setUpdateFrequency(uint256) external;\n",
          "message": "Parameter '' of IExchange.setUpdateFrequency (IExchange.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getBuyTokenAmount(uint256, bool) external view returns (uint256);\n",
          "message": "Parameter '' of IExchange.getBuyTokenAmount (IExchange.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getBuyTokenAmount(uint256, bool) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IExchange.getBuyTokenAmount (IExchange.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getSellTokenAmount(uint256, bool) external view returns (uint256);\n",
          "message": "Parameter '' of IExchange.getSellTokenAmount (IExchange.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getSellTokenAmount(uint256, bool) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IExchange.getSellTokenAmount (IExchange.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\n",
          "message": "Parameter '' of IExchange.getBuyAndSellBuckets (IExchange.sol#12) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}