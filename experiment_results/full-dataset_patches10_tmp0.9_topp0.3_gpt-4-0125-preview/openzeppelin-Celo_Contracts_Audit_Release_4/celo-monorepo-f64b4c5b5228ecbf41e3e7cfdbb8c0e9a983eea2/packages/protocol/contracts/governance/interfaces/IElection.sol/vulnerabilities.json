{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_61"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": "Detected issues with version pragma in IElection.sol:\n\t- pragma solidity^0.5.13 (IElection.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\n",
          "message": "Parameter '' of IElection.electNValidatorSigners (IElection.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\n",
          "message": "Parameter '_scope_0' of IElection.electNValidatorSigners (IElection.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function vote(address, uint256, address, address) external returns (bool);\n",
          "message": "Parameter '' of IElection.vote (IElection.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function vote(address, uint256, address, address) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.vote (IElection.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function vote(address, uint256, address, address) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IElection.vote (IElection.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function vote(address, uint256, address, address) external returns (bool);\n",
          "message": "Parameter '_scope_2' of IElection.vote (IElection.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function activate(address) external returns (bool);\n",
          "message": "Parameter '' of IElection.activate (IElection.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.revokeActive (IElection.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.revokeActive (IElection.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IElection.revokeActive (IElection.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_2' of IElection.revokeActive (IElection.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_3' of IElection.revokeActive (IElection.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeAllActive(address, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.revokeAllActive (IElection.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeAllActive(address, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.revokeAllActive (IElection.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeAllActive(address, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IElection.revokeAllActive (IElection.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokeAllActive(address, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_2' of IElection.revokeAllActive (IElection.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokePending(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.revokePending (IElection.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokePending(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.revokePending (IElection.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokePending(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_1' of IElection.revokePending (IElection.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokePending(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_2' of IElection.revokePending (IElection.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function revokePending(address, uint256, address, address, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_3' of IElection.revokePending (IElection.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markGroupIneligible(address) external;\n",
          "message": "Parameter '' of IElection.markGroupIneligible (IElection.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markGroupEligible(address, address, address) external;\n",
          "message": "Parameter '' of IElection.markGroupEligible (IElection.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markGroupEligible(address, address, address) external;\n",
          "message": "Parameter '_scope_0' of IElection.markGroupEligible (IElection.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function markGroupEligible(address, address, address) external;\n",
          "message": "Parameter '_scope_1' of IElection.markGroupEligible (IElection.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address,\n",
          "message": "Parameter '' of IElection.forceDecrementVotes (IElection.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256,\n",
          "message": "Parameter '_scope_0' of IElection.forceDecrementVotes (IElection.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address[] calldata,\n",
          "message": "Parameter '_scope_1' of IElection.forceDecrementVotes (IElection.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address[] calldata,\n",
          "message": "Parameter '_scope_2' of IElection.forceDecrementVotes (IElection.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata\n",
          "message": "Parameter '_scope_3' of IElection.forceDecrementVotes (IElection.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getNumVotesReceivable(address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getNumVotesReceivable (IElection.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTotalVotesByAccount(address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getTotalVotesByAccount (IElection.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getPendingVotesForGroupByAccount (IElection.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IElection.getPendingVotesForGroupByAccount (IElection.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getActiveVotesForGroupByAccount (IElection.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IElection.getActiveVotesForGroupByAccount (IElection.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getTotalVotesForGroupByAccount (IElection.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IElection.getTotalVotesForGroupByAccount (IElection.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getActiveVoteUnitsForGroupByAccount (IElection.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\n",
          "message": "Parameter '_scope_0' of IElection.getActiveVoteUnitsForGroupByAccount (IElection.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getTotalVotesForGroup(address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getTotalVotesForGroup (IElection.sol#34) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getActiveVotesForGroup(address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getActiveVotesForGroup (IElection.sol#35) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getPendingVotesForGroup(address) external view returns (uint256);\n",
          "message": "Parameter '' of IElection.getPendingVotesForGroup (IElection.sol#36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getGroupEligibility(address) external view returns (bool);\n",
          "message": "Parameter '' of IElection.getGroupEligibility (IElection.sol#37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getGroupEpochRewards(address, uint256, uint256[] calldata)\n",
          "message": "Parameter '' of IElection.getGroupEpochRewards (IElection.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getGroupEpochRewards(address, uint256, uint256[] calldata)\n",
          "message": "Parameter '_scope_0' of IElection.getGroupEpochRewards (IElection.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getGroupEpochRewards(address, uint256, uint256[] calldata)\n",
          "message": "Parameter '_scope_1' of IElection.getGroupEpochRewards (IElection.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\n",
          "message": "Parameter '' of IElection.getGroupsVotedForByAccount (IElection.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function canReceiveVotes(address, uint256) external view returns (bool);\n",
          "message": "Parameter '' of IElection.canReceiveVotes (IElection.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function canReceiveVotes(address, uint256) external view returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.canReceiveVotes (IElection.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function hasActivatablePendingVotes(address, address) external view returns (bool);\n",
          "message": "Parameter '' of IElection.hasActivatablePendingVotes (IElection.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function hasActivatablePendingVotes(address, address) external view returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.hasActivatablePendingVotes (IElection.sol#50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setElectableValidators(uint256, uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.setElectableValidators (IElection.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setElectableValidators(uint256, uint256) external returns (bool);\n",
          "message": "Parameter '_scope_0' of IElection.setElectableValidators (IElection.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.setMaxNumGroupsVotedFor (IElection.sol#54) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setElectabilityThreshold(uint256) external returns (bool);\n",
          "message": "Parameter '' of IElection.setElectabilityThreshold (IElection.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function distributeEpochRewards(address, uint256, address, address) external;\n",
          "message": "Parameter '' of IElection.distributeEpochRewards (IElection.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function distributeEpochRewards(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_0' of IElection.distributeEpochRewards (IElection.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function distributeEpochRewards(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_1' of IElection.distributeEpochRewards (IElection.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function distributeEpochRewards(address, uint256, address, address) external;\n",
          "message": "Parameter '_scope_2' of IElection.distributeEpochRewards (IElection.sol#58) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getElectableValidators() external view returns (uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (address[] memory, uint256[] memory);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}