{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_26"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": "Detected issues with version pragma in IMetaTransactionWallet.sol:\n\t- pragma solidity^0.5.13 (IMetaTransactionWallet.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '_scope_0' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '_scope_1' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '_scope_2' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '_scope_3' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeMetaTransaction(address, uint256, bytes calldata, uint8, bytes32, bytes32)\n",
          "message": "Parameter '_scope_4' of IMetaTransactionWallet.executeMetaTransaction (IMetaTransactionWallet.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeTransaction(address, uint256, bytes calldata) external returns (bytes memory);\n",
          "message": "Parameter '' of IMetaTransactionWallet.executeTransaction (IMetaTransactionWallet.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeTransaction(address, uint256, bytes calldata) external returns (bytes memory);\n",
          "message": "Parameter '_scope_0' of IMetaTransactionWallet.executeTransaction (IMetaTransactionWallet.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function executeTransaction(address, uint256, bytes calldata) external returns (bytes memory);\n",
          "message": "Parameter '_scope_1' of IMetaTransactionWallet.executeTransaction (IMetaTransactionWallet.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address[] calldata,\n",
          "message": "Parameter '' of IMetaTransactionWallet.executeTransactions (IMetaTransactionWallet.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata,\n",
          "message": "Parameter '_scope_0' of IMetaTransactionWallet.executeTransactions (IMetaTransactionWallet.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata,\n",
          "message": "Parameter '_scope_1' of IMetaTransactionWallet.executeTransactions (IMetaTransactionWallet.sol#14) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata\n",
          "message": "Parameter '_scope_2' of IMetaTransactionWallet.executeTransactions (IMetaTransactionWallet.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMetaTransactionDigest(address, uint256, bytes calldata, uint256)\n",
          "message": "Parameter '' of IMetaTransactionWallet.getMetaTransactionDigest (IMetaTransactionWallet.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMetaTransactionDigest(address, uint256, bytes calldata, uint256)\n",
          "message": "Parameter '_scope_0' of IMetaTransactionWallet.getMetaTransactionDigest (IMetaTransactionWallet.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMetaTransactionDigest(address, uint256, bytes calldata, uint256)\n",
          "message": "Parameter '_scope_1' of IMetaTransactionWallet.getMetaTransactionDigest (IMetaTransactionWallet.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getMetaTransactionDigest(address, uint256, bytes calldata, uint256)\n",
          "message": "Parameter '_scope_2' of IMetaTransactionWallet.getMetaTransactionDigest (IMetaTransactionWallet.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address,\n",
          "message": "Parameter '' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256,\n",
          "message": "Parameter '_scope_0' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata,\n",
          "message": "Parameter '_scope_1' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256,\n",
          "message": "Parameter '_scope_2' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint8,\n",
          "message": "Parameter '_scope_3' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32,\n",
          "message": "Parameter '_scope_4' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes32\n",
          "message": "Parameter '_scope_5' of IMetaTransactionWallet.getMetaTransactionSigner (IMetaTransactionWallet.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function setSigner(address) external;\n",
          "message": "Parameter '' of IMetaTransactionWallet.setSigner (IMetaTransactionWallet.sol#34) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) external returns (bytes memory, uint256[] memory);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}