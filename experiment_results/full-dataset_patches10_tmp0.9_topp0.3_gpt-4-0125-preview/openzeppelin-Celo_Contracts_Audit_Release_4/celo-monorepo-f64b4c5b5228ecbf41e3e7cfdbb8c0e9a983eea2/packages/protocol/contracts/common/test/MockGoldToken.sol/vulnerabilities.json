{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": "Detected issues with version pragma in MockGoldToken.sol:\n\t- pragma solidity^0.5.13 (MockGoldToken.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint256) external pure returns (bool) {\n",
          "message": "Parameter '' of MockGoldToken.transfer (MockGoldToken.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint256) external pure returns (bool) {\n",
          "message": "Parameter '_scope_0' of MockGoldToken.transfer (MockGoldToken.sol#18) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint256) external pure returns (bool) {\n",
          "message": "Parameter '' of MockGoldToken.transferFrom (MockGoldToken.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint256) external pure returns (bool) {\n",
          "message": "Parameter '_scope_0' of MockGoldToken.transferFrom (MockGoldToken.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint256) external pure returns (bool) {\n",
          "message": "Parameter '_scope_1' of MockGoldToken.transferFrom (MockGoldToken.sol#22) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ERC20_TRANSFER_SHOULD_THROW",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transfer(address, uint256) external pure returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_ERC20_TRANSFER_SHOULD_THROW",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function transferFrom(address, address, uint256) external pure returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.13;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => uint256) balances;\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}