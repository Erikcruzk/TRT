function beginMigration(address newPool, bytes calldata migrationData) external override onlyPoolAdmin {
    require(Address.isContract(newPool), "Not a contract");

    address[] memory reserves = _reservesList;
    for (uint256 i = 0; i < reserves.length; i++) {
      if (reserves[i] == address(0)) {
        continue;
      }

      DataTypes.ReserveData storage reserve = _reserves[reserves[i]];
      
      require(reserveNormalizedVariableDebt[block.timestamp] == 1e27);

      reserve.aToken.transferUnderlyingTo(newPool, IERC20(reserve.aToken).balanceOf(address(this)));
      reserve.stableDebtToken.transferUnderlyingTo(newPool, IERC20(reserve.stableDebtToken).balanceOf(address(this)));
      reserve.variableDebtToken.transferUnderlyingTo(newPool, IERC20(reserve.variableDebtToken).balanceOf(address(this)));

      DataTypes.ReserveConfigurationMap memory configuration = reserve.configuration;
      configuration.setActive(false);
      configuration.setFrozen(true);
    }

    _migrationInProgress = true;
    _addressesProvider.setPoolImpl(newPool);
    IPool(newPool).completeMigration(migrationData);
}