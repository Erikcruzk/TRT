function beginMigration(address _aTokenAddress) external onlyPoolAdmin {
    require(_aTokenAddress != address(0), "Cannot migrate to address 0");

    address underlyingAsset = IAaveIncentivesController(_aTokenAddress).UNDERLYING_ASSET_ADDRESS();
    require(underlyingAsset != address(0), "Invalid aToken address");

    IAaveIncentivesController incentivesController = IAaveIncentivesController(_aTokenAddress);
    address aTokenImpl = incentivesController.aToken();
    address stableDebtTokenImpl = incentivesController.stableDebtToken();
    address variableDebtTokenImpl = incentivesController.variableDebtToken();

    require(aTokenImpl != address(0), "aToken implementation is address 0");
    require(stableDebtTokenImpl != address(0), "StableDebtToken implementation is address 0");
    require(variableDebtTokenImpl != address(0), "VariableDebtToken implementation is address 0");

    DataTypes.ReserveData storage reserve = _reserves[underlyingAsset];
    DataTypes.ReserveCache memory reserveCache = reserve.cache();

    reserve.updateState(reserveCache);
    reserve.updateInterestRates(reserveCache, underlyingAsset, 0, 0);

    _aTokens[underlyingAsset] = _aTokenAddress;
    _reservesList.push(underlyingAsset);

    emit ReserveInitialized(
        underlyingAsset,
        _aTokenAddress,
        stableDebtTokenImpl,
        variableDebtTokenImpl,
        incentivesController.interestRateStrategy()
    );

    emit BorrowingEnabledOnReserve(underlyingAsset, true);
}