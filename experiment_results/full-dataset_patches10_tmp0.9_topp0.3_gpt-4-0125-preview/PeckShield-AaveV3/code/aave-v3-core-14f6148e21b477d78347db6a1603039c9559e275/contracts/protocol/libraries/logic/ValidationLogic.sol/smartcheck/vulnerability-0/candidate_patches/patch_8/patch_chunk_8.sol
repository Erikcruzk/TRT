function beginMigration(address migrator) external override onlyPoolAdmin {
    require(address(migrator) != address(0), "LP:INVALID_MIGRATOR_ADDRESS");
    _migrator = migrator;
    for (uint256 i = 0; i < _reserves.length(); i++) {
      address asset = _reserves[i];
      DataTypes.ReserveData storage reserve = _reservesData[asset];
      address aTokenAddress = reserve.aTokenAddress;
      IAToken aToken = IAToken(aTokenAddress);
      uint256 liquidityIndex = reserve.getNormalizedIncome();
      aToken.beginMigration(migrator, liquidityIndex);
    }
    IACLManager aclManager = IACLManager(IPoolAddressesProvider(_addressesProvider).getACLManager());
    aclManager.grantRole(aclManager.LIQUIDITY_CONTROLLER(), migrator);
    aclManager.grantRole(aclManager.POOL_ADMIN(), migrator);
    aclManager.grantRole(aclManager.RISK_ADMIN(), migrator);
    aclManager.grantRole(aclManager.FLASH_BORROWER_ROLE(), migrator);
    aclManager.grantRole(aclManager.BRIDGE_ROLE(), migrator);
    aclManager.grantRole(aclManager.ASSET_LISTING_ROLE(), migrator);
  }