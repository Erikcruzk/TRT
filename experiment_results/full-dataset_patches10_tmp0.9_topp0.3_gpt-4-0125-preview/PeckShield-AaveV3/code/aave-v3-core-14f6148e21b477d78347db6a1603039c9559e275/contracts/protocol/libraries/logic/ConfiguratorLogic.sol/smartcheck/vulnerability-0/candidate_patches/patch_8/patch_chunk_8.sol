function beginMigration(address targetPoolAddress) external override onlyPoolAdmin {
    require(migrated == false, Errors.LPCM_MIGRATION_NOT_FINISHED);
    require(targetPoolAddress != address(0), Errors.LPCM_TARGET_POOL_ADDRESS_INVALID);

    address[] memory reserves = pool.getReservesList();
    address[] memory atokens = new address[](reserves.length);
    address[] memory sTokens = new address[](reserves.length);
    address[] memory vTokens = new address[](reserves.length);

    for (uint256 i = 0; i < reserves.length; i++) {
        DataTypes.ReserveData memory reserveData = pool.getReserveData(reserves[i]);

        atokens[i] = reserveData.aTokenAddress;
        sTokens[i] = reserveData.stableDebtTokenAddress;
        vTokens[i] = reserveData.variableDebtTokenAddress;

        // Transfer the ownership of the AToken, StableDebtToken and VariableDebtToken to the new Pool
        IInitializableAToken(reserveData.aTokenAddress).transferUnderlyingTo(targetPoolAddress);
        IInitializableDebtToken(reserveData.stableDebtTokenAddress).transferUnderlyingTo(targetPoolAddress);
        IInitializableDebtToken(reserveData.variableDebtTokenAddress).transferUnderlyingTo(targetPoolAddress);
    }

    pool.setPoolPause(true);
    migrated = true;
    emit MigrationStarted(targetPoolAddress, atokens, sTokens, vTokens);
}