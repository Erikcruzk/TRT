function beginMigration() external override onlyOwner {
    require(!migrationStarted, "MIGRATION_ALREADY_BEGUN");
    migrationStarted = true;

    address[] memory reserves = pool.getReservesList();
    for (uint256 i = 0; i < reserves.length; i++) {
        DataTypes.ReserveData memory reserveData = pool.getReserveData(reserves[i]);

        // Emitting event for each reserve with current configuration data
        emit ReserveDataMigrated(
            reserves[i],
            reserveData.liquidityIndex,
            reserveData.variableBorrowIndex,
            reserveData.currentLiquidityRate,
            reserveData.currentVariableBorrowRate,
            reserveData.currentStableBorrowRate,
            reserveData.lastUpdateTimestamp,
            reserveData.aTokenAddress,
            reserveData.stableDebtTokenAddress,
            reserveData.variableDebtTokenAddress,
            reserveData.interestRateStrategyAddress,
            reserveData.id
        );
    }

    address[] memory atokens = pool.getATokensList();
    for (uint256 i = 0; i < atokens.length; i++) {
        address underlyingAsset = IAToken(atokens[i]).UNDERLYING_ASSET_ADDRESS();
        address incentivesController = IAToken(atokens[i]).getIncentivesController();
        uint256 assetDecimals = IERC20Detailed(underlyingAsset).decimals();
        string memory assetName = IERC20Detailed(underlyingAsset).name();
        string memory assetSymbol = IERC20Detailed(underlyingAsset).symbol();

        // Emitting event for each AToken with its configuration data
        emit ATokenDataMigrated(
            atokens[i],
            underlyingAsset,
            incentivesController,
            assetDecimals,
            assetName,
            assetSymbol
        );
    }
}