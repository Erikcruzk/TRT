{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 1549,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 1558,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 1570,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "init-variables-with-default-value",
          "vulnerability_from_line": 1609,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private lastInitializedRevision = 0;\n",
          "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2575,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(IPool pool)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2576,
          "vulnerability_to_line": null,
          "vulnerability_code": "    IncentivizedERC20(pool.getAddressesProvider(), 'ATOKEN_IMPL', 'ATOKEN_IMPL', 0)\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2577,
          "vulnerability_to_line": null,
          "vulnerability_code": "  {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2578,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _pool = pool;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2579,
          "vulnerability_to_line": null,
          "vulnerability_code": "  }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 2869,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(IPool pool) AToken(pool) {}\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1517,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(this).balance >= amount, 'Address: insufficient balance');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1521,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(success, 'Address: unable to send value, recipient may have reverted');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1566,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1567,
          "vulnerability_to_line": null,
          "vulnerability_code": "      (value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1568,
          "vulnerability_to_line": null,
          "vulnerability_code": "      'SafeERC20: approve from non-zero to non-zero allowance'\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1569,
          "vulnerability_to_line": null,
          "vulnerability_code": "    );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1574,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(token).isContract(), 'SafeERC20: call to non-contract');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1578,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(success, 'SafeERC20: low-level call failed');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1583,
          "vulnerability_to_line": null,
          "vulnerability_code": "      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1621,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1622,
          "vulnerability_to_line": null,
          "vulnerability_code": "      initializing || isConstructor() || revision > lastInitializedRevision,\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1623,
          "vulnerability_to_line": null,
          "vulnerability_code": "      'Contract instance has already been initialized'\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 1624,
          "vulnerability_to_line": null,
          "vulnerability_code": "    );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2792,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(owner != address(0), 'INVALID_OWNER');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2794,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(block.timestamp <= deadline, 'INVALID_EXPIRATION');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 2803,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(owner == ecrecover(digest, v, r, s), 'INVALID_SIGNATURE');\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1521,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(success, 'Address: unable to send value, recipient may have reverted');\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1566,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1567,
          "vulnerability_to_line": null,
          "vulnerability_code": "      (value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1568,
          "vulnerability_to_line": null,
          "vulnerability_code": "      'SafeERC20: approve from non-zero to non-zero allowance'\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1569,
          "vulnerability_to_line": null,
          "vulnerability_code": "    );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1583,
          "vulnerability_to_line": null,
          "vulnerability_code": "      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1621,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1622,
          "vulnerability_to_line": null,
          "vulnerability_code": "      initializing || isConstructor() || revision > lastInitializedRevision,\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1623,
          "vulnerability_to_line": null,
          "vulnerability_code": "      'Contract instance has already been initialized'\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 1624,
          "vulnerability_to_line": null,
          "vulnerability_code": "    );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 2554,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 public constant ATOKEN_REVISION = 0x1;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_ERC20_APPROVE",
          "vulnerability_from_line": 2410,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function approve(address spender, uint256 amount) external virtual override returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1609,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256 private lastInitializedRevision = 0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1614,
          "vulnerability_to_line": null,
          "vulnerability_code": "  bool private initializing;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 1665,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint256[50] private ______gap;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 2330,
          "vulnerability_to_line": null,
          "vulnerability_code": "  mapping(address => mapping(address => uint256)) private _allowances;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 2332,
          "vulnerability_to_line": null,
          "vulnerability_code": "  string private _name;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 2333,
          "vulnerability_to_line": null,
          "vulnerability_code": "  string private _symbol;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 2334,
          "vulnerability_to_line": null,
          "vulnerability_code": "  uint8 private _decimals;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 1487,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isContract(address account) internal view returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 1650,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function isConstructor() private view returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 986,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 1690,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (uint256, uint256)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 1708,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (uint256, uint256)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 1887,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 1954,
          "vulnerability_to_line": null,
          "vulnerability_code": "    returns (\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 1549,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 1558,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 1570,
          "vulnerability_to_line": null,
          "vulnerability_code": "    callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 1577,
          "vulnerability_to_line": null,
          "vulnerability_code": "    (bool success, bytes memory returndata) = address(token).call(data);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_USING_INLINE_ASSEMBLY",
          "vulnerability_from_line": 1494,
          "vulnerability_to_line": null,
          "vulnerability_code": "    assembly {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 943,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function flashLoan(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 965,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function flashLoanSimple(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1516,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2106,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function initialize(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2338,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2575,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(IPool pool)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2582,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function initialize(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2869,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(IPool pool) AToken(pool) {}\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 945,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address[] calldata assets,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 946,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata amounts,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 946,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata amounts,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 947,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata modes,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 947,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256[] calldata modes,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 948,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address onBehalfOf,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 949,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata params,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 949,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata params,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 950,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint16 referralCode\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 969,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata params,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 970,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint16 referralCode\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1516,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1516,
          "vulnerability_to_line": null,
          "vulnerability_code": "  function sendValue(address payable recipient, uint256 amount) internal {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1517,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(this).balance >= amount, 'Address: insufficient balance');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1517,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(this).balance >= amount, 'Address: insufficient balance');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1517,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(this).balance >= amount, 'Address: insufficient balance');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1517,
          "vulnerability_to_line": null,
          "vulnerability_code": "    require(address(this).balance >= amount, 'Address: insufficient balance');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1520,
          "vulnerability_to_line": null,
          "vulnerability_code": "    (bool success, ) = recipient.call{value: amount}('');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1520,
          "vulnerability_to_line": null,
          "vulnerability_code": "    (bool success, ) = recipient.call{value: amount}('');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 1520,
          "vulnerability_to_line": null,
          "vulnerability_code": "    (bool success, ) = recipient.call{value: amount}('');\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2111,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2112,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2112,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2113,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata params\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2587,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenName,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2588,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2588,
          "vulnerability_to_line": null,
          "vulnerability_code": "    string calldata aTokenSymbol,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2589,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bytes calldata params\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2590,
          "vulnerability_to_line": null,
          "vulnerability_code": "  ) external override initializer {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2591,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 chainId = block.chainid;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2593,
          "vulnerability_to_line": null,
          "vulnerability_code": "    DOMAIN_SEPARATOR = keccak256(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2593,
          "vulnerability_to_line": null,
          "vulnerability_code": "    DOMAIN_SEPARATOR = keccak256(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2594,
          "vulnerability_to_line": null,
          "vulnerability_code": "      abi.encode(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2596,
          "vulnerability_to_line": null,
          "vulnerability_code": "        keccak256(bytes(aTokenName)),\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2596,
          "vulnerability_to_line": null,
          "vulnerability_code": "        keccak256(bytes(aTokenName)),\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2597,
          "vulnerability_to_line": null,
          "vulnerability_code": "        keccak256(EIP712_REVISION),\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2598,
          "vulnerability_to_line": null,
          "vulnerability_code": "        chainId,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2599,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address(this)\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2603,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _setName(aTokenName);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2604,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _setSymbol(aTokenSymbol);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2605,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _setDecimals(aTokenDecimals);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2607,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _treasury = treasury;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2608,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _underlyingAsset = underlyingAsset;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2609,
          "vulnerability_to_line": null,
          "vulnerability_code": "    _incentivesController = incentivesController;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2611,
          "vulnerability_to_line": null,
          "vulnerability_code": "    emit Initialized(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2611,
          "vulnerability_to_line": null,
          "vulnerability_code": "    emit Initialized(\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2613,
          "vulnerability_to_line": null,
          "vulnerability_code": "      address(_pool),\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2614,
          "vulnerability_to_line": null,
          "vulnerability_code": "      treasury,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2615,
          "vulnerability_to_line": null,
          "vulnerability_code": "      address(incentivesController),\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2616,
          "vulnerability_to_line": null,
          "vulnerability_code": "      aTokenDecimals,\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 2618,
          "vulnerability_to_line": null,
          "vulnerability_code": "      aTokenSymbol,\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "Solc experienced a fatal error"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}