function beginMigration(address _newProvider, bool _migrateUsers) external initializer {
  require(_newProvider != address(0), 'beginMigration: cannot migrate to address 0');
  require(msg.sender == _admin(), 'Ownable: caller is not the owner');

  if (_migrateUsers) {
    _pool = IPool(_addressesProvider.getPool());
    address[] memory reserves = _pool.getReservesList();

    for (uint256 i = 0; i < reserves.length; i++) {
      if (reserves[i] != address(0)) {
        DataTypes.ReserveData memory reserve = _pool.getReserveData(reserves[i]);
        emit ReserveDataMigrated(
          reserves[i],
          reserve.aTokenAddress,
          reserve.stableDebtTokenAddress,
          reserve.variableDebtTokenAddress,
          _newProvider
        );
      }
    }

    address[] memory aTokens = _aTokensList;

    for (uint256 i = 0; i < aTokens.length; i++) {
      if (aTokens[i] != address(0)) {
        emit ATokenUpgraded(aTokens[i], _newProvider);
      }
    }
  }

  IPoolAddressesProvider(_addressesProvider).setPoolImpl(_newProvider);
}