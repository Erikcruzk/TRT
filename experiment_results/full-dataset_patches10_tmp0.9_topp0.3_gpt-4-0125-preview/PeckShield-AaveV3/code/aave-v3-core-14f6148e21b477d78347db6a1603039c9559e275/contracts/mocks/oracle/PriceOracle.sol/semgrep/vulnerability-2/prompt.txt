
This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

semgrep Analysis Results
Vulnerability: oracle-price-update-not-restricted found in the following piece of code:

    emit AssetPriceUpdated(_asset, _price, block.timestamp);


The contract is among the source code below:




pragma solidity 0.8.7;






interface IPriceOracle {
  




  function getAssetPrice(address asset) external view returns (uint256);

  




  function setAssetPrice(address asset, uint256 price) external;
}




pragma solidity 0.8.7;

contract PriceOracle is IPriceOracle {
  mapping(address => uint256) prices;
  uint256 ethPriceUsd;

  event AssetPriceUpdated(address _asset, uint256 _price, uint256 timestamp);
  event EthPriceUpdated(uint256 _price, uint256 timestamp);

  function getAssetPrice(address _asset) external view override returns (uint256) {
    return prices[_asset];
  }

  function setAssetPrice(address _asset, uint256 _price) external override {
    prices[_asset] = _price;
    emit AssetPriceUpdated(_asset, _price, block.timestamp);
  }

  function getEthUsdPrice() external view returns (uint256) {
    return ethPriceUsd;
  }

  function setEthUsdPrice(uint256 _price) external {
    ethPriceUsd = _price;
    emit EthPriceUpdated(_price, block.timestamp);
  }
}

DO NOT return natural language for explanations, only the Solidity code of the vulnerable function (if it is a function otherwise whole contract). 
"""