{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 255,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 260,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-abi-encodecall-instead-of-encodewithselector",
          "vulnerability_from_line": 265,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n",
          "message": "To guarantee arguments type safety it is recommended to use `abi.encodeCall` instead of `abi.encodeWithSelector`."
        },
        {
          "name": "use-ownable2step",
          "vulnerability_from_line": 386,
          "vulnerability_to_line": null,
          "vulnerability_code": "contract TokenVesting is Ownable {\n",
          "message": "By demanding that the receiver of the owner permissions actively accept via a contract call of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the contract ownership from accidentally being transferred  to an address that cannot handle it."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 317,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor () internal {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 318,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = msg.sender;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 319,
          "vulnerability_to_line": null,
          "vulnerability_code": "        emit OwnershipTransferred(address(0), _owner);\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 320,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 423,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 424,
          "vulnerability_to_line": null,
          "vulnerability_code": "        // solhint-disable-next-line max-line-length\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 426,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(duration > 0, \"TokenVesting: duration is 0\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 427,
          "vulnerability_to_line": null,
          "vulnerability_code": "        // solhint-disable-next-line max-line-length\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 428,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 429,
          "vulnerability_to_line": null,
          "vulnerability_code": "\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _beneficiary = beneficiary;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "non-payable-constructor",
          "vulnerability_from_line": 431,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _revocable = revocable;\n",
          "message": "Consider making costructor payable to save gas."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 109,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c >= a, \"SafeMath: addition overflow\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 124,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(b <= a, \"SafeMath: subtraction overflow\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 166,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(b > 0, \"SafeMath: division by zero\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 185,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(b != 0, \"SafeMath: modulo by zero\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require((value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 253,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"SafeERC20: approve from non-zero to non-zero allowance\"\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 283,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 287,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(success, \"SafeERC20: low-level call failed\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 291,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 333,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(isOwner(), \"Ownable: caller is not the owner\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 423,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 426,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(duration > 0, \"TokenVesting: duration is 0\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 428,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 493,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 508,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(_revocable, \"TokenVesting: cannot revoke\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-custom-error-not-require",
          "vulnerability_from_line": 509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_revoked[address(token)], \"TokenVesting: token already revoked\");\n",
          "message": "Consider using custom errors as they are more gas efficient while allowing developers  to describe the error in detail using NatSpec."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 148,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(c / a == b, \"SafeMath: multiplication overflow\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 252,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require((value == 0) || (token.allowance(address(this), spender) == 0),\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 253,
          "vulnerability_to_line": null,
          "vulnerability_code": "            \"SafeERC20: approve from non-zero to non-zero allowance\"\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 254,
          "vulnerability_to_line": null,
          "vulnerability_code": "        );\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 291,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 368,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 423,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 428,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        },
        {
          "name": "use-short-revert-string",
          "vulnerability_from_line": 509,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(!_revoked[address(token)], \"TokenVesting: token already revoked\");\n",
          "message": "Shortening revert strings to fit in 32 bytes will decrease gas costs for deployment and  gas costs when the revert condition has been met."
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_26"
      ],
      "vulnerability_findings": [
        {
          "name": "constant-function",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": 217,
          "vulnerability_code": "    function isContract(address account) internal view returns (bool) {\n\n        // This method relies in extcodesize, which returns 0 for contracts in\n\n        // construction, since the code is only stored at the end of the\n\n        // constructor execution.\n\n\n\n        uint256 size;\n\n        // solhint-disable-next-line no-inline-assembly\n\n        assembly { size := extcodesize(account) }\n\n        return size > 0;\n",
          "message": "Address.isContract (TokenVesting.sol#208-217) is declared view but contains assembly code\n"
        },
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 490,
          "vulnerability_to_line": 500,
          "vulnerability_code": "    function release(IERC20 token) public {\n\n        uint256 unreleased = _releasableAmount(token);\n\n\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n\n\n        _released[address(token)] = _released[address(token)].add(unreleased);\n\n\n\n        token.safeTransfer(_beneficiary, unreleased);\n\n\n\n        emit TokensReleased(address(token), unreleased);\n",
          "message": "Reentrancy in TokenVesting.release (TokenVesting.sol#490-500):\n\tExternal calls:\n\t- unreleased = _releasableAmount(token) (TokenVesting.sol#491)\n\tState variables written after the call(s):\n\t- _released (TokenVesting.sol#495)\n"
        },
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 507,
          "vulnerability_to_line": 521,
          "vulnerability_code": "    function revoke(IERC20 token) public onlyOwner {\n\n        require(_revocable, \"TokenVesting: cannot revoke\");\n\n        require(!_revoked[address(token)], \"TokenVesting: token already revoked\");\n\n\n\n        uint256 balance = token.balanceOf(address(this));\n\n\n\n        uint256 unreleased = _releasableAmount(token);\n\n        uint256 refund = balance.sub(unreleased);\n\n\n\n        _revoked[address(token)] = true;\n\n\n\n        token.safeTransfer(owner(), refund);\n\n\n\n        emit TokenVestingRevoked(address(token));\n",
          "message": "Reentrancy in TokenVesting.revoke (TokenVesting.sol#507-521):\n\tExternal calls:\n\t- balance = token.balanceOf(address(this)) (TokenVesting.sol#511)\n\t- unreleased = _releasableAmount(token) (TokenVesting.sol#513)\n\tState variables written after the call(s):\n\t- _revoked (TokenVesting.sol#516)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n",
          "message": "TokenVesting.constructor.beneficiary (local variable @ TokenVesting.sol#422) shadows:\n\t- TokenVesting.beneficiary (function @ TokenVesting.sol#440-442)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n",
          "message": "TokenVesting.constructor.start (local variable @ TokenVesting.sol#422) shadows:\n\t- TokenVesting.start (function @ TokenVesting.sol#454-456)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n",
          "message": "TokenVesting.constructor.duration (local variable @ TokenVesting.sol#422) shadows:\n\t- TokenVesting.duration (function @ TokenVesting.sol#461-463)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n",
          "message": "TokenVesting.constructor.revocable (local variable @ TokenVesting.sol#422) shadows:\n\t- TokenVesting.revocable (function @ TokenVesting.sol#468-470)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 422,
          "vulnerability_to_line": 435,
          "vulnerability_code": "    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n\n        require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\");\n\n        // solhint-disable-next-line max-line-length\n\n        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n\n        require(duration > 0, \"TokenVesting: duration is 0\");\n\n        // solhint-disable-next-line max-line-length\n\n        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n\n\n\n        _beneficiary = beneficiary;\n\n        _revocable = revocable;\n\n        _duration = duration;\n\n        _cliff = start.add(cliffDuration);\n\n        _start = start;\n",
          "message": "TokenVesting.constructor (TokenVesting.sol#422-435) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(start.add(duration) > block.timestamp,TokenVesting: final time is before current time) (TokenVesting.sol#428)\n"
        },
        {
          "name": "timestamp",
          "vulnerability_from_line": 535,
          "vulnerability_to_line": 546,
          "vulnerability_code": "    function _vestedAmount(IERC20 token) private view returns (uint256) {\n\n        uint256 currentBalance = token.balanceOf(address(this));\n\n        uint256 totalBalance = currentBalance.add(_released[address(token)]);\n\n\n\n        if (block.timestamp < _cliff) {\n\n            return 0;\n\n        } else if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {\n\n            return totalBalance;\n\n        } else {\n\n            return totalBalance.mul(block.timestamp.sub(_start)).div(_duration);\n\n        }\n",
          "message": "TokenVesting._vestedAmount (TokenVesting.sol#535-546) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= _start.add(_duration) || _revoked[address(token)] (TokenVesting.sol#541-545)\n\t- block.timestamp < _cliff (TokenVesting.sol#539-545)\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": 217,
          "vulnerability_code": "    function isContract(address account) internal view returns (bool) {\n\n        // This method relies in extcodesize, which returns 0 for contracts in\n\n        // construction, since the code is only stored at the end of the\n\n        // constructor execution.\n\n\n\n        uint256 size;\n\n        // solhint-disable-next-line no-inline-assembly\n\n        assembly { size := extcodesize(account) }\n\n        return size > 0;\n",
          "message": "Address.isContract uses assembly (TokenVesting.sol#208-217)\n\t- TokenVesting.sol#215\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 351,
          "vulnerability_to_line": 354,
          "vulnerability_code": "    function renounceOwnership() public onlyOwner {\n\n        emit OwnershipTransferred(_owner, address(0));\n\n        _owner = address(0);\n",
          "message": "Ownable.renounceOwnership (TokenVesting.sol#351-354) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 360,
          "vulnerability_to_line": 362,
          "vulnerability_code": "    function transferOwnership(address newOwner) public onlyOwner {\n\n        _transferOwnership(newOwner);\n",
          "message": "Ownable.transferOwnership (TokenVesting.sol#360-362) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 440,
          "vulnerability_to_line": 442,
          "vulnerability_code": "    function beneficiary() public view returns (address) {\n\n        return _beneficiary;\n",
          "message": "TokenVesting.beneficiary (TokenVesting.sol#440-442) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 447,
          "vulnerability_to_line": 449,
          "vulnerability_code": "    function cliff() public view returns (uint256) {\n\n        return _cliff;\n",
          "message": "TokenVesting.cliff (TokenVesting.sol#447-449) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 454,
          "vulnerability_to_line": 456,
          "vulnerability_code": "    function start() public view returns (uint256) {\n\n        return _start;\n",
          "message": "TokenVesting.start (TokenVesting.sol#454-456) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 461,
          "vulnerability_to_line": 463,
          "vulnerability_code": "    function duration() public view returns (uint256) {\n\n        return _duration;\n",
          "message": "TokenVesting.duration (TokenVesting.sol#461-463) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 468,
          "vulnerability_to_line": 470,
          "vulnerability_code": "    function revocable() public view returns (bool) {\n\n        return _revocable;\n",
          "message": "TokenVesting.revocable (TokenVesting.sol#468-470) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 475,
          "vulnerability_to_line": 477,
          "vulnerability_code": "    function released(address token) public view returns (uint256) {\n\n        return _released[token];\n",
          "message": "TokenVesting.released (TokenVesting.sol#475-477) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 482,
          "vulnerability_to_line": 484,
          "vulnerability_code": "    function revoked(address token) public view returns (bool) {\n\n        return _revoked[token];\n",
          "message": "TokenVesting.revoked (TokenVesting.sol#482-484) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 490,
          "vulnerability_to_line": 500,
          "vulnerability_code": "    function release(IERC20 token) public {\n\n        uint256 unreleased = _releasableAmount(token);\n\n\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n\n\n        _released[address(token)] = _released[address(token)].add(unreleased);\n\n\n\n        token.safeTransfer(_beneficiary, unreleased);\n\n\n\n        emit TokensReleased(address(token), unreleased);\n",
          "message": "TokenVesting.release (TokenVesting.sol#490-500) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 507,
          "vulnerability_to_line": 521,
          "vulnerability_code": "    function revoke(IERC20 token) public onlyOwner {\n\n        require(_revocable, \"TokenVesting: cannot revoke\");\n\n        require(!_revoked[address(token)], \"TokenVesting: token already revoked\");\n\n\n\n        uint256 balance = token.balanceOf(address(this));\n\n\n\n        uint256 unreleased = _releasableAmount(token);\n\n        uint256 refund = balance.sub(unreleased);\n\n\n\n        _revoked[address(token)] = true;\n\n\n\n        token.safeTransfer(owner(), refund);\n\n\n\n        emit TokenVestingRevoked(address(token));\n",
          "message": "TokenVesting.revoke (TokenVesting.sol#507-521) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": "Detected issues with version pragma in TokenVesting.sol:\n\t- pragma solidity^0.5.0 (TokenVesting.sol#3): it allows old versions\n\t- pragma solidity^0.5.0 (TokenVesting.sol#82): it allows old versions\n\t- pragma solidity^0.5.0 (TokenVesting.sol#192): it allows old versions\n\t- pragma solidity^0.5.0 (TokenVesting.sol#222): it allows old versions\n\t- pragma solidity^0.5.0 (TokenVesting.sol#298): it allows old versions\n\t- pragma solidity^0.5.0 (TokenVesting.sol#376): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 274,
          "vulnerability_to_line": 293,
          "vulnerability_code": "    function callOptionalReturn(IERC20 token, bytes memory data) private {\n\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n\n        // we're implementing it ourselves.\n\n\n\n        // A Solidity high level call has three parts:\n\n        //  1. The target address is checked to verify it contains contract code\n\n        //  2. The call itself is made, and success asserted\n\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n\n        // solhint-disable-next-line max-line-length\n\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n\n\n        // solhint-disable-next-line avoid-low-level-calls\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n\n        require(success, \"SafeERC20: low-level call failed\");\n\n\n\n        if (returndata.length > 0) { // Return data is optional\n\n            // solhint-disable-next-line max-line-length\n\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n\n        }\n",
          "message": "Low level call in SafeERC20.callOptionalReturn (TokenVesting.sol#274-293):\n\t-(success,returndata) = address(token).call(data) TokenVesting.sol#286\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 367,
          "vulnerability_to_line": 371,
          "vulnerability_code": "    function _transferOwnership(address newOwner) internal {\n\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\n        emit OwnershipTransferred(_owner, newOwner);\n\n        _owner = newOwner;\n",
          "message": "Function 'Ownable._transferOwnership' (TokenVesting.sol#367-371) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 527,
          "vulnerability_to_line": 529,
          "vulnerability_code": "    function _releasableAmount(IERC20 token) private view returns (uint256) {\n\n        return _vestedAmount(token).sub(_released[address(token)]);\n",
          "message": "Function 'TokenVesting._releasableAmount' (TokenVesting.sol#527-529) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 535,
          "vulnerability_to_line": 546,
          "vulnerability_code": "    function _vestedAmount(IERC20 token) private view returns (uint256) {\n\n        uint256 currentBalance = token.balanceOf(address(this));\n\n        uint256 totalBalance = currentBalance.add(_released[address(token)]);\n\n\n\n        if (block.timestamp < _cliff) {\n\n            return 0;\n\n        } else if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {\n\n            return totalBalance;\n\n        } else {\n\n            return totalBalance.mul(block.timestamp.sub(_start)).div(_duration);\n\n        }\n",
          "message": "Function 'TokenVesting._vestedAmount' (TokenVesting.sol#535-546) is not in mixedCase\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_ADDRESS_HARDCODED",
          "vulnerability_from_line": 353,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _owner = address(0);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 82,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 192,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 222,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 298,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 376,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 310,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _owner;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 400,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _beneficiary;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 403,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _cliff;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 404,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _start;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 405,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 private _duration;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 407,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool private _revocable;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 409,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => uint256) private _released;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA",
          "vulnerability_from_line": 410,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => bool) private _revoked;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 236,
          "vulnerability_to_line": null,
          "vulnerability_code": "    using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SAFEMATH",
          "vulnerability_from_line": 393,
          "vulnerability_to_line": null,
          "vulnerability_code": "    using SafeMath for uint256;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_NOT_BE_VIEW",
          "vulnerability_from_line": 208,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isContract(address account) internal view returns (bool) {\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 240,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 244,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 255,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 260,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 265,
          "vulnerability_to_line": null,
          "vulnerability_code": "        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n",
          "message": null
        },
        {
          "name": "SOLIDITY_UNCHECKED_CALL",
          "vulnerability_from_line": 286,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, bytes memory returndata) = address(token).call(data);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}