{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_24"
      ],
      "vulnerability_findings": [
        {
          "name": "solc-version",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.16;\n",
          "message": "Detected issues with version pragma in IronControllerInterface.sol:\n\t- pragma solidity^0.5.16 (IronControllerInterface.sol#3): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function enterMarkets(address[] calldata RTokens) external returns (uint[] memory);\n",
          "message": "Parameter 'RTokens' of IronControllerInterface.enterMarkets (IronControllerInterface.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function exitMarket(address RToken) external returns (uint);\n",
          "message": "Parameter 'RToken' of IronControllerInterface.exitMarket (IronControllerInterface.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintAllowed(address RToken, address minter, uint mintAmount) external returns (uint);\n",
          "message": "Parameter 'RToken' of IronControllerInterface.mintAllowed (IronControllerInterface.sol#16) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function mintVerify(address RToken, address minter, uint mintAmount, uint mintTokens) external;\n",
          "message": "Parameter 'RToken' of IronControllerInterface.mintVerify (IronControllerInterface.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemAllowed(address RToken, address redeemer, uint redeemTokens) external returns (uint);\n",
          "message": "Parameter 'RToken' of IronControllerInterface.redeemAllowed (IronControllerInterface.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function redeemVerify(address RToken, address redeemer, uint redeemAmount, uint redeemTokens) external;\n",
          "message": "Parameter 'RToken' of IronControllerInterface.redeemVerify (IronControllerInterface.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function borrowAllowed(address RToken, address borrower, uint borrowAmount) external returns (uint);\n",
          "message": "Parameter 'RToken' of IronControllerInterface.borrowAllowed (IronControllerInterface.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function borrowVerify(address RToken, address borrower, uint borrowAmount) external;\n",
          "message": "Parameter 'RToken' of IronControllerInterface.borrowVerify (IronControllerInterface.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RToken,\n",
          "message": "Parameter 'RToken' of IronControllerInterface.repayBorrowAllowed (IronControllerInterface.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RToken,\n",
          "message": "Parameter 'RToken' of IronControllerInterface.repayBorrowVerify (IronControllerInterface.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenBorrowed,\n",
          "message": "Parameter 'RTokenBorrowed' of IronControllerInterface.liquidateBorrowAllowed (IronControllerInterface.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenCollateral,\n",
          "message": "Parameter 'RTokenCollateral' of IronControllerInterface.liquidateBorrowAllowed (IronControllerInterface.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenBorrowed,\n",
          "message": "Parameter 'RTokenBorrowed' of IronControllerInterface.liquidateBorrowVerify (IronControllerInterface.sol#44) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenCollateral,\n",
          "message": "Parameter 'RTokenCollateral' of IronControllerInterface.liquidateBorrowVerify (IronControllerInterface.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenCollateral,\n",
          "message": "Parameter 'RTokenCollateral' of IronControllerInterface.seizeAllowed (IronControllerInterface.sol#52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenBorrowed,\n",
          "message": "Parameter 'RTokenBorrowed' of IronControllerInterface.seizeAllowed (IronControllerInterface.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenCollateral,\n",
          "message": "Parameter 'RTokenCollateral' of IronControllerInterface.seizeVerify (IronControllerInterface.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenBorrowed,\n",
          "message": "Parameter 'RTokenBorrowed' of IronControllerInterface.seizeVerify (IronControllerInterface.sol#59) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferAllowed(address RToken, address src, address dst, uint transfeRTokens) external returns (uint);\n",
          "message": "Parameter 'RToken' of IronControllerInterface.transferAllowed (IronControllerInterface.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferVerify(address RToken, address src, address dst, uint transfeRTokens) external;\n",
          "message": "Parameter 'RToken' of IronControllerInterface.transferVerify (IronControllerInterface.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenBorrowed,\n",
          "message": "Parameter 'RTokenBorrowed' of IronControllerInterface.liquidateCalculateSeizeTokens (IronControllerInterface.sol#70) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address RTokenCollateral,\n",
          "message": "Parameter 'RTokenCollateral' of IronControllerInterface.liquidateCalculateSeizeTokens (IronControllerInterface.sol#71) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool public constant isIronController = true;\n",
          "message": "Constant 'IronControllerInterface.isIronController' (IronControllerInterface.sol#7) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_PRAGMAS_VERSION",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.16;\n",
          "message": null
        },
        {
          "name": "SOLIDITY_SHOULD_RETURN_STRUCT",
          "vulnerability_from_line": 72,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint repayAmount) external view returns (uint, uint);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "execution failed"
      ],
      "vulnerability_findings": []
    },
    "mythril": {
      "successfull_analysis": false,
      "errors": [
        "input files do not contain any valid contracts"
      ],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    }
  }
}