function hasEnoughValidSignatures(
    bytes _message,
    uint8[] _vs,
    bytes32[] _rs,
    bytes32[] _ss,
    IBridgeValidators _validatorContract) internal view {
    require(isMessageValid(_message));
    uint256 requiredSignatures = _validatorContract.requiredSignatures();
    require(_vs.length >= requiredSignatures);
    bytes32 hash = hashMessage(_message);
    address[] memory encounteredAddresses = new address[](requiredSignatures);

    uint256 validSignaturesCount = 0;
    for (uint256 i = 0; i < _vs.length; i++) {
        address recoveredAddress = ecrecover(hash, _vs[i], _rs[i], _ss[i]);
        if (_validatorContract.isValidator(recoveredAddress) && !addressArrayContains(encounteredAddresses, recoveredAddress)) {
            encounteredAddresses[validSignaturesCount] = recoveredAddress;
            validSignaturesCount++;
            if (validSignaturesCount >= requiredSignatures) {
                return;
            }
        }
    }
    require(validSignaturesCount >= requiredSignatures);
}