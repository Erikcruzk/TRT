function hasEnoughValidSignatures(
    bytes _message,
    uint8[] _vs,
    bytes32[] _rs,
    bytes32[] _ss,
    IBridgeValidators _validatorContract) internal view {
    require(isMessageValid(_message));
    uint256 requiredSignatures = _validatorContract.requiredSignatures();
    require(_vs.length >= requiredSignatures);
    bytes32 hash = hashMessage(_message);
    address[] memory encounteredAddresses = new address[](requiredSignatures);

    for (uint256 i = 0; i < requiredSignatures; i++) {
        address recoveredAddress = ecrecover(hash, _vs[i], _rs[i], _ss[i]);
        require(_validatorContract.isValidator(recoveredAddress), "Invalid validator");
        for (uint256 j = 0; j < i; j++) {
            if (encounteredAddresses[j] == recoveredAddress) {
                revert("Validator signature encountered twice");
            }
        }
        encounteredAddresses[i] = recoveredAddress;
    }
}