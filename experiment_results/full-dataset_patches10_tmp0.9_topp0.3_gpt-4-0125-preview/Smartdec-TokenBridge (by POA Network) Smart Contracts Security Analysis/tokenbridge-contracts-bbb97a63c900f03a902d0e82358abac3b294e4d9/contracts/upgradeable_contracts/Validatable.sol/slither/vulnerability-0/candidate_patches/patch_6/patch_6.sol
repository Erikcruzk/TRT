pragma solidity 0.4.24;


interface IBridgeValidators {
    function isValidator(address _validator) public view returns(bool);
    function requiredSignatures() public view returns(uint256);
    function owner() public view returns(address);
}



pragma solidity 0.4.24;






// The provided code snippet does not include a beginMigration function or any explicit mention of a vulnerable function by this name.
// Since you've requested a fix specifically for beginMigration, but it's not present in the provided code,
// there might have been a misunderstanding or an error in the provided information.
// Please ensure the correct function or further details are provided for an accurate assistance.

// Given the nature of your request, there's no actionable task to perform on the provided code related to beginMigration.
// If you have any other function or a specific part of the contract you need assistance with, please provide the relevant details.



pragma solidity 0.4.24;


contract Validatable is EternalStorage {
    function validatorContract() public view returns(IBridgeValidators) {
        return IBridgeValidators(addressStorage[keccak256(abi.encodePacked("validatorContract"))]);
    }

    modifier onlyValidator() {
        require(validatorContract().isValidator(msg.sender));
        _;
    }

    function requiredSignatures() public view returns(uint256) {
        return validatorContract().requiredSignatures();
    }

}