{
  "smartbugs_completed": true,
  "analyzer_results": {
    "semgrep": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "uninitialized-state",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(bytes32 => address) internal addressStorage;\n",
          "message": "EternalStorage.addressStorage (Validatable.sol#25) is never initialized. It is used in:\n\t- validatorContract (Validatable.sol#38-40)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isValidator(address _validator) public view returns(bool);\n",
          "message": "IBridgeValidators.isValidator (Validatable.sol#7) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function requiredSignatures() public view returns(uint256);\n",
          "message": "IBridgeValidators.requiredSignatures (Validatable.sol#8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function owner() public view returns(address);\n",
          "message": "IBridgeValidators.owner (Validatable.sol#9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": 49,
          "vulnerability_code": "    function requiredSignatures() public view returns(uint256) {\n\n        return validatorContract().requiredSignatures();\n",
          "message": "Validatable.requiredSignatures (Validatable.sol#47-49) should be declared external\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(bytes32 => uint256) internal uintStorage;\n",
          "message": "EternalStorage.uintStorage (Validatable.sol#23) is never used in Validatable\nEternalStorage.stringStorage (Validatable.sol#24) is never used in Validatable\nEternalStorage.bytesStorage (Validatable.sol#26) is never used in Validatable\nEternalStorage.boolStorage (Validatable.sol#27) is never used in Validatable\nEternalStorage.intStorage (Validatable.sol#28) is never used in Validatable\n"
        }
      ]
    },
    "smartcheck": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function isValidator(address _validator) public view returns(bool);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function requiredSignatures() public view returns(uint256);\n",
          "message": null
        },
        {
          "name": "SOLIDITY_VISIBILITY",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function owner() public view returns(address);\n",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return validatorContract().requiredSignatures();\n",
          "message": null
        },
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return IBridgeValidators(addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))]);\n",
          "message": null
        }
      ]
    },
    "mythril": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}