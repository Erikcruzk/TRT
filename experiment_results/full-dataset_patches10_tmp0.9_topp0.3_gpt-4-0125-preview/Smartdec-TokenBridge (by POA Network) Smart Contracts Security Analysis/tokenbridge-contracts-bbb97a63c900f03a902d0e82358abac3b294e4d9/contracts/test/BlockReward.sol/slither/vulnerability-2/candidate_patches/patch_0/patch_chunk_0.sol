function addBridgeNativeFeeReceivers(uint256 _amount) external {
    feeAmount = _amount;
    uint256 feePerValidator = _amount.div(validatorList.length);

    uint256 randomValidatorIndex;
    uint256 diff = _amount.sub(feePerValidator.mul(validatorList.length));
    if (diff > 0) {
        randomValidatorIndex = random(validatorList.length);
    }

    address[] memory receiverTemp = new address[](validatorList.length);
    uint256[] memory amountsTemp = new uint256[](validatorList.length);

    for (uint256 i = 0; i < validatorList.length; i++) {
        uint256 feeToDistribute = feePerValidator;
        if (diff > 0 && randomValidatorIndex == i) {
            feeToDistribute = feeToDistribute.add(diff);
        }
        receiverTemp[i] = validatorList[i];
        amountsTemp[i] = feeToDistribute;
    }

    for (uint256 j = 0; j < receiverTemp.length; j++) {
        this.addExtraReceiver(amountsTemp[j], receiverTemp[j]);
    }
}