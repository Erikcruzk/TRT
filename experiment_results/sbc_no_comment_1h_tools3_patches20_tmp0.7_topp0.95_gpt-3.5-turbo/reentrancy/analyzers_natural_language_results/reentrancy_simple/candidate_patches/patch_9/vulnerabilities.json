{
  "smartbugs_completed": "Duplicate patch. Smartbugs skipped",
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "        userBalance[msg.sender] += msg.value;",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 9,
          "vulnerability_code": "    function getBalance(address u) constant returns (uint) {\n        return userBalance[u];",
          "message": "Reentrance.getBalance (patch_9.sol#7-9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function addToBalance() payable {\n        userBalance[msg.sender] += msg.value;",
          "message": "Reentrance.addToBalance (patch_9.sol#11-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function withdrawBalance() {\n        require(!locked[msg.sender]); // Check if the account is locked\n        locked[msg.sender] = true; // Lock the account\n\n        uint balance = userBalance[msg.sender];\n        userBalance[msg.sender] = 0; // Update the balance before external call\n        msg.sender.transfer(balance); // Transfer the balance to the sender\n\n        locked[msg.sender] = false; // Unlock the account",
          "message": "Reentrance.withdrawBalance (patch_9.sol#15-24) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.15;",
          "message": "Detected issues with version pragma in patch_9.sol:\n\t- pragma solidity^0.4.15 (patch_9.sol#1): it allows old versions\n"
        }
      ]
    }
  }
}