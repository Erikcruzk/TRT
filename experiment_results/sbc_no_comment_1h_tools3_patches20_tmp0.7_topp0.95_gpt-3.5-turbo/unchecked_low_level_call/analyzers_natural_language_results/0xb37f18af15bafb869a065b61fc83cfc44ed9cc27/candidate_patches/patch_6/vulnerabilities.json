{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "External Call To User-Supplied Address (SWC 107)",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bool success = _target.call.value(_value)(); // added check for return value",
          "message": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107"
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function() public payable {\n        depositsCount++;",
          "message": "SimpleWallet.fallback (patch_6.sol#12-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function withdrawAll() public onlyOwner {\n        require(address(this).balance > 0); // added check to ensure balance is greater than 0\n        withdraw(address(this).balance);",
          "message": "SimpleWallet.withdrawAll (patch_6.sol#16-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function sendMoney(address _target, uint _value) public onlyOwner {\n        require(_target != address(0)); // added check to ensure target address is not null\n        require(_value > 0); // added check to ensure value is greater than 0\n        bool success = _target.call.value(_value)(); // added check for return value\n        require(success); // added check for success of call",
          "message": "SimpleWallet.sendMoney (patch_6.sol#26-31) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function sendMoney(address _target, uint _value) public onlyOwner {\n        require(_target != address(0)); // added check to ensure target address is not null\n        require(_value > 0); // added check to ensure value is greater than 0\n        bool success = _target.call.value(_value)(); // added check for return value\n        require(success); // added check for success of call",
          "message": "Low level call in SimpleWallet.sendMoney (patch_6.sol#26-31):\n\t-success = _target.call.value(_value)() patch_6.sol#29\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint _value) public onlyOwner {",
          "message": "Parameter '_value' of SimpleWallet.withdraw (patch_6.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sendMoney(address _target, uint _value) public onlyOwner {",
          "message": "Parameter '_target' of SimpleWallet.sendMoney (patch_6.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function sendMoney(address _target, uint _value) public onlyOwner {",
          "message": "Parameter '_value' of SimpleWallet.sendMoney (patch_6.sol#26) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "        depositsCount++;",
          "message": null
        },
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bool success = _target.call.value(_value)(); // added check for return value",
          "message": null
        },
        {
          "name": "Transaction-Ordering Dependence (TOD)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    }
  }
}