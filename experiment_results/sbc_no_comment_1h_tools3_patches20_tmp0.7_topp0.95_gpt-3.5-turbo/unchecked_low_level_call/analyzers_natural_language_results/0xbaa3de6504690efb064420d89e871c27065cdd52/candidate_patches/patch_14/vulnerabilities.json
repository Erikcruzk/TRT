{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function transferOwner(address _owner) public onlyOwner {\n        owner = _owner;",
          "message": "Proxy.transferOwner (patch_14.sol#14-16) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target.call.value(msg.value)(data));",
          "message": "Proxy.proxy (patch_14.sol#18-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function() public payable {\n        deposit();",
          "message": "VaultProxy.fallback (patch_14.sol#26-28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": 40,
          "vulnerability_code": "    function withdraw(uint256 amount) public onlyOwner {\n        require(amount > 0 && deposits[msg.sender] >= amount);\n        deposits[msg.sender] -= amount;\n        msg.sender.transfer(amount);",
          "message": "VaultProxy.withdraw (patch_14.sol#36-40) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;",
          "message": "Detected issues with version pragma in patch_14.sol:\n\t- pragma solidity^0.4.23 (patch_14.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target.call.value(msg.value)(data));",
          "message": "Low level call in Proxy.proxy (patch_14.sol#18-20):\n\t-require(bool)(target.call.value(msg.value)(data)) patch_14.sol#19\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferOwner(address _owner) public onlyOwner {",
          "message": "Parameter '_owner' of Proxy.transferOwner (patch_14.sol#14) is not in mixedCase\n"
        }
      ]
    }
  }
}