{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_2"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function transfer() returns (bool) {\n        CentraToken token = CentraToken(0x96a65609a7b84e8842732deb08f56c3e21ac6f8a);\n        address c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\n        uint256 k = 1;\n\n        require(token.transfer(c2, k));\n\n        return true;",
          "message": "Centra4.transfer (patch_3.sol#8-16) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.13;",
          "message": "Detected issues with version pragma in patch_3.sol:\n\t- pragma solidity^0.4.13 (patch_3.sol#1): it allows old versions\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}