/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.0;

contract SendBack {
    mapping(address => uint) userBalances;

    function withdrawBalance() {
        uint amountToWithdraw = userBalances[msg.sender];
        userBalances[msg.sender] = 0;

        msg.sender.send(amountToWithdraw);
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Mythril-0.23.15 Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 10:
        msg.sender.send(amountToWithdraw);
///  Message:The return value of a message call is not checked.
///   External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
///   Classification: SWC-104



/// Repaired Solidity Smart Contract