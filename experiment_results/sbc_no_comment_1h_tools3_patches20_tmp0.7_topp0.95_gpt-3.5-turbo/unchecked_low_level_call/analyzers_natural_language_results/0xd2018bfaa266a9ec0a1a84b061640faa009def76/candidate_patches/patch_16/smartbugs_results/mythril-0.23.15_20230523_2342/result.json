{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "Pie",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108338061005c5f395ff3fe608060405260043610610042575f3560e01c80633ccfd60b1461004d5780636ce8bc4d146100635780636d4ce63c1461007f578063b4a99a4e1461008957610049565b3661004957005b5f80fd5b348015610058575f80fd5b506100616100b3565b005b61007d60048036038101906100789190610565565b6101a5565b005b6100876102e1565b005b348015610094575f80fd5b5061009d61039b565b6040516100aa91906105ce565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013790610667565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156101a2573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610229906106f5565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff163483604051610259919061077f565b5f6040518083038185875af1925050503d805f8114610293576040519150601f19603f3d011682016040523d82523d5f602084013e610298565b606091505b50509050806102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d3906107df565b60405180910390fd5b505050565b670de0b6b3a7640000341115610399575f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610353573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610397573d5f803e3d5ffd5b505b565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103f8826103cf565b9050919050565b610408816103ee565b8114610412575f80fd5b50565b5f81359050610423816103ff565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61047782610431565b810181811067ffffffffffffffff8211171561049657610495610441565b5b80604052505050565b5f6104a86103be565b90506104b4828261046e565b919050565b5f67ffffffffffffffff8211156104d3576104d2610441565b5b6104dc82610431565b9050602081019050919050565b828183375f83830152505050565b5f610509610504846104b9565b61049f565b9050828152602081018484840111156105255761052461042d565b5b6105308482856104e9565b509392505050565b5f82601f83011261054c5761054b610429565b5b813561055c8482602086016104f7565b91505092915050565b5f806040838503121561057b5761057a6103c7565b5b5f61058885828601610415565b925050602083013567ffffffffffffffff8111156105a9576105a86103cb565b5b6105b585828601610538565b9150509250929050565b6105c8816103ee565b82525050565b5f6020820190506105e15f8301846105bf565b92915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2077697468647261772066756e645f8201527f732e000000000000000000000000000000000000000000000000000000000000602082015250565b5f6106516022836105e7565b915061065c826105f7565b604082019050919050565b5f6020820190508181035f83015261067e81610645565b9050919050565b7f4f6e6c7920746865206f776e65722063616e206578656375746520636f6d6d615f8201527f6e64732e00000000000000000000000000000000000000000000000000000000602082015250565b5f6106df6024836105e7565b91506106ea82610685565b604082019050919050565b5f6020820190508181035f83015261070c816106d3565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610744578082015181840152602081019050610729565b5f8484015250505050565b5f61075982610713565b610763818561071d565b9350610773818560208601610727565b80840191505092915050565b5f61078a828461074f565b915081905092915050565b7f4c6f77206c6576656c2063616c6c206661696c65642e000000000000000000005f82015250565b5f6107c96016836105e7565b91506107d482610795565b602082019050919050565b5f6020820190508181035f8301526107f6816107bd565b905091905056fea26469706673582212204686108e13a92873cc96abf5c770faf3d904ba53d155c05563a4fe194342348764736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "experiment_results/sbc_no_comment_1h_tools3_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/unchecked_low_level_call/analyzers_natural_language_results/0xd2018bfaa266a9ec0a1a84b061640faa009def76/candidate_patches/patch_16/patch_16.sol",
            "function": "constructor",
            "line": 6,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
