{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function sendTo(address receiver, uint amount) public {\n        require(tx.origin == owner);\n        receiver.transfer(amount);",
          "message": "MyContract.sendTo (mycontract.sol#10-13) sends eth to arbitrary user\n\tDangerous calls:\n\t- receiver.transfer(amount) (mycontract.sol#12)\n"
        },
        {
          "name": "tx-origin",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(tx.origin == owner);",
          "message": "MyContract.sendTo uses tx.origin for authorization:\n\t- require(bool)(tx.origin == owner) (mycontract.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function sendTo(address receiver, uint amount) public {\n        require(tx.origin == owner);\n        receiver.transfer(amount);",
          "message": "MyContract.sendTo (mycontract.sol#10-13) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "    function MyContract() public {\n        owner = msg.sender;",
          "message": "Function 'MyContract.MyContract' (mycontract.sol#6-8) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Dependence on tx.origin (SWC 115)",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(tx.origin == owner);",
          "message": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115"
        }
      ]
    }
  }
}