{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "controlled-delegatecall",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function forward(address callee, bytes _data) public {\n        require(callee.delegatecall(_data));",
          "message": "Proxy.forward (proxy.sol#10-12) uses delegatecall to a input-controlled function id\n\trequire(bool)(callee.delegatecall(_data)) (proxy.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function forward(address callee, bytes _data) public {\n        require(callee.delegatecall(_data));",
          "message": "Proxy.forward (proxy.sol#10-12) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function forward(address callee, bytes _data) public {\n        require(callee.delegatecall(_data));",
          "message": "Low level call in Proxy.forward (proxy.sol#10-12):\n\t-require(bool)(callee.delegatecall(_data)) proxy.sol#11\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function forward(address callee, bytes _data) public {",
          "message": "Parameter '_data' of Proxy.forward (proxy.sol#10) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function forward(address callee, bytes _data) public {",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Delegatecall to user-supplied address (SWC 112)",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(callee.delegatecall(_data));",
          "message": "The contract delegates execution to another contract with a user-supplied address.\nThe smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf.\nClassification: SWC-112"
        }
      ]
    }
  }
}