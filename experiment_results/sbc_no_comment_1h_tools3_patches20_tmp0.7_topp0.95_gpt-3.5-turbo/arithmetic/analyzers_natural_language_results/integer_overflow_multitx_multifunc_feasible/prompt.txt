/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.23;

contract IntegerOverflowMultiTxMultiFuncFeasible {
    uint256 private initialized = 0;
    uint256 public count = 1;

    function init() public {
        initialized = 1;
    }

    function run(uint256 input) {
        if (initialized == 0) {
            return;
        }

        count -= input;
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Oyente Analysis Results
/// 1.1. Vulnerability: arithmetic at Line 16:
        count -= input;


/// 2. Mythril-0.23.15 Analysis Results
/// 2.1. Vulnerability: arithmetic at Line 16:
        count -= input;
///  Message:The arithmetic operator can underflow.
///   It is possible to cause an integer overflow or underflow in the arithmetic operation. 
///   Classification: SWC-101



/// Repaired Solidity Smart Contract