{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(balances[msg.sender] >= _value);\n\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        return true;",
          "message": "Token.transfer (patch_4.sol#11-17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balances[_owner];",
          "message": "Token.balanceOf (patch_4.sol#19-21) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;",
          "message": "Detected issues with version pragma in patch_4.sol:\n\t- pragma solidity^0.4.18 (patch_4.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 9,
          "vulnerability_code": "    function Token(uint256 _initialSupply) public {\n        balances[msg.sender] = totalSupply = _initialSupply;",
          "message": "Function 'Token.Token' (patch_4.sol#7-9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Token(uint256 _initialSupply) public {",
          "message": "Parameter '_initialSupply' of Token.Token (patch_4.sol#7) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) public returns (bool) {",
          "message": "Parameter '_to' of Token.transfer (patch_4.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address _to, uint256 _value) public returns (bool) {",
          "message": "Parameter '_value' of Token.transfer (patch_4.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function balanceOf(address _owner) public view returns (uint256 balance) {",
          "message": "Parameter '_owner' of Token.balanceOf (patch_4.sol#19) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[_to] += _value;",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}