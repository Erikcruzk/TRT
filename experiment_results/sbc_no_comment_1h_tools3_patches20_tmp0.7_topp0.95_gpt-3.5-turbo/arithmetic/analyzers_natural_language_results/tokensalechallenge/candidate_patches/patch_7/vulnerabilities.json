{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function isComplete() public view returns (bool) {\n        return address(this).balance >= 1 ether;",
          "message": "TokenSaleChallenge.isComplete (patch_7.sol#12-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function buy(uint256 numTokens) public payable {\n        require(msg.value == numTokens * PRICE_PER_TOKEN);\n        require(numTokens > 0);\n\n        uint256 tokensToBuy = numTokens;\n        uint256 totalPrice = tokensToBuy * PRICE_PER_TOKEN;\n\n        require(totalPrice / tokensToBuy == PRICE_PER_TOKEN);\n\n        balanceOf[msg.sender] += tokensToBuy;",
          "message": "TokenSaleChallenge.buy (patch_7.sol#16-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 40,
          "vulnerability_code": "    function sell(uint256 numTokens) public {\n        require(balanceOf[msg.sender] >= numTokens);\n        require(numTokens > 0);\n\n        uint256 tokensToSell = numTokens;\n        uint256 totalValue = tokensToSell * PRICE_PER_TOKEN;\n\n        balanceOf[msg.sender] -= tokensToSell;\n\n        require(this.balance >= totalValue);\n\n        msg.sender.transfer(totalValue);",
          "message": "TokenSaleChallenge.sell (patch_7.sol#28-40) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.21;",
          "message": "Detected issues with version pragma in patch_7.sol:\n\t- pragma solidity^0.4.21 (patch_7.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 10,
          "vulnerability_code": "    function TokenSaleChallenge() public payable {\n        require(msg.value == 1 ether);\n        balanceOf[msg.sender] = 0;",
          "message": "Function 'TokenSaleChallenge.TokenSaleChallenge' (patch_7.sol#7-10) is not in mixedCase\n"
        }
      ]
    }
  }
}