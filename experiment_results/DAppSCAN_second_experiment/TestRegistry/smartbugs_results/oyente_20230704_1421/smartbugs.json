{
    "docker": {
        "command": null,
        "detach": true,
        "entrypoint": "'/sb/bin/do_solidity.sh' '/sb/TestRegistry.sol' '3600' '/sb/bin' '0'",
        "image": "smartbugs/oyente:480e725",
        "user": 0,
        "volumes": {
            "/var/folders/pc/1ws5qy153vdgg93k7ngyjmkh0000gn/T/tmp92rhr2xy": {
                "bind": "/sb",
                "mode": "rw"
            }
        }
    },
    "filename": "experiment_results/DAppSCAN_second_experiment/TestRegistry/TestRegistry.sol",
    "platform": {
        "cpu": "Apple M1 Pro",
        "python": "3.10.4.final.0 (64 bit)",
        "release": "22.5.0",
        "smartbugs": "2.0.7",
        "system": "Darwin",
        "version": "Darwin Kernel Version 22.5.0: Mon Apr 24 20:52:24 PDT 2023; root:xnu-8796.121.2~5/RELEASE_ARM64_T6000"
    },
    "result": {
        "duration": 16.7606201171875,
        "exit_code": 0,
        "logs": "result.log",
        "output": null,
        "start": 1688480482.270787
    },
    "runid": "20230704_1421",
    "solc": "0.4.26",
    "tool": {
        "bin": "scripts",
        "command": null,
        "cpu_quota": null,
        "entrypoint": "'$BIN/do_solidity.sh' '$FILENAME' '$TIMEOUT' '$BIN' '$MAIN'",
        "id": "oyente",
        "image": "smartbugs/oyente:480e725",
        "info": "Oyente runs on symbolic execution, determines which inputs cause which program branches to execute, to find potential security vulnerabilities. Oyente works directly with EVM bytecode without access high level representation and does not provide soundness nor completeness.",
        "mem_limit": null,
        "mode": "solidity",
        "name": "Oyente",
        "origin": "https://github.com/smartbugs/oyente",
        "output": null,
        "parser": "parser.py",
        "solc": true,
        "version": "#480e725"
    }
}
