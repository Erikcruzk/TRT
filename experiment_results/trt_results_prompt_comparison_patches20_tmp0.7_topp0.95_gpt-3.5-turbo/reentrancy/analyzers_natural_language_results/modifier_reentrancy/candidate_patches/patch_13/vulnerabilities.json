{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function airDrop() public hasNoBalance supportsToken {\n        tokenBalance[msg.sender] += 20;",
          "message": "ModifierEntrancy.airDrop (patch_13.sol#12-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 46,
          "vulnerability_code": "    function call(address token) public {\n        ModifierEntrancy(token).airDrop();",
          "message": "attack.call (patch_13.sol#44-46) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(address _bank) public {",
          "message": "Parameter '_bank' of ModifierEntrancy. (patch_13.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 47,
          "vulnerability_code": "contract attack {\n    bool hasBeenCalled;\n\n    function supportsToken() external returns (bytes32) {\n        if (!hasBeenCalled) {\n            hasBeenCalled = true;\n            ModifierEntrancy(msg.sender).airDrop();\n        }\n        return keccak256(abi.encodePacked(\"Nu Token\"));\n    }\n\n    function call(address token) public {\n        ModifierEntrancy(token).airDrop();\n    }",
          "message": "Contract 'attack' (patch_13.sol#33-47) is not in CapWords\n"
        }
      ]
    },
    "securify": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function supportsToken() external pure returns (bytes32) {",
          "message": null
        },
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return keccak256(abi.encodePacked(\"Nu Token\"));",
          "message": null
        },
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function supportsToken() external returns (bytes32) {",
          "message": null
        },
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return keccak256(abi.encodePacked(\"Nu Token\"));",
          "message": null
        }
      ]
    }
  }
}