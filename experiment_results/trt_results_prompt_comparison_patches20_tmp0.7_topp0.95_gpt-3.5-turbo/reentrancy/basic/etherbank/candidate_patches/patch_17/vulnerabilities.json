{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function withdrawBalance() public {\n        uint amountToWithdraw = userBalances[msg.sender];\n\n        require(msg.sender.call.value(amountToWithdraw)());\n        userBalances[msg.sender] = 0;",
          "message": "Reentrancy in EtherBank.withdrawBalance (patch_17.sol#14-19):\n\tExternal calls:\n\t- require(bool)(msg.sender.call.value(amountToWithdraw)()) (patch_17.sol#17)\n\tState variables written after the call(s):\n\t- userBalances (patch_17.sol#18)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "    function getBalance(address user) public view returns (uint) {\n        return userBalances[user];",
          "message": "EtherBank.getBalance (patch_17.sol#6-8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function addToBalance() public payable {\n        userBalances[msg.sender] += msg.value;",
          "message": "EtherBank.addToBalance (patch_17.sol#10-12) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function withdrawBalance() public {\n        uint amountToWithdraw = userBalances[msg.sender];\n\n        require(msg.sender.call.value(amountToWithdraw)());\n        userBalances[msg.sender] = 0;",
          "message": "EtherBank.withdrawBalance (patch_17.sol#14-19) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function withdrawBalance() public {\n        uint amountToWithdraw = userBalances[msg.sender];\n\n        require(msg.sender.call.value(amountToWithdraw)());\n        userBalances[msg.sender] = 0;",
          "message": "Low level call in EtherBank.withdrawBalance (patch_17.sol#14-19):\n\t-require(bool)(msg.sender.call.value(amountToWithdraw)()) patch_17.sol#17\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "        userBalances[msg.sender] += msg.value;",
          "message": null
        },
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(msg.sender.call.value(amountToWithdraw)());",
          "message": null
        }
      ]
    },
    "securify": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "DAO",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        },
        {
          "name": "MissingInputValidation",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    }
  }
}