  pragma solidity ^0.4.15;
  
  contract Reentrance {
      mapping(address => uint) userBalance;
  
-     function getBalance(address u) constant returns (uint) {
+     function getBalance(address u) public constant returns (uint) {
?                                   +++++++
          return userBalance[u];
      }
  
-     function addToBalance() payable {
+     function addToBalance() public payable {
?                             +++++++
          userBalance[msg.sender] += msg.value;
      }
  
-     function withdrawBalance() {
+     function withdrawBalance() public {
?                                +++++++
+         uint balanceToWithdraw = userBalance[msg.sender];
+         userBalance[msg.sender] = 0;
-         if (!(msg.sender.call.value(userBalance[msg.sender])())) {
?                                     ^^^^^      ^^^^^^^^ - ^
+         if (!(msg.sender.call.value(balanceToWithdraw)())) {
?                                     ^      ^^^^^^  ^^
-             throw;
+             revert();
          }
-         userBalance[msg.sender] = 0;
      }
- }
+ }