  pragma solidity ^0.4.0;
  
  contract EtherBank {
      mapping(address => uint) userBalances;
+     mapping(address => bool) userWithdrawn;
  
      function getBalance(address user) constant returns (uint) {
          return userBalances[user];
      }
  
-     function addToBalance() {
+     function addToBalance() payable {
?                             ++++++++
          userBalances[msg.sender] += msg.value;
      }
  
      function withdrawBalance() {
+         require(userBalances[msg.sender] > 0);
+         require(!userWithdrawn[msg.sender]);
+         userWithdrawn[msg.sender] = true;
          uint amountToWithdraw = userBalances[msg.sender];
- 
-         if (!(msg.sender.call.value(amountToWithdraw)())) {
-             throw;
-         }
          userBalances[msg.sender] = 0;
+         msg.sender.transfer(amountToWithdraw);
      }
- }
+ }