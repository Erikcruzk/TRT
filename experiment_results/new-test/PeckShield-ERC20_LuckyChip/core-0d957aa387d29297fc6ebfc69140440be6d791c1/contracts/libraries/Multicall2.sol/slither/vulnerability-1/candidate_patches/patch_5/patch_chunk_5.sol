// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

contract Multicall2 {
    struct Call {
        address target;
        bytes callData;
    }
    struct Result {
        bool success;
        bytes returnData;
    }

    function tryAggregate(bool requireSuccess, Call[] memory calls) public returns (Result[] memory returnData) {
        returnData = new Result[](calls.length);
        for(uint256 i = 0; i < calls.length; i++) {
            (bool success, bytes memory ret) = externalCall(calls[i].target, calls[i].callData);

            if (requireSuccess) {
                require(success, "Multicall2 aggregate: call failed");
            }

            returnData[i] = Result(success, ret);
        }
    }

    function externalCall(address destination, bytes memory data) internal returns (bool, bytes memory) {
        (bool success, bytes memory returnData) = destination.call(data);
        return (success, returnData);
    }
}