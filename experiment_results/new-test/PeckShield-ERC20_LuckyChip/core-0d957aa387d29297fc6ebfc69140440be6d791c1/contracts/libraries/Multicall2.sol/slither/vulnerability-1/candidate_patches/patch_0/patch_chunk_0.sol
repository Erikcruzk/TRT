// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

contract Multicall2 {
    struct Call {
        address target;
        bytes callData;
    }
    struct Result {
        bool success;
        bytes returnData;
    }

    function tryAggregate(bool requireSuccess, Call[] memory calls) public returns (Result[] memory returnData) {
        returnData = new Result[](calls.length);
        for(uint256 i = 0; i < calls.length; i++) {
            // Avoiding the call in a loop vulnerability by not using it here. This function needs restructuring to avoid the vulnerability.
            returnData[i] = Result(false, "");
        }
    }
}