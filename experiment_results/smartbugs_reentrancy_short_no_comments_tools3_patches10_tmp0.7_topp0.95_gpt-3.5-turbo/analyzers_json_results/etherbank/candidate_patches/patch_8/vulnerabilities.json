{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "        userBalances[msg.sender] += msg.value;",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (!(msg.sender.call.value(amountToWithdraw)())) { revert(); }",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 6,
          "vulnerability_code": "    function getBalance(address user) public view returns(uint) {  \n        return userBalances[user];",
          "message": "EtherBank.getBalance (patch_8.sol#4-6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 10,
          "vulnerability_code": "    function addToBalance() public payable {  \n        userBalances[msg.sender] += msg.value;",
          "message": "EtherBank.addToBalance (patch_8.sol#8-10) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function withdrawBalance() public {  \n        uint amountToWithdraw = userBalances[msg.sender];\n        userBalances[msg.sender] = 0;\n        if (!(msg.sender.call.value(amountToWithdraw)())) { revert(); }",
          "message": "EtherBank.withdrawBalance (patch_8.sol#12-16) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;",
          "message": "Detected issues with version pragma in patch_8.sol:\n\t- pragma solidity^0.4.0 (patch_8.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function withdrawBalance() public {  \n        uint amountToWithdraw = userBalances[msg.sender];\n        userBalances[msg.sender] = 0;\n        if (!(msg.sender.call.value(amountToWithdraw)())) { revert(); }",
          "message": "Low level call in EtherBank.withdrawBalance (patch_8.sol#12-16):\n\t-! (msg.sender.call.value(amountToWithdraw)()) patch_8.sol#15\n"
        }
      ]
    }
  }
}