{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "            if(msg.sender.call.value(_am)())",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "                LogFile.AddMessage(msg.sender,_am,\"Collect\");",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": null,
          "vulnerability_code": "                acc.balance-=_am;",
          "message": null
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_21"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Reentrancy in W_WALLET.Collect (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#15-28):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#22-26)\n\tState variables written after the call(s):\n\t- Acc (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#24)\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;    ",
          "message": "W_WALLET.MinSum should be constant (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#47)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "W_WALLET.Collect (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#15-28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function() \n    public \n    payable\n    {\n        Put(0);",
          "message": "W_WALLET.fallback (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#30-35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 77,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Log.AddMessage (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#69-77) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Low level call in W_WALLET.Collect (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#15-28):\n\t-msg.sender.call.value(_am)() 0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#22-26\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 52,
          "vulnerability_code": "contract W_WALLET\n{\n    function Put(uint _unlockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime>now?_unlockTime:now;\n        LogFile.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n\n    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n\n    function() \n    public \n    payable\n    {\n        Put(0);\n    }\n\n    struct Holder   \n    {\n        uint unlockTime;\n        uint balance;\n    }\n\n    mapping (address => Holder) public Acc;\n\n    Log LogFile;\n\n    uint public MinSum = 1 ether;    \n\n    function W_WALLET(address log) public{\n        LogFile = Log(log);\n    }",
          "message": "Contract 'W_WALLET' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#3-52) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function Put(uint _unlockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime>now?_unlockTime:now;\n        LogFile.AddMessage(msg.sender,msg.value,\"Put\");",
          "message": "Function 'W_WALLET.Put' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#5-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Put(uint _unlockTime)",
          "message": "Parameter '_unlockTime' of W_WALLET.Put (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#5) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Function 'W_WALLET.Collect' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#15-28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am)",
          "message": "Parameter '_am' of W_WALLET.Collect (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 51,
          "vulnerability_code": "    function W_WALLET(address log) public{\n        LogFile = Log(log);",
          "message": "Function 'W_WALLET.W_WALLET' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#49-51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => Holder) public Acc;",
          "message": "Variable 'W_WALLET.Acc' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Log LogFile;",
          "message": "Variable 'W_WALLET.LogFile' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;    ",
          "message": "Variable 'W_WALLET.MinSum' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 77,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'Log.AddMessage' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#69-77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_adr' of Log.AddMessage (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_val' of Log.AddMessage (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_data' of Log.AddMessage (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'Log.History' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'Log.LastMsg' (0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol#67) is not in mixedCase\n"
        }
      ]
    }
  }
}