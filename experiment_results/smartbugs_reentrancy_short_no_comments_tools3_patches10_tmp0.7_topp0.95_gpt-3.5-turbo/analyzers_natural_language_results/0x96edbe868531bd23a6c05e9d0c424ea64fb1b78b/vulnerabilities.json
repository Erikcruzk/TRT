{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_30"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Reentrancy in PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#49-62):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#56-60)\n\tState variables written after the call(s):\n\t- Acc (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#58)\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if(intitalized)throw;",
          "message": "Deprecated standard detected @ 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#22:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if(intitalized)throw;",
          "message": "Deprecated standard detected @ 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#29:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function SetMinSum(uint _val)\n    public\n    {\n        if(intitalized)throw;\n        MinSum = _val;",
          "message": "PENNY_BY_PENNY.SetMinSum (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#19-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function SetLogFile(address _log)\n    public\n    {\n        if(intitalized)throw;\n        Log = LogFile(_log);",
          "message": "PENNY_BY_PENNY.SetLogFile (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#26-31) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 37,
          "vulnerability_code": "    function Initialized()\n    public\n    {\n        intitalized = true;",
          "message": "PENNY_BY_PENNY.Initialized (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#33-37) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#49-62) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": 69,
          "vulnerability_code": "    function() \n    public \n    payable\n    {\n        Put(0);",
          "message": "PENNY_BY_PENNY.fallback (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#64-69) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": 96,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#88-96) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol:\n\t- pragma solidity^0.4.19 (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Low level call in PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#49-62):\n\t-msg.sender.call.value(_am)() 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#56-60\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 71,
          "vulnerability_code": "contract PENNY_BY_PENNY  \n{\n    struct Holder   \n    {\n        uint unlockTime;\n        uint balance;\n    }\n    \n    mapping (address => Holder) public Acc;\n    \n    uint public MinSum;\n    \n    LogFile Log;\n    \n    bool intitalized;\n    \n    function SetMinSum(uint _val)\n    public\n    {\n        if(intitalized)throw;\n        MinSum = _val;\n    }\n    \n    function SetLogFile(address _log)\n    public\n    {\n        if(intitalized)throw;\n        Log = LogFile(_log);\n    }\n    \n    function Initialized()\n    public\n    {\n        intitalized = true;\n    }\n    \n    function Put(uint _lockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        if(now+_lockTime>acc.unlockTime)acc.unlockTime=now+_lockTime;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");\n    }\n    \n    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }\n    }\n    \n    function() \n    public \n    payable\n    {\n        Put(0);\n    }\n    ",
          "message": "Contract 'PENNY_BY_PENNY' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#3-71) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function SetMinSum(uint _val)\n    public\n    {\n        if(intitalized)throw;\n        MinSum = _val;",
          "message": "Function 'PENNY_BY_PENNY.SetMinSum' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#19-24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetMinSum(uint _val)",
          "message": "Parameter '_val' of PENNY_BY_PENNY.SetMinSum (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function SetLogFile(address _log)\n    public\n    {\n        if(intitalized)throw;\n        Log = LogFile(_log);",
          "message": "Function 'PENNY_BY_PENNY.SetLogFile' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#26-31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetLogFile(address _log)",
          "message": "Parameter '_log' of PENNY_BY_PENNY.SetLogFile (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 37,
          "vulnerability_code": "    function Initialized()\n    public\n    {\n        intitalized = true;",
          "message": "Function 'PENNY_BY_PENNY.Initialized' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#33-37) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": 47,
          "vulnerability_code": "    function Put(uint _lockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        if(now+_lockTime>acc.unlockTime)acc.unlockTime=now+_lockTime;\n        Log.AddMessage(msg.sender,msg.value,\"Put\");",
          "message": "Function 'PENNY_BY_PENNY.Put' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#39-47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Put(uint _lockTime)",
          "message": "Parameter '_lockTime' of PENNY_BY_PENNY.Put (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 62,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                Log.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Function 'PENNY_BY_PENNY.Collect' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#49-62) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am)",
          "message": "Parameter '_am' of PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#49) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => Holder) public Acc;",
          "message": "Variable 'PENNY_BY_PENNY.Acc' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum;",
          "message": "Variable 'PENNY_BY_PENNY.MinSum' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    LogFile Log;",
          "message": "Variable 'PENNY_BY_PENNY.Log' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": 96,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'LogFile.AddMessage' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#88-96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_adr' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#88) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_val' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#88) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 88,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_data' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#88) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 84,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'LogFile.History' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#84) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 86,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'LogFile.LastMsg' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#86) is not in mixedCase\n"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if(now+_lockTime>acc.unlockTime)acc.unlockTime=now+_lockTime;",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if(now+_lockTime>acc.unlockTime)acc.unlockTime=now+_lockTime;",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "            if(msg.sender.call.value(_am)())",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "                Log.AddMessage(msg.sender,_am,\"Collect\");",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "                acc.balance-=_am;",
          "message": null
        }
      ]
    }
  }
}