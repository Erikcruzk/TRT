{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public withdrawalLimit = 1 ether;",
          "message": "EtherStore.withdrawalLimit should be constant (patch_7.sol#5)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function depositFunds() public payable {\n        require(msg.value > 0, \"Deposit amount must be greater than zero.\");\n        balances[msg.sender] = balances[msg.sender] + msg.value;",
          "message": "EtherStore.depositFunds (patch_7.sol#9-12) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function withdrawFunds (uint256 _weiToWithdraw) public {\n        require(balances[msg.sender] >= _weiToWithdraw, \"Insufficient balance.\");\n        require(_weiToWithdraw <= withdrawalLimit, \"Withdrawal amount exceeds limit.\");\n        require(now >= lastWithdrawTime[msg.sender] + 1 weeks, \"Cannot withdraw before 1 week.\");\n        balances[msg.sender] = balances[msg.sender] - _weiToWithdraw;\n        msg.sender.transfer(_weiToWithdraw);\n        lastWithdrawTime[msg.sender] = now;",
          "message": "EtherStore.withdrawFunds (patch_7.sol#14-21) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.26;",
          "message": "Detected issues with version pragma in patch_7.sol:\n\t- pragma solidity^0.4.26 (patch_7.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawFunds (uint256 _weiToWithdraw) public {",
          "message": "Parameter '_weiToWithdraw' of EtherStore.withdrawFunds (patch_7.sol#14) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[msg.sender] = balances[msg.sender] + msg.value;",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(now >= lastWithdrawTime[msg.sender] + 1 weeks, \"Cannot withdraw before 1 week.\");",
          "message": null
        },
        {
          "name": "Time dependency bug",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(now >= lastWithdrawTime[msg.sender] + 1 weeks, \"Cannot withdraw before 1 week.\");",
          "message": null
        }
      ]
    }
  }
}