{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return(keccak256(abi.encodePacked(\"Nu Token\")));",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 15,
          "vulnerability_code": "  function airDrop() hasNoBalance supportsToken  public{\n    tokenBalance[msg.sender] += 20;",
          "message": "ModifierEntrancy.airDrop (patch_0.sol#13-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 46,
          "vulnerability_code": "    function call(address token) public{\n        ModifierEntrancy(token).airDrop();",
          "message": "attack.call (patch_0.sol#44-46) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "  constructor(address _bank) public {",
          "message": "Parameter '_bank' of ModifierEntrancy. (patch_0.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": 47,
          "vulnerability_code": "contract attack{ //An example of a contract that breaks the contract above.\n    bool hasBeenCalled;\n    function supportsToken() external returns(bytes32){\n        if(!hasBeenCalled){\n            hasBeenCalled = true;\n            ModifierEntrancy(msg.sender).airDrop();\n        }\n        return(keccak256(abi.encodePacked(\"Nu Token\")));\n    }\n    function call(address token) public{\n        ModifierEntrancy(token).airDrop();\n    }",
          "message": "Contract 'attack' (patch_0.sol#35-47) is not in CapWords\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "  string constant name = \"Nu Token\";",
          "message": "ModifierEntrancy.name (patch_0.sol#5) is never used in ModifierEntrancy\n"
        }
      ]
    }
  }
}