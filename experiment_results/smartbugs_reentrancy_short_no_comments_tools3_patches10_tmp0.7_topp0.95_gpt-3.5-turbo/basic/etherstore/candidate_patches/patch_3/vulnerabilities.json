{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": false,
      "errors": [
        "Solidity compilation failed"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public withdrawalLimit = 1 ether;",
          "message": "EtherStore.withdrawalLimit should be constant (patch_3.sol#5)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function depositFunds() public payable {\n        balances[msg.sender] += msg.value;",
          "message": "EtherStore.depositFunds (patch_3.sol#9-11) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function withdrawFunds (uint256 _weiToWithdraw) public {\n        require(balances[msg.sender] >= _weiToWithdraw, \"Insufficient balance.\");\n        // limit the withdrawal\n        require(_weiToWithdraw <= withdrawalLimit, \"Withdrawal amount exceeds limit.\");\n        // limit the time allowed to withdraw\n        require(now >= lastWithdrawTime[msg.sender] + 1 weeks, \"You can only withdraw once in a week.\");\n        require(msg.sender.send(_weiToWithdraw), \"Transaction failed.\");\n        balances[msg.sender] -= _weiToWithdraw;\n        lastWithdrawTime[msg.sender] = now;",
          "message": "EtherStore.withdrawFunds (patch_3.sol#13-22) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.0;",
          "message": "Detected issues with version pragma in patch_3.sol:\n\t- pragma solidity^0.5.0 (patch_3.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawFunds (uint256 _weiToWithdraw) public {",
          "message": "Parameter '_weiToWithdraw' of EtherStore.withdrawFunds (patch_3.sol#13) is not in mixedCase\n"
        }
      ]
    }
  }
}