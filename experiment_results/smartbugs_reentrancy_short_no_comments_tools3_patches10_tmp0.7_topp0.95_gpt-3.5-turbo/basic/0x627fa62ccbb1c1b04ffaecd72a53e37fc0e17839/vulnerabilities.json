{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_23"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": 92,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) \n    public\n    onlyOwner\n    payable\n    {\n        if(Holders[_addr]>0)\n        {\n            if(_addr.call.value(_wei)())\n            {\n                Holders[_addr]-=_wei;\n            }\n        }",
          "message": "Reentrancy in TokenBank.WithdrawToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80-92):\n\tExternal calls:\n\t- _addr.call.value(_wei)() (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-90)\n\tState variables written after the call(s):\n\t- Holders (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#89)\n"
        },
        {
          "name": "shadowing-state",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address owner = msg.sender;",
          "message": "Token.owner (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#32) shadows:\n\t- Ownable.owner (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#6)\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "        token.call(bytes4(sha3(\"transfer(address,uint256)\")),to,amount); ",
          "message": "Deprecated standard detected @ 0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#37:\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function changeOwner(address addr)\n    public\n    onlyOwner\n    {\n        newOwner = addr;",
          "message": "Ownable.changeOwner (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#8-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function confirmOwner() \n    public\n    {\n        if(msg.sender==newOwner)\n        {\n            owner=newOwner;\n        }",
          "message": "Ownable.confirmOwner (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#15-22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function initTokenBank()\n    public\n    {\n        owner = msg.sender;\n        MinDeposit = 1 ether;",
          "message": "TokenBank.initTokenBank (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#47-52) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": 58,
          "vulnerability_code": "    function()\n    payable\n    {\n        Deposit();",
          "message": "TokenBank.fallback (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#54-58) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 78,
          "vulnerability_code": "    function WitdrawTokenToHolder(address _to,address _token,uint _amount)\n    public\n    onlyOwner\n    {\n        if(Holders[_to]>0)\n        {\n            Holders[_to]=0;\n            WithdrawToken(_token,_amount,_to);     \n        }",
          "message": "TokenBank.WitdrawTokenToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#69-78) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": 92,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) \n    public\n    onlyOwner\n    payable\n    {\n        if(Holders[_addr]>0)\n        {\n            if(_addr.call.value(_wei)())\n            {\n                Holders[_addr]-=_wei;\n            }\n        }",
          "message": "TokenBank.WithdrawToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80-92) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol:\n\t- pragma solidity^0.4.19 (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function WithdrawToken(address token, uint256 amount,address to)\n    public \n    onlyOwner\n    {\n        token.call(bytes4(sha3(\"transfer(address,uint256)\")),to,amount); ",
          "message": "Low level call in Token.WithdrawToken (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#33-38):\n\t-token.call(bytes4(sha3()(transfer(address,uint256))),to,amount) 0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#37\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": 92,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) \n    public\n    onlyOwner\n    payable\n    {\n        if(Holders[_addr]>0)\n        {\n            if(_addr.call.value(_wei)())\n            {\n                Holders[_addr]-=_wei;\n            }\n        }",
          "message": "Low level call in TokenBank.WithdrawToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80-92):\n\t-_addr.call.value(_wei)() 0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#87-90\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function WithdrawToken(address token, uint256 amount,address to)\n    public \n    onlyOwner\n    {\n        token.call(bytes4(sha3(\"transfer(address,uint256)\")),to,amount); ",
          "message": "Function 'Token.WithdrawToken' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#33-38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 67,
          "vulnerability_code": "    function Deposit() \n    payable\n    {\n        if(msg.value>MinDeposit)\n        {\n            Holders[msg.sender]+=msg.value;\n        }",
          "message": "Function 'TokenBank.Deposit' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#60-67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 78,
          "vulnerability_code": "    function WitdrawTokenToHolder(address _to,address _token,uint _amount)\n    public\n    onlyOwner\n    {\n        if(Holders[_to]>0)\n        {\n            Holders[_to]=0;\n            WithdrawToken(_token,_amount,_to);     \n        }",
          "message": "Function 'TokenBank.WitdrawTokenToHolder' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#69-78) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WitdrawTokenToHolder(address _to,address _token,uint _amount)",
          "message": "Parameter '_to' of TokenBank.WitdrawTokenToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WitdrawTokenToHolder(address _to,address _token,uint _amount)",
          "message": "Parameter '_token' of TokenBank.WitdrawTokenToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WitdrawTokenToHolder(address _to,address _token,uint _amount)",
          "message": "Parameter '_amount' of TokenBank.WitdrawTokenToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": 92,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) \n    public\n    onlyOwner\n    payable\n    {\n        if(Holders[_addr]>0)\n        {\n            if(_addr.call.value(_wei)())\n            {\n                Holders[_addr]-=_wei;\n            }\n        }",
          "message": "Function 'TokenBank.WithdrawToHolder' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80-92) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) ",
          "message": "Parameter '_addr' of TokenBank.WithdrawToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WithdrawToHolder(address _addr, uint _wei) ",
          "message": "Parameter '_wei' of TokenBank.WithdrawToHolder (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#80) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinDeposit;",
          "message": "Variable 'TokenBank.MinDeposit' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => uint) public Holders;",
          "message": "Variable 'TokenBank.Holders' (0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol#44) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "        token.call(bytes4(sha3(\"transfer(address,uint256)\")),to,amount); ",
          "message": null
        },
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 37,
          "vulnerability_to_line": null,
          "vulnerability_code": "        token.call(bytes4(sha3(\"transfer(address,uint256)\")),to,amount); ",
          "message": null
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "            Holders[msg.sender]+=msg.value;",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 87,
          "vulnerability_to_line": null,
          "vulnerability_code": "            if(_addr.call.value(_wei)())",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 89,
          "vulnerability_to_line": null,
          "vulnerability_code": "                Holders[_addr]-=_wei;",
          "message": null
        }
      ]
    }
  }
}