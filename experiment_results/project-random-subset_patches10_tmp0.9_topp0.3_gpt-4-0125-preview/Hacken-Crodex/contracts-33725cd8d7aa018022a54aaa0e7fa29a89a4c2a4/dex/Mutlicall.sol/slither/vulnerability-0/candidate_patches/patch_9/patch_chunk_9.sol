function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {
    blockNumber = block.number;
    returnData = new bytes[](calls.length);
    for(uint256 i = 0; i < calls.length; i++) {
        // Separate the data preparation and the call execution to avoid reentrancy issues
        address target = calls[i].target;
        bytes memory callData = calls[i].callData;
        (bool success, bytes memory ret) = target.call(callData); // Ensure no state changes before external call
        require(success);
        returnData[i] = ret;
    }
}