function unLock() external mustApprover nonReentrant {
    uint256 lockBalance = approverLockBalances[msg.sender];
    require(lockBalance > 0, "No lock balance available");
    AccountData storage data = accounts[msg.sender];
    require(data.WorkAddresses.length == 0, "Work addresses not empty");

    // Prevents re-entrancy by setting user's lock balance to 0 before external call
    approverLockBalances[msg.sender] = 0;

    delete accounts[msg.sender];
    personsAddress[msg.sender] = false;

    for (uint256 x = 0; x < allPersons.length; x++) {
        if (allPersons[x] == msg.sender) {
            delete allPersons[x];
        }
    }

    // External call made after state changes
    require(argonToken.transfer(msg.sender, lockBalance), "Transfer failed");
}