// This function has been corrected for reentrancy vulnerability by ensuring 
// the state is updated before external calls to prevent reentry attacks.

function withdraw(uint256 amount)
    public
    nonReentrant
    updateReward(msg.sender)
{
    require(amount > 0);

    _totalSupply = _totalSupply.sub(amount);

    CDEXRanking.remove(_balances[msg.sender], msg.sender);

    _balances[msg.sender] = _balances[msg.sender].sub(amount);

    if(_balances[msg.sender] == 0) {
        totalMembers -= 1;
    } else {
        CDEXRanking.insert(_balances[msg.sender], msg.sender);
    }

    // Ensure state changes are made before calling external contract
    emit Withdrawn(msg.sender, amount);

    // SWC-Unchecked Call Return Value: The call return value is not checked
    require(CDEXToken.transfer(msg.sender, amount), "Token transfer failed");
}