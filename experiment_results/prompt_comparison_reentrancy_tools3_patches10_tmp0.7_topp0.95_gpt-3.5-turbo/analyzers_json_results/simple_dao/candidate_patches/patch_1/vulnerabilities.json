{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 10,
          "vulnerability_code": "    function donate(address to) public payable {\n        require(!frozenAccount[to]);\n        credit[to] += msg.value;",
          "message": "SimpleDAO.donate (patch_1.sol#7-10) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function withdraw(uint amount) public {\n        require(!frozenAccount[msg.sender]);\n        require(credit[msg.sender] >= amount);\n        credit[msg.sender] -= amount;\n        msg.sender.transfer(amount);",
          "message": "SimpleDAO.withdraw (patch_1.sol#12-17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function queryCredit(address to) public view returns (uint) {\n        return credit[to];",
          "message": "SimpleDAO.queryCredit (patch_1.sol#19-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function freezeAccount(address account) public {\n        require(msg.sender == address(0x123)); // Only the owner can freeze an account\n        frozenAccount[account] = true;",
          "message": "SimpleDAO.freezeAccount (patch_1.sol#23-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function unfreezeAccount(address account) public {\n        require(msg.sender == address(0x123)); // Only the owner can unfreeze an account\n        frozenAccount[account] = false;",
          "message": "SimpleDAO.unfreezeAccount (patch_1.sol#28-31) should be declared external\n"
        }
      ]
    }
  }
}