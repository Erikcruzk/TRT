{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_13"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function setMinSum(uint256 _val) public {\n        require(!initialized);\n        minSum = _val;",
          "message": "AccuralDeposit.setMinSum (patch_6.sol#12-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function setLogFile(LogFile _log) public {\n        require(!initialized);\n        log = _log;",
          "message": "AccuralDeposit.setLogFile (patch_6.sol#17-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function initialize() public {\n        initialized = true;",
          "message": "AccuralDeposit.initialize (patch_6.sol#22-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function collect(uint256 _am) public payable {\n        if (balances[msg.sender] >= minSum && balances[msg.sender] >= _am) {\n            if (msg.sender.send(_am)) {\n                balances[msg.sender] -= _am;\n                log.addMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "AccuralDeposit.collect (patch_6.sol#31-38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function() public payable {\n        deposit();",
          "message": "AccuralDeposit.fallback (patch_6.sol#40-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": 63,
          "vulnerability_code": "    function addMessage(address _adr, uint256 _val, string _data) public {\n        Message memory newMsg = Message({\n            sender: _adr,\n            time: now,\n            val: _val,\n            data: _data\n        });\n        history.push(newMsg);",
          "message": "LogFile.addMessage (patch_6.sol#55-63) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in patch_6.sol:\n\t- pragma solidity^0.4.19 (patch_6.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMinSum(uint256 _val) public {",
          "message": "Parameter '_val' of AccuralDeposit.setMinSum (patch_6.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setLogFile(LogFile _log) public {",
          "message": "Parameter '_log' of AccuralDeposit.setLogFile (patch_6.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collect(uint256 _am) public payable {",
          "message": "Parameter '_am' of AccuralDeposit.collect (patch_6.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint256 _val, string _data) public {",
          "message": "Parameter '_adr' of LogFile.addMessage (patch_6.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint256 _val, string _data) public {",
          "message": "Parameter '_val' of LogFile.addMessage (patch_6.sol#55) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint256 _val, string _data) public {",
          "message": "Parameter '_data' of LogFile.addMessage (patch_6.sol#55) is not in mixedCase\n"
        }
      ]
    }
  }
}