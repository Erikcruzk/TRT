{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_11"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public minSum = 1 ether;",
          "message": "WALLET.minSum should be constant (patch_0.sol#6)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function collect(uint _amount) public {\n        require(balances[msg.sender] >= minSum, \"Minimum balance not met\");\n        require(balances[msg.sender] >= _amount, \"Insufficient balance\");\n        require(now > unlockTimes[msg.sender], \"Funds are locked\");\n        balances[msg.sender] -= _amount;\n        msg.sender.transfer(_amount);\n        logFile.addMessage(msg.sender, _amount, \"Collect\");",
          "message": "WALLET.collect (patch_0.sol#19-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 30,
          "vulnerability_code": "    function() public payable {\n        put(0);",
          "message": "WALLET.fallback (patch_0.sol#28-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 46,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {\n        Message memory newMessage = Message(_sender, _data, _value, now);\n        history.push(newMessage);",
          "message": "Log.addMessage (patch_0.sol#43-46) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function WALLET(address _log) public {\n        logFile = Log(_log);",
          "message": "Function 'WALLET.WALLET' (patch_0.sol#9-11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function WALLET(address _log) public {",
          "message": "Parameter '_log' of WALLET.WALLET (patch_0.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function put(uint _unlockTime) public payable {",
          "message": "Parameter '_unlockTime' of WALLET.put (patch_0.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collect(uint _amount) public {",
          "message": "Parameter '_amount' of WALLET.collect (patch_0.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_sender' of Log.addMessage (patch_0.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_value' of Log.addMessage (patch_0.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_data' of Log.addMessage (patch_0.sol#43) is not in mixedCase\n"
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}