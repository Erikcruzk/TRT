{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_21"
      ],
      "vulnerability_findings": [
        {
          "name": "assembly",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function withdrawToken(\n        address _token,\n        uint256 _amount,\n        address _to\n    ) public onlyOwner {\n        require(_token != address(0));\n        require(_to != address(0));\n        require(_amount > 0);\n\n        bool success = false;\n        assembly {\n            success := call(sub(gas, 10000), _token, 0x06, _to, _amount, 0, 0)\n        }\n        require(success);",
          "message": "Token.withdrawToken uses assembly (patch_7.sol#28-42)\n\t- patch_7.sol#38-41\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;",
          "message": "Ownable.changeOwner (patch_7.sol#11-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function confirmOwner() public {\n        require(msg.sender == newOwner);\n        owner = newOwner;\n        newOwner = address(0);",
          "message": "Ownable.confirmOwner (patch_7.sol#15-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function withdrawToken(\n        address _token,\n        uint256 _amount,\n        address _to\n    ) public onlyOwner {\n        require(_token != address(0));\n        require(_to != address(0));\n        require(_amount > 0);\n\n        bool success = false;\n        assembly {\n            success := call(sub(gas, 10000), _token, 0x06, _to, _amount, 0, 0)\n        }\n        require(success);",
          "message": "Token.withdrawToken (patch_7.sol#28-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": 56,
          "vulnerability_code": "    function() public payable {\n        deposit();",
          "message": "TokenBank.fallback (patch_7.sol#54-56) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": 72,
          "vulnerability_code": "    function withdrawTokenToHolder(\n        address _to,\n        address _token,\n        uint256 _amount\n    ) public onlyOwner {\n        require(Holders[_to] > 0);\n        Holders[_to] = 0;\n        Token token = Token(_token);\n        token.withdrawToken(_token, _amount, _to);",
          "message": "TokenBank.withdrawTokenToHolder (patch_7.sol#63-72) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": 82,
          "vulnerability_code": "    function withdrawToHolder(\n        address _addr,\n        uint256 _wei\n    ) public onlyOwner {\n        require(Holders[_addr] > 0);\n        require(_wei <= Holders[_addr]);\n        Holders[_addr] -= _wei;\n        _addr.transfer(_wei);",
          "message": "TokenBank.withdrawToHolder (patch_7.sol#74-82) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in patch_7.sol:\n\t- pragma solidity^0.4.19 (patch_7.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 9,
          "vulnerability_code": "    function Ownable() public {\n        owner = msg.sender;",
          "message": "Function 'Ownable.Ownable' (patch_7.sol#7-9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {",
          "message": "Parameter '_newOwner' of Ownable.changeOwner (patch_7.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _token,",
          "message": "Parameter '_token' of Token.withdrawToken (patch_7.sol#29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _amount,",
          "message": "Parameter '_amount' of Token.withdrawToken (patch_7.sol#30) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _to",
          "message": "Parameter '_to' of Token.withdrawToken (patch_7.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function TokenBank() public {\n        owner = msg.sender;\n        MinDeposit = 1 ether;",
          "message": "Function 'TokenBank.TokenBank' (patch_7.sol#49-52) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 64,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _to,",
          "message": "Parameter '_to' of TokenBank.withdrawTokenToHolder (patch_7.sol#64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _token,",
          "message": "Parameter '_token' of TokenBank.withdrawTokenToHolder (patch_7.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _amount",
          "message": "Parameter '_amount' of TokenBank.withdrawTokenToHolder (patch_7.sol#66) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 75,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _addr,",
          "message": "Parameter '_addr' of TokenBank.withdrawToHolder (patch_7.sol#75) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint256 _wei",
          "message": "Parameter '_wei' of TokenBank.withdrawToHolder (patch_7.sol#76) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public MinDeposit;",
          "message": "Variable 'TokenBank.MinDeposit' (patch_7.sol#46) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(address => uint256) public Holders;",
          "message": "Variable 'TokenBank.Holders' (patch_7.sol#47) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "            success := call(sub(gas, 10000), _token, 0x06, _to, _amount, 0, 0)",
          "message": null
        },
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 81,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _addr.transfer(_wei);",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}