{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_30"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 48,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        var acc = Acc[msg.sender];\n        if (\n            acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime\n        ) {\n            if (msg.sender.call.value(_am)()) {\n                acc.balance -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Reentrancy in PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#38-48):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#43-46)\n\tState variables written after the call(s):\n\t- Acc (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#44)\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (intitalized) throw;",
          "message": "Deprecated standard detected @ 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#18:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (intitalized) throw;",
          "message": "Deprecated standard detected @ 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#23:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;",
          "message": "PENNY_BY_PENNY.SetMinSum (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);",
          "message": "PENNY_BY_PENNY.SetLogFile (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#22-25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function Initialized() public {\n        intitalized = true;",
          "message": "PENNY_BY_PENNY.Initialized (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#27-29) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 48,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        var acc = Acc[msg.sender];\n        if (\n            acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime\n        ) {\n            if (msg.sender.call.value(_am)()) {\n                acc.balance -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#38-48) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function() public payable {\n        Put(0);",
          "message": "PENNY_BY_PENNY.fallback (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#50-52) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": 73,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#67-73) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol:\n\t- pragma solidity^0.4.19 (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 48,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        var acc = Acc[msg.sender];\n        if (\n            acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime\n        ) {\n            if (msg.sender.call.value(_am)()) {\n                acc.balance -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Low level call in PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#38-48):\n\t-msg.sender.call.value(_am)() 0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#43-46\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 53,
          "vulnerability_code": "contract PENNY_BY_PENNY {\n    struct Holder {\n        uint unlockTime;\n        uint balance;\n    }\n\n    mapping(address => Holder) public Acc;\n\n    uint public MinSum;\n\n    LogFile Log;\n\n    bool intitalized;\n\n    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;\n    }\n\n    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);\n    }\n\n    function Initialized() public {\n        intitalized = true;\n    }\n\n    function Put(uint _lockTime) public payable {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        if (now + _lockTime > acc.unlockTime) acc.unlockTime = now + _lockTime;\n        Log.AddMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function Collect(uint _am) public payable {\n        var acc = Acc[msg.sender];\n        if (\n            acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime\n        ) {\n            if (msg.sender.call.value(_am)()) {\n                acc.balance -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }\n    }\n\n    function() public payable {\n        Put(0);\n    }",
          "message": "Contract 'PENNY_BY_PENNY' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#3-53) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;",
          "message": "Function 'PENNY_BY_PENNY.SetMinSum' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17-20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetMinSum(uint _val) public {",
          "message": "Parameter '_val' of PENNY_BY_PENNY.SetMinSum (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);",
          "message": "Function 'PENNY_BY_PENNY.SetLogFile' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#22-25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetLogFile(address _log) public {",
          "message": "Parameter '_log' of PENNY_BY_PENNY.SetLogFile (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#22) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function Initialized() public {\n        intitalized = true;",
          "message": "Function 'PENNY_BY_PENNY.Initialized' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#27-29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 36,
          "vulnerability_code": "    function Put(uint _lockTime) public payable {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        if (now + _lockTime > acc.unlockTime) acc.unlockTime = now + _lockTime;\n        Log.AddMessage(msg.sender, msg.value, \"Put\");",
          "message": "Function 'PENNY_BY_PENNY.Put' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#31-36) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Put(uint _lockTime) public payable {",
          "message": "Parameter '_lockTime' of PENNY_BY_PENNY.Put (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 48,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        var acc = Acc[msg.sender];\n        if (\n            acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime\n        ) {\n            if (msg.sender.call.value(_am)()) {\n                acc.balance -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Function 'PENNY_BY_PENNY.Collect' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#38-48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am) public payable {",
          "message": "Parameter '_am' of PENNY_BY_PENNY.Collect (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(address => Holder) public Acc;",
          "message": "Variable 'PENNY_BY_PENNY.Acc' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum;",
          "message": "Variable 'PENNY_BY_PENNY.MinSum' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    LogFile Log;",
          "message": "Variable 'PENNY_BY_PENNY.Log' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": 73,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'LogFile.AddMessage' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#67-73) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_adr' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_val' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_data' of LogFile.AddMessage (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#67) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'LogFile.History' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'LogFile.LastMsg' (0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol#65) is not in mixedCase\n"
        }
      ]
    }
  }
}