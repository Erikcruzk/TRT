function beginMigration() external {
        require(msg.sender == employerAddress, "Only employer can initiate migration");
        Offer storage data = offers[freelancerAddress];
        require(data.tokenContractIsBNB == false, "Token contract must not be BNB");

        if (data.ArgonShield) {
            require(
                deployedFromContract.approverLockBalances(approverAddress) >=
                    deployedFromContract.approverMinArgonLimit(),
                "Approver lock balances must be sufficient for ArgonShield"
            );

            approverAddress = approverAddress;
            deployedFromContract.setApproverWorkAddress(address(this), approverAddress);
        }

        freelancerAddress = data.freelancerAddress;
        workStatus = true;
        workStartDate = block.timestamp;
        deadLine = data.deadline;
        workPrice = data.offerPrice;
        isBNB = false;
        tokenContractAddress = data.offerTokenContract;
        IERC20(tokenContractAddress).transferFrom(msg.sender, address(this), data.offerPrice);
        argonShield = data.ArgonShield;
    }