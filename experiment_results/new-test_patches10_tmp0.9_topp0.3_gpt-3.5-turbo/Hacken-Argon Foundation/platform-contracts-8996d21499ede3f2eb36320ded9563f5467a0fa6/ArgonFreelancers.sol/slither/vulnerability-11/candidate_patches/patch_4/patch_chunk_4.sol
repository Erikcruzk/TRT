function beginMigration() external {
    require(msg.sender == employerAddress, "Only the employer can begin migration");
    
    Offer storage data = offers[freelancerAddress];
    
    require(data.tokenContractIsBNB == false, "Token contract cannot be BNB");
    
    if (data.ArgonShield) {
        require(deployedFromContract.approverLockBalances(approverAddress) >= deployedFromContract.approverMinArgonLimit(), "Not enough Argon balance for approver");
        
        approverAddress = msg.sender;
        deployedFromContract.setApproverWorkAddress(address(this), approverAddress);
    }
    
    workStatus = true;
    workStartDate = now;
    deadLine = data.deadline;
    workPrice = data.offerPrice;
    isBNB = false;
    tokenContractAddress = data.offerTokenContract;
    
    IERC20(tokenContractAddress).transferFrom(msg.sender, address(this), data.offerPrice);
    
    argonShield = data.ArgonShield;
}