{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_2"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function withdrawBalance() public {\n        require(!locked[msg.sender]); // prevent reentrancy\n        locked[msg.sender] = true;\n        uint amountToWithdraw = userBalances[msg.sender];\n        userBalances[msg.sender] = 0;\n        locked[msg.sender] = false;\n        msg.sender.transfer(amountToWithdraw);",
          "message": "Reentrancy_secure.withdrawBalance (patch_6.sol#8-15) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 16,
          "vulnerability_code": "contract Reentrancy_secure {\n\n    mapping (address => uint) private userBalances;\n    mapping (address => bool) private locked;\n\n    function withdrawBalance() public {\n        require(!locked[msg.sender]); // prevent reentrancy\n        locked[msg.sender] = true;\n        uint amountToWithdraw = userBalances[msg.sender];\n        userBalances[msg.sender] = 0;\n        locked[msg.sender] = false;\n        msg.sender.transfer(amountToWithdraw);\n    }",
          "message": "Contract 'Reentrancy_secure' (patch_6.sol#3-16) is not in CapWords\n"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}