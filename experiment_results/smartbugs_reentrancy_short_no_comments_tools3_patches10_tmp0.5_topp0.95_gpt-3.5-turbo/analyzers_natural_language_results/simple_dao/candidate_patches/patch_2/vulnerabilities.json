{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool res = msg.sender.call.value(amount)();",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "  function donate(address to) public payable {\n    credit[to] += msg.value;",
          "message": "SimpleDAO.donate (patch_2.sol#6-8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 15,
          "vulnerability_code": "  function withdraw(uint amount) public {\n    require(credit[msg.sender] >= amount, \"Insufficient balance\");\n    credit[msg.sender] -= amount;\n    bool res = msg.sender.call.value(amount)();\n    require(res, \"Transaction failed\");",
          "message": "SimpleDAO.withdraw (patch_2.sol#10-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 19,
          "vulnerability_code": "  function queryCredit(address to) public view returns (uint){\n    return credit[to];",
          "message": "SimpleDAO.queryCredit (patch_2.sol#17-19) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 15,
          "vulnerability_code": "  function withdraw(uint amount) public {\n    require(credit[msg.sender] >= amount, \"Insufficient balance\");\n    credit[msg.sender] -= amount;\n    bool res = msg.sender.call.value(amount)();\n    require(res, \"Transaction failed\");",
          "message": "Low level call in SimpleDAO.withdraw (patch_2.sol#10-15):\n\t-res = msg.sender.call.value(amount)() patch_2.sol#13\n"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    credit[to] += msg.value;",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    bool res = msg.sender.call.value(amount)();",
          "message": null
        }
      ]
    }
  }
}