{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": true,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": [
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.25;",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "        History.push(LastMsg);",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "        History.push(LastMsg);",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_20"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Reentrancy in WALLET.Collect (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#15-28):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#22-26)\n\tState variables written after the call(s):\n\t- Acc (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#24)\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;    ",
          "message": "WALLET.MinSum should be constant (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#47)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "WALLET.Collect (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#15-28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function() \n    public \n    payable\n    {\n        Put(0);",
          "message": "WALLET.fallback (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#30-35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 77,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Log.AddMessage (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#69-77) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Low level call in WALLET.Collect (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#15-28):\n\t-msg.sender.call.value(_am)() 0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#22-26\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function Put(uint _unlockTime)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime>now?_unlockTime:now;\n        LogFile.AddMessage(msg.sender,msg.value,\"Put\");",
          "message": "Function 'WALLET.Put' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#5-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Put(uint _unlockTime)",
          "message": "Parameter '_unlockTime' of WALLET.Put (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#5) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Collect(uint _am)\n    public\n    payable\n    {\n        var acc = Acc[msg.sender];\n        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n        {\n            if(msg.sender.call.value(_am)())\n            {\n                acc.balance-=_am;\n                LogFile.AddMessage(msg.sender,_am,\"Collect\");\n            }\n        }",
          "message": "Function 'WALLET.Collect' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#15-28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am)",
          "message": "Parameter '_am' of WALLET.Collect (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 49,
          "vulnerability_to_line": 51,
          "vulnerability_code": "    function WALLET(address log) public{\n        LogFile = Log(log);",
          "message": "Function 'WALLET.WALLET' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#49-51) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => Holder) public Acc;",
          "message": "Variable 'WALLET.Acc' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Log LogFile;",
          "message": "Variable 'WALLET.LogFile' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#45) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 47,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;    ",
          "message": "Variable 'WALLET.MinSum' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#47) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 77,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'Log.AddMessage' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#69-77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_adr' of Log.AddMessage (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_val' of Log.AddMessage (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data)",
          "message": "Parameter '_data' of Log.AddMessage (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#69) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 65,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'Log.History' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#65) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 67,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'Log.LastMsg' (0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol#67) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}