{
  "smartbugs_completed": true,
  "analyzer_results": {
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Underflow",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    return keccak256(abi.encodePacked(\"Nu Token\"));",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 10,
          "vulnerability_code": "  function airDrop() hasNoBalance supportsToken public {\n    tokenBalance[msg.sender] += 20;",
          "message": "ModifierEntrancy.airDrop (patch_1.sol#8-10) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": 44,
          "vulnerability_code": "  function call(address token) public {\n    ModifierEntrancy(token).airDrop();",
          "message": "attack.call (patch_1.sol#42-44) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 45,
          "vulnerability_code": "contract attack {\n  bool hasBeenCalled;\n\n  function supportsToken() external returns(bytes32) {\n    if(!hasBeenCalled) {\n      hasBeenCalled = true;\n      ModifierEntrancy(msg.sender).airDrop();\n    }\n    return keccak256(abi.encodePacked(\"Nu Token\"));\n  }\n\n  function call(address token) public {\n    ModifierEntrancy(token).airDrop();\n  }",
          "message": "Contract 'attack' (patch_1.sol#31-45) is not in CapWords\n"
        }
      ]
    }
  }
}