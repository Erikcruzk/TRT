{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_19"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 2 ether;",
          "message": "U_BANK.MinSum should be constant (patch_3.sol#15)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 39,
          "vulnerability_code": "    function Collect(uint _am) public {\n        var acc = Acc[msg.sender];\n        require(acc.balance >= MinSum, \"Balance should be greater than minimum sum\");\n        require(acc.balance >= _am, \"Amount should be less than or equal to balance\");\n        require(now > acc.unlockTime, \"Unlock time should have passed\");\n        acc.balance -= _am;\n        msg.sender.transfer(_am);\n        emit LogMessage(msg.sender, _am, \"Collect\");",
          "message": "U_BANK.Collect (patch_3.sol#31-39) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 41,
          "vulnerability_to_line": 43,
          "vulnerability_code": "    function() public payable {\n        Put(0);",
          "message": "U_BANK.fallback (patch_3.sol#41-43) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 66,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Log.AddMessage (patch_3.sol#60-66) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 44,
          "vulnerability_code": "contract U_BANK\n{\n    struct Holder   \n    {\n        uint unlockTime;\n        uint balance;\n    }\n\n    mapping (address => Holder) public Acc;\n\n    Log LogFile;\n\n    uint public MinSum = 2 ether;\n\n    event LogMessage(address indexed sender, uint value, string message);\n\n    function U_BANK(address log) public{\n        LogFile = Log(log);\n    }\n\n    function Put(uint _unlockTime) public payable {\n        require(msg.value > 0, \"Amount should be greater than 0\");\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime > now ? _unlockTime : now;\n        emit LogMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function Collect(uint _am) public {\n        var acc = Acc[msg.sender];\n        require(acc.balance >= MinSum, \"Balance should be greater than minimum sum\");\n        require(acc.balance >= _am, \"Amount should be less than or equal to balance\");\n        require(now > acc.unlockTime, \"Unlock time should have passed\");\n        acc.balance -= _am;\n        msg.sender.transfer(_am);\n        emit LogMessage(msg.sender, _am, \"Collect\");\n    }\n\n    function() public payable {\n        Put(0);\n    }",
          "message": "Contract 'U_BANK' (patch_3.sol#3-44) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function U_BANK(address log) public{\n        LogFile = Log(log);",
          "message": "Function 'U_BANK.U_BANK' (patch_3.sol#19-21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function Put(uint _unlockTime) public payable {\n        require(msg.value > 0, \"Amount should be greater than 0\");\n        var acc = Acc[msg.sender];\n        acc.balance += msg.value;\n        acc.unlockTime = _unlockTime > now ? _unlockTime : now;\n        emit LogMessage(msg.sender, msg.value, \"Put\");",
          "message": "Function 'U_BANK.Put' (patch_3.sol#23-29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Put(uint _unlockTime) public payable {",
          "message": "Parameter '_unlockTime' of U_BANK.Put (patch_3.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 39,
          "vulnerability_code": "    function Collect(uint _am) public {\n        var acc = Acc[msg.sender];\n        require(acc.balance >= MinSum, \"Balance should be greater than minimum sum\");\n        require(acc.balance >= _am, \"Amount should be less than or equal to balance\");\n        require(now > acc.unlockTime, \"Unlock time should have passed\");\n        acc.balance -= _am;\n        msg.sender.transfer(_am);\n        emit LogMessage(msg.sender, _am, \"Collect\");",
          "message": "Function 'U_BANK.Collect' (patch_3.sol#31-39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am) public {",
          "message": "Parameter '_am' of U_BANK.Collect (patch_3.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping (address => Holder) public Acc;",
          "message": "Variable 'U_BANK.Acc' (patch_3.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Log LogFile;",
          "message": "Variable 'U_BANK.LogFile' (patch_3.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 2 ether;",
          "message": "Variable 'U_BANK.MinSum' (patch_3.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": 66,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'Log.AddMessage' (patch_3.sol#60-66) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data) public {",
          "message": "Parameter '_adr' of Log.AddMessage (patch_3.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data) public {",
          "message": "Parameter '_val' of Log.AddMessage (patch_3.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 60,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr,uint _val,string _data) public {",
          "message": "Parameter '_data' of Log.AddMessage (patch_3.sol#60) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'Log.History' (patch_3.sol#56) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'Log.LastMsg' (patch_3.sol#58) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Time dependency bug",
          "vulnerability_from_line": 35,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(now > acc.unlockTime, \"Unlock time should have passed\");",
          "message": null
        }
      ]
    }
  }
}