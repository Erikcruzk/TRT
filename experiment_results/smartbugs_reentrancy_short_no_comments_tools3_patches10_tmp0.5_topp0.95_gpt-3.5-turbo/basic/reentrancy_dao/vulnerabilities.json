{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "            bool callResult = msg.sender.call.value(oCredit)();",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function withdrawAll() public {\n        uint oCredit = credit[msg.sender];\n        if (oCredit > 0) {\n            balance -= oCredit;\n            bool callResult = msg.sender.call.value(oCredit)();\n            require (callResult);\n            credit[msg.sender] = 0;\n        }",
          "message": "Reentrancy in ReentrancyDAO.withdrawAll (reentrancy_dao.sol#7-15):\n\tExternal calls:\n\t- callResult = msg.sender.call.value(oCredit)() (reentrancy_dao.sol#11)\n\tState variables written after the call(s):\n\t- credit (reentrancy_dao.sol#13)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function withdrawAll() public {\n        uint oCredit = credit[msg.sender];\n        if (oCredit > 0) {\n            balance -= oCredit;\n            bool callResult = msg.sender.call.value(oCredit)();\n            require (callResult);\n            credit[msg.sender] = 0;\n        }",
          "message": "ReentrancyDAO.withdrawAll (reentrancy_dao.sol#7-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function deposit() public payable {\n        credit[msg.sender] += msg.value;\n        balance += msg.value;",
          "message": "ReentrancyDAO.deposit (reentrancy_dao.sol#17-20) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in reentrancy_dao.sol:\n\t- pragma solidity^0.4.19 (reentrancy_dao.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function withdrawAll() public {\n        uint oCredit = credit[msg.sender];\n        if (oCredit > 0) {\n            balance -= oCredit;\n            bool callResult = msg.sender.call.value(oCredit)();\n            require (callResult);\n            credit[msg.sender] = 0;\n        }",
          "message": "Low level call in ReentrancyDAO.withdrawAll (reentrancy_dao.sol#7-15):\n\t-callResult = msg.sender.call.value(oCredit)() reentrancy_dao.sol#11\n"
        }
      ]
    },
    "osiris": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack bug",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "            bool callResult = msg.sender.call.value(oCredit)();",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        credit[msg.sender] += msg.value;",
          "message": null
        },
        {
          "name": "Overflow bugs",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balance += msg.value;",
          "message": null
        },
        {
          "name": "Reentrancy bug",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "            bool callResult = msg.sender.call.value(oCredit)();",
          "message": null
        },
        {
          "name": "Underflow bugs",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "            balance -= oCredit;",
          "message": null
        }
      ]
    }
  }
}