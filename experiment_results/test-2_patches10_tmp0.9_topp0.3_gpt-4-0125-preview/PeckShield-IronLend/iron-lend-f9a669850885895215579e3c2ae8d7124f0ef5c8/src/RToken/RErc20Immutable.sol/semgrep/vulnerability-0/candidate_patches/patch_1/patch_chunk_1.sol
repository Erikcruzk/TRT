function doTransferOut(address payable to, uint amount) internal {
    // Using a re-entrancy guard to prevent re-entrant calls
    require(_notEntered, "re-entrant call");
    _notEntered = false;

    EIP20NonStandardInterface token = EIP20NonStandardInterface(underlying);
    token.transfer(to, amount);

    bool success;
    assembly {
        switch returndatasize()
            case 0 {                      
                success := not(0)          
            }
            case 32 {                     
                returndatacopy(0, 0, 32)
                success := mload(0)        
            }
            default {                     
                revert(0, 0)
            }
    }
    require(success, "TOKEN_TRANSFER_OUT_FAILED");

    // Resetting the re-entrancy guard after the external call is completed
    _notEntered = true;
}