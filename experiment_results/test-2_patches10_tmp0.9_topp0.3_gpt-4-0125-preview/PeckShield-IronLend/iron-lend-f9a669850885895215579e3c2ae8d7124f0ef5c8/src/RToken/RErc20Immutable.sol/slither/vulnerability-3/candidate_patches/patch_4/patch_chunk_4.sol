function _setInterestRateModel(InterestRateModel newInterestRateModel) public returns (uint) {
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        // accrueInterest emits a log upon failure, revert to ensure atomicity
        revert("accrue interest failed");
    }
    
    // Check caller = admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    // Check market is fresh
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }
    
    // Ensure the new model is not the zero address and follows the InterestRateModel interface
    require(newInterestRateModel.isInterestRateModel(), "marker method returned false");
    
    // Save current model for the event
    InterestRateModel oldInterestRateModel = interestRateModel;
    // Update to the new interest rate model
    interestRateModel = newInterestRateModel;
    
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    return uint(Error.NO_ERROR);
}