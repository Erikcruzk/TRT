function _setInterestRateModelFresh(InterestRateModel newInterestRateModel) internal returns (uint) {
    // Ensures the call to accrueInterest occurs before state changes
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        return fail(Error(error), FailureInfo.SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED);
    }
    
    // Check caller = admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    // Ensure market is fresh
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }

    // Ensure new model is contract
    require(newInterestRateModel.isInterestRateModel(), "marker method returned false");

    // Store old model for event, set new model
    InterestRateModel oldInterestRateModel = interestRateModel;
    interestRateModel = newInterestRateModel;

    // Emit event
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    return uint(Error.NO_ERROR);
}