function _setInterestRateModel(InterestRateModel newInterestRateModel) public returns (uint) {
    // Accrue interest depends on totalBorrows and totalReserves, so any change to those state variables
    // must be done after this calculation.
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        return fail(Error(error), FailureInfo.SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED);
    }

    // Check caller is admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    // Ensure market's block number is up to date, to ensure interest accrual is up to date.
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }

    // Ensure the new interest model contract's isInterestRateModel() returns true
    require(newInterestRateModel.isInterestRateModel(), "marker method returned false");

    // Save current model for the event, and set the new interest rate model
    InterestRateModel oldInterestRateModel = interestRateModel;
    interestRateModel = newInterestRateModel;

    // Emit event with old and new model addresses
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    return uint(Error.NO_ERROR);
}