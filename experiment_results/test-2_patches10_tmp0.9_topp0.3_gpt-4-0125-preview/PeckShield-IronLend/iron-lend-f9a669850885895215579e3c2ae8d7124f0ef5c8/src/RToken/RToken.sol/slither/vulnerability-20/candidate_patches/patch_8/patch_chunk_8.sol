function borrowFresh(address payable borrower, uint borrowAmount) internal returns (uint) {
    // omitted code for brevity

    /* We now store the previous total borrows before invoking doTransferOut */
    uint totalBorrowsPrior = totalBorrows;

    // We invoke doTransferOut for the borrower and the borrowAmount.
    doTransferOut(borrower, borrowAmount);

    /* We read total borrows again after doTransferOut in case of re-entrancy where totalBorrows might change */
    uint totalBorrowsAfter = totalBorrows;

    /* We only proceed if total borrows has not changed due to reentrancy */
    require(totalBorrowsPrior == totalBorrowsAfter, "RToken: Re-entrancy modification of totalBorrows");

    // omitted code for brevity
}