function _setInterestRateModelFresh(InterestRateModel newInterestRateModel) internal returns (uint) {
    // Check for re-entrancy
    require(_notEntered, "re-entered");
    _notEntered = false;

    InterestRateModel oldInterestRateModel;

    // Ensure the caller is admin
    if (msg.sender != admin) {
        _notEntered = true;
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    // Accrual block number must be current
    if (accrualBlockNumber != getBlockNumber()) {
        _notEntered = true;
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }

    // Save current model for the event
    oldInterestRateModel = interestRateModel;

    // Ensure the argument is a contract that implements the model
    require(newInterestRateModel.isInterestRateModel(), "marker method returned false");

    // Set new model
    interestRateModel = newInterestRateModel;

    // Emit event
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    // Re-enable entering
    _notEntered = true;

    return uint(Error.NO_ERROR);
}