function _setInterestRateModelFresh(InterestRateModel newInterestRateModel) internal returns (uint) {

    InterestRateModel oldInterestRateModel;

    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }

    oldInterestRateModel = interestRateModel;

    require(newInterestRateModel.isInterestRateModel(), "marker method returned false");

    // Ensure this contract's state is not altered before calling external contract
    interestRateModel = newInterestRateModel;

    // Emit event before calling external contract
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    // Check with external call at the end to follow the checks-effects-interactions pattern and mitigate reentrancy
    require(newInterestRateModel.isInterestRateModel(), "marker method returned false after setting");

    return uint(Error.NO_ERROR);
}