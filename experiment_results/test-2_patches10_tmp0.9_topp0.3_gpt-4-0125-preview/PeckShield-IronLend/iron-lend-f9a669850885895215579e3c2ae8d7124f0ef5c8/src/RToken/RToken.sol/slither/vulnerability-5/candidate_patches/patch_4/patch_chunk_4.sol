function _setIronController(IronControllerInterface newIronController) public returns (uint) {
    // Ensures the caller is the contract's admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_IRON_CONTROLLER_OWNER_CHECK);
    }

    // Calling isIronController() to confirm newIronController is actually a controller
    require(newIronController.isIronController(), "marker method returned false");

    // State changes after external call to guard against re-entrancy
    IronControllerInterface oldIronController = ironController;
    ironController = newIronController;

    // Emitting an event for the IronController change
    emit NewIronController(oldIronController, newIronController);

    return uint(Error.NO_ERROR);
}