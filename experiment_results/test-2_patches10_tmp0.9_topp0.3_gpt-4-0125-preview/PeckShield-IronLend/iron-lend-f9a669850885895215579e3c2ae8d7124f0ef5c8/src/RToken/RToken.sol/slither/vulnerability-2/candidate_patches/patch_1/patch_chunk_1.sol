function _reduceReservesFresh(uint reduceAmount) internal returns (uint) {
    // Ensure the caller is the contract's admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.REDUCE_RESERVES_ADMIN_CHECK);
    }

    // Ensure market is up-to-date with latest interest accrual
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.REDUCE_RESERVES_FRESH_CHECK);
    }

    // Ensure there's enough cash available to reduce the reserves
    if (getCashPrior() < reduceAmount) {
        return fail(Error.TOKEN_INSUFFICIENT_CASH, FailureInfo.REDUCE_RESERVES_CASH_NOT_AVAILABLE);
    }

    // Ensure the reduceAmount does not exceed the total reserves
    if (reduceAmount > totalReserves) {
        return fail(Error.BAD_INPUT, FailureInfo.REDUCE_RESERVES_VALIDATION);
    }

    // Subtract the reduceAmount from totalReserves
    totalReserves = totalReserves - reduceAmount;

    // Transfer out the reduceAmount to admin
    doTransferOut(admin, reduceAmount);

    // Emit an event for reducing reserves
    emit ReservesReduced(admin, reduceAmount, totalReserves);

    return uint(Error.NO_ERROR);
}