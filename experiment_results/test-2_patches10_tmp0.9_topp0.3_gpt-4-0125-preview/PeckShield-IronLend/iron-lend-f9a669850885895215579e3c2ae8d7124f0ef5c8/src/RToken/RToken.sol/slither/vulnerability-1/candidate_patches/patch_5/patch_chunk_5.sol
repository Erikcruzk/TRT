function _addReservesInternal(uint addAmount) internal nonReentrant returns (uint) {
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        
        return fail(Error(error), FailureInfo.ADD_RESERVES_ACCRUE_INTEREST_FAILED);
    }

    // Ensure the addition does not overflow
    uint totalReservesNew = totalReserves + addAmount;
    require(totalReservesNew >= totalReserves, "add reserves overflow");

    // Ensure the contract has enough cash to add reserves
    uint cashPrior = getCashPrior();
    require(cashPrior >= addAmount, "insufficient cash");

    // Update the total reserves
    totalReserves = totalReservesNew;

    emit ReservesAdded(msg.sender, addAmount, totalReservesNew);

    return uint(Error.NO_ERROR);
}