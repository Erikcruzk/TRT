function borrowFresh(address payable borrower, uint borrowAmount) internal returns (uint) {
    // Prevents a contract from calling itself, directly or indirectly.
    if (_notEntered) {
        _notEntered = false;
        
        uint allowed = ironController.borrowAllowed(address(this), borrower, borrowAmount);
        if (allowed != 0) {
            // Re-entrancy protection reset
            _notEntered = true;
            return failOpaque(Error.IRON_CONTROLLER_REJECTION, FailureInfo.BORROW_IRON_CONTROLLER_REJECTION, allowed);
        }

        // Rest of the function logic remains unchanged
        // ...

        // Re-entrancy protection reset
        _notEntered = true;
    } else {
        return fail(Error.REJECTION, FailureInfo.REJECTION);
    }
}