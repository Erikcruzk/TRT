function _setInterestRateModel(InterestRateModel newInterestRateModel) public returns (uint) {
    // Accrue interest to ensure we're updating the model on a fresh state.
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        // If accruing interest failed, return the error.
        return fail(Error(error), FailureInfo.SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED);
    }

    // Check caller = admin to ensure only authorized users can update the model.
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK);
    }

    // Ensure the call to update the model is fresh. This is a redundancy with the accrueInterest check above.
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK);
    }

    // Ensure the new model is actually a model to prevent setting to an invalid address.
    if (!newInterestRateModel.isInterestRateModel()) {
        return fail(Error.BAD_INPUT, FailureInfo.SET_INTEREST_RATE_MODEL_VALIDATION);
    }

    // Save current model for the event.
    InterestRateModel oldInterestRateModel = interestRateModel;
    // Update to new model.
    interestRateModel = newInterestRateModel;

    // Emit event for the interest rate model change.
    emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel);

    return uint(Error.NO_ERROR);
}