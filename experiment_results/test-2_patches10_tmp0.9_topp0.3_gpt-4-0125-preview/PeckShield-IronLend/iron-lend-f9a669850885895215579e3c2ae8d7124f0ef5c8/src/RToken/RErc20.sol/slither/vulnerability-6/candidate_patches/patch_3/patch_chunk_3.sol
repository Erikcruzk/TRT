function _setReserveFactor(uint newReserveFactorMantissa) external returns (uint) {
    // accrueInterest must be called before any modifications to RToken state
    uint error = accrueInterest();
    if (error != uint(Error.NO_ERROR)) {
        // If accrueInterest fails, return the error code
        return fail(Error(error), FailureInfo.SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED);
    }

    // Check caller is admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_RESERVE_FACTOR_ADMIN_CHECK);
    }

    // Verify market is fresh
    if (accrualBlockNumber != getBlockNumber()) {
        return fail(Error.MARKET_NOT_FRESH, FailureInfo.SET_RESERVE_FACTOR_FRESH_CHECK);
    }

    // Verify newReserveFactorMantissa is within bounds
    if (newReserveFactorMantissa > reserveFactorMaxMantissa) {
        return fail(Error.BAD_INPUT, FailureInfo.SET_RESERVE_FACTOR_BOUNDS_CHECK);
    }

    // Save current value for use in the event
    uint oldReserveFactorMantissa = reserveFactorMantissa;
    // Update state to new value
    reserveFactorMantissa = newReserveFactorMantissa;

    emit NewReserveFactor(oldReserveFactorMantissa, newReserveFactorMantissa);

    return uint(Error.NO_ERROR);
}