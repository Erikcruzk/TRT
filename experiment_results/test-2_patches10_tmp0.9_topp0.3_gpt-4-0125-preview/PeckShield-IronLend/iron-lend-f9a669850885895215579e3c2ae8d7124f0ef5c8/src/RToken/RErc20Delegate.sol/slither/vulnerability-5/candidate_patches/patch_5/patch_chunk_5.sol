function _setIronController(IronControllerInterface newIronController) public returns (uint) {
    // Check caller is admin
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_IRON_CONTROLLER_OWNER_CHECK);
    }

    // Store reference to old controller
    IronControllerInterface oldIronController = ironController;
    
    // Ensure invoke newIronController.isIronController() does not change state
    require(newIronController.isIronController(), "marker method returned false");

    // Optimistically set market's ironController to newIronController
    ironController = newIronController;

    // Verify no state change in newIronController through a static call
    require(ironController.isIronController(), "state change detected");

    // Emit NewIronController(oldIronController, newIronController)
    emit NewIronController(oldIronController, newIronController);

    return uint(Error.NO_ERROR);
}