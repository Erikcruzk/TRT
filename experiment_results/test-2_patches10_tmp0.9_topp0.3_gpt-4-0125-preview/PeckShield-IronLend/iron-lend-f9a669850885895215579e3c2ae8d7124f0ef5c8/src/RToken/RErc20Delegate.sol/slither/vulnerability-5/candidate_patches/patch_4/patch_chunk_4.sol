function _setIronController(IronControllerInterface newIronController) public returns (uint) {
    if (msg.sender != admin) {
        return fail(Error.UNAUTHORIZED, FailureInfo.SET_IRON_CONTROLLER_OWNER_CHECK);
    }

    IronControllerInterface oldIronController = ironController;
    require(newIronController.isIronController(), "marker method returned false");

    // Avoids Re-Entrancy Vulnerability by updating internal state before external call
    IronControllerInterface tempIronController = ironController;
    ironController = newIronController;

    // Ensure the call to isIronController on the new controller is done after changing internal state
    require(tempIronController.isIronController(), "old controller check failed");
    
    emit NewIronController(oldIronController, newIronController);

    return uint(Error.NO_ERROR);
}