// SPDX-License-Identifier: MIT
pragma solidity 0.6.12;

contract Multicall2 {
    // Other functions and declarations...

    function tryAggregate(bool requireSuccess, Call[] memory calls) public returns (Result[] memory returnData) {
        returnData = new Result[](calls.length);
        for(uint256 i = 0; i < calls.length; i++) {
            // Preventing reentrancy by first updating state
            returnData[i] = Result(false, bytes(""));

            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);

            if (requireSuccess) {
                require(success, "Multicall2 aggregate: call failed");
            }

            returnData[i] = Result(success, ret);
        }
    }
}