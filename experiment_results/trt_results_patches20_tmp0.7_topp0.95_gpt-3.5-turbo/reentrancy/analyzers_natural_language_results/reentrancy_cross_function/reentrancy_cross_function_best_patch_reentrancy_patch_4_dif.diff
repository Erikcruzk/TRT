- pragma solidity ^0.4.0;
?                      ^
+ pragma solidity ^0.4.24;
?                      ^^
  
  contract Reentrancy_cross_function {
      mapping(address => uint) private userBalances;
+     mapping(address => bool) private locked;
  
-     function transfer(address to, uint amount) {
+     function transfer(address to, uint amount) public {
?                                                +++++++
-         if (userBalances[msg.sender] >= amount) {
+         require(userBalances[msg.sender] >= amount, "Insufficient balance");
-             userBalances[to] += amount;
? ----
+         userBalances[to] += amount;
-             userBalances[msg.sender] -= amount;
? ----
+         userBalances[msg.sender] -= amount;
-         }
      }
  
      function withdrawBalance() public {
+         require(!locked[msg.sender], "Reentrancy protection");
+         locked[msg.sender] = true;
          uint amountToWithdraw = userBalances[msg.sender];
- 
-         (bool success, ) = msg.sender.call.value(amountToWithdraw)("");
-         require(success);
          userBalances[msg.sender] = 0;
+         locked[msg.sender] = false;
+         msg.sender.transfer(amountToWithdraw);
      }
- }
+ }