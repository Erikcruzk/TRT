  pragma solidity ^0.4.19;
  
  contract PrivateBank {
      mapping(address => uint) public balances;
  
      uint public MinDeposit = 1 ether;
  
      Log TransferLog;
  
-     function PrivateBank(address _log) {
+     function PrivateBank(address _log) public {
?                                        +++++++
          TransferLog = Log(_log);
      }
  
-     function Deposit() public payable {
?              ^
+     function deposit() public payable {
?              ^
-         if (msg.value >= MinDeposit) {
?          ^^                         ^^
+         require(msg.value >= MinDeposit);
?         ++++ ^^                         ^
-             balances[msg.sender] += msg.value;
? ----
+         balances[msg.sender] += msg.value;
-             TransferLog.AddMessage(msg.sender, msg.value, "Deposit");
? ----                    ^
+         TransferLog.addMessage(msg.sender, msg.value, "Deposit");
?                     ^
-         }
      }
  
-     function CashOut(uint _am) {
?              ^
+     function cashOut(uint _am) public {
?              ^                 +++++++
-         if (_am <= balances[msg.sender]) {
?          ^^                             ^^
+         require(_am <= balances[msg.sender]);
?         ++++ ^^                             ^
-             if (msg.sender.call.value(_am)()) {
-                 balances[msg.sender] -= _am;
? --------
+         balances[msg.sender] -= _am;
-                 TransferLog.AddMessage(msg.sender, _am, "CashOut");
? --------                    ^
+         TransferLog.addMessage(msg.sender, _am, "CashOut");
?                     ^
+         msg.sender.transfer(_am);
-             }
-         }
      }
  
      function() public payable {}
+ 
  }
  
  contract Log {
      struct Message {
          address Sender;
          string Data;
          uint Val;
          uint Time;
      }
  
      Message[] public History;
  
-     Message LastMsg;
- 
-     function AddMessage(address _adr, uint _val, string _data) public {
?              ^
+     function addMessage(address _adr, uint _val, string _data) public {
?              ^
+         Message memory newMsg;
-         LastMsg.Sender = _adr;
?         ^^^^
+         newMsg.Sender = _adr;
?         ^^^
-         LastMsg.Time = now;
?         ^^^^
+         newMsg.Time = now;
?         ^^^
-         LastMsg.Val = _val;
?         ^^^^
+         newMsg.Val = _val;
?         ^^^
-         LastMsg.Data = _data;
?         ^^^^
+         newMsg.Data = _data;
?         ^^^
-         History.push(LastMsg);
?                      ^^^^
+         History.push(newMsg);
?                      ^^^
      }
- }
+ }