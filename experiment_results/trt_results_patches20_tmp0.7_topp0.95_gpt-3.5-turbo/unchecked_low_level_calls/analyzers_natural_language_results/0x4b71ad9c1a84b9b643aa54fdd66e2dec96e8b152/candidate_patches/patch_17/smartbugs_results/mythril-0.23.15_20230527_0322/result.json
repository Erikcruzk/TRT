{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "AirPort",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b506107538061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80631561ae311461002d575b5f80fd5b61004760048036038101906100429190610414565b61005d565b60405161005491906104ae565b60405180910390f35b5f808351116100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610521565b60405180910390fd5b5f7f23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b90505f5b8451811015610218575f8673ffffffffffffffffffffffffffffffffffffffff1683898885815181106100fd576100fc61053f565b5b6020026020010151886040516024016101189392919061058a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610182919061062b565b5f604051808303815f865af19150503d805f81146101bb576040519150601f19603f3d011682016040523d82523d5f602084013e6101c0565b606091505b5050905080610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb9061068b565b60405180910390fd5b508080610210906106d6565b9150506100c7565b506001915050949350505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61026082610237565b9050919050565b61027081610256565b811461027a575f80fd5b50565b5f8135905061028b81610267565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102db82610295565b810181811067ffffffffffffffff821117156102fa576102f96102a5565b5b80604052505050565b5f61030c610226565b905061031882826102d2565b919050565b5f67ffffffffffffffff821115610337576103366102a5565b5b602082029050602081019050919050565b5f80fd5b5f61035e6103598461031d565b610303565b9050808382526020820190506020840283018581111561038157610380610348565b5b835b818110156103aa5780610396888261027d565b845260208401935050602081019050610383565b5050509392505050565b5f82601f8301126103c8576103c7610291565b5b81356103d884826020860161034c565b91505092915050565b5f819050919050565b6103f3816103e1565b81146103fd575f80fd5b50565b5f8135905061040e816103ea565b92915050565b5f805f806080858703121561042c5761042b61022f565b5b5f6104398782880161027d565b945050602061044a8782880161027d565b935050604085013567ffffffffffffffff81111561046b5761046a610233565b5b610477878288016103b4565b925050606061048887828801610400565b91505092959194509250565b5f8115159050919050565b6104a881610494565b82525050565b5f6020820190506104c15f83018461049f565b92915050565b5f82825260208201905092915050565b7f496e76616c696420696e707574000000000000000000000000000000000000005f82015250565b5f61050b600d836104c7565b9150610516826104d7565b602082019050919050565b5f6020820190508181035f830152610538816104ff565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b61057581610256565b82525050565b610584816103e1565b82525050565b5f60608201905061059d5f83018661056c565b6105aa602083018561056c565b6105b7604083018461057b565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b838110156105f05780820151818401526020810190506105d5565b5f8484015250505050565b5f610605826105bf565b61060f81856105c9565b935061061f8185602086016105d3565b80840191505092915050565b5f61063682846105fb565b915081905092915050565b7f45787465726e616c2063616c6c206661696c65640000000000000000000000005f82015250565b5f6106756014836104c7565b915061068082610641565b602082019050919050565b5f6020820190508181035f8301526106a281610669565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106e0826103e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610712576107116106a9565b5b60018201905091905056fea264697066735822122024d517e2168eb9fd617cc05f832740fe0de93f19473c7624e8dc1d81b423144364736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/unchecked_low_level_calls/analyzers_natural_language_results/0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152/candidate_patches/patch_17/patch_17.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
