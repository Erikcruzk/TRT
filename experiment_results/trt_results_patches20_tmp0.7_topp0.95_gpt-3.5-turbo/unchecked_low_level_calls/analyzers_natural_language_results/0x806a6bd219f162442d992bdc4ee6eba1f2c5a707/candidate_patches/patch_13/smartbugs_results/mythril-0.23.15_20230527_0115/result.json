{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "Pie",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108298061005c5f395ff3fe608060405260043610610042575f3560e01c80633ccfd60b1461004d5780636ce8bc4d146100575780638da5cb5b1461007357806397f9ef661461009d57610049565b3661004957005b5f80fd5b6100556100a7565b005b610071600480360381019061006c919061055b565b610199565b005b34801561007e575f80fd5b506100876102d5565b60405161009491906105c4565b60405180910390f35b6100a56102f8565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b9061065d565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610196573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d906106eb565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16348360405161024d9190610775565b5f6040518083038185875af1925050503d805f8114610287576040519150601f19603f3d011682016040523d82523d5f602084013e61028c565b606091505b50509050806102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c7906107d5565b60405180910390fd5b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000341161030b575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561036d573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156103b1573d5f803e3d5ffd5b50565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103ee826103c5565b9050919050565b6103fe816103e4565b8114610408575f80fd5b50565b5f81359050610419816103f5565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61046d82610427565b810181811067ffffffffffffffff8211171561048c5761048b610437565b5b80604052505050565b5f61049e6103b4565b90506104aa8282610464565b919050565b5f67ffffffffffffffff8211156104c9576104c8610437565b5b6104d282610427565b9050602081019050919050565b828183375f83830152505050565b5f6104ff6104fa846104af565b610495565b90508281526020810184848401111561051b5761051a610423565b5b6105268482856104df565b509392505050565b5f82601f8301126105425761054161041f565b5b81356105528482602086016104ed565b91505092915050565b5f8060408385031215610571576105706103bd565b5b5f61057e8582860161040b565b925050602083013567ffffffffffffffff81111561059f5761059e6103c1565b5b6105ab8582860161052e565b9150509250929050565b6105be816103e4565b82525050565b5f6020820190506105d75f8301846105b5565b92915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2077697468647261772066756e645f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f6106476021836105dd565b9150610652826105ed565b604082019050919050565b5f6020820190508181035f8301526106748161063b565b9050919050565b7f4f6e6c7920746865206f776e65722063616e206578656375746520636f6d6d615f8201527f6e64730000000000000000000000000000000000000000000000000000000000602082015250565b5f6106d56023836105dd565b91506106e08261067b565b604082019050919050565b5f6020820190508181035f830152610702816106c9565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b8381101561073a57808201518184015260208101905061071f565b5f8484015250505050565b5f61074f82610709565b6107598185610713565b935061076981856020860161071d565b80840191505092915050565b5f6107808284610745565b915081905092915050565b7f436f6d6d616e6420657865637574696f6e206661696c656400000000000000005f82015250565b5f6107bf6018836105dd565b91506107ca8261078b565b602082019050919050565b5f6020820190508181035f8301526107ec816107b3565b905091905056fea264697066735822122000a817615435acf99ac80c435db783f4e260969644ac27e809b9ff9e0bd9d68864736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/unchecked_low_level_calls/analyzers_natural_language_results/0x806a6bd219f162442d992bdc4ee6eba1f2c5a707/candidate_patches/patch_13/patch_13.sol",
            "function": "constructor",
            "line": 6,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
