  pragma solidity ^0.4.24;
  
  contract Proxy {
      modifier onlyOwner() {
-         if (msg.sender == Owner) _;
+         require(msg.sender == owner, "Only the owner can call this function.");
+         _;
      }
-     address Owner = msg.sender;
+     address owner;
  
      function transferOwner(address _owner) public onlyOwner {
-         Owner = _owner;
?         ^
+         owner = _owner;
?         ^
      }
  
      function proxy(address target, bytes data) public payable {
+         require(target != address(0), "Invalid target address.");
+         require(msg.value > 0, "Value must be greater than 0.");
-         target.call.value(msg.value)(data);
+         bool success = target.call.value(msg.value)(data);
?        +++++++++++++++
+         require(success, "External call failed.");
      }
  }
  
  contract VaultProxy is Proxy {
-     address public Owner;
-     mapping(address => uint256) public Deposits;
?                                        ^
+     mapping(address => uint256) public deposits;
?                                        ^
  
      function() public payable {}
  
-     function Vault() public payable {
?     ^ -  - ^^^^^^^
+     constructor() public payable {
?     ^^^^^^    ^
-         if (msg.sender == tx.origin) {
-             Owner = msg.sender;
?         ^^^^^
+         owner = msg.sender;
?         ^
-             deposit();
? ----
+         deposit();
-         }
      }
  
      function deposit() public payable {
+         require(msg.value > 0, "Value must be greater than 0.");
          if (msg.value > 0.5 ether) {
-             Deposits[msg.sender] += msg.value;
?             ^
+             deposits[msg.sender] += msg.value;
?             ^
          }
      }
  
      function withdraw(uint256 amount) public onlyOwner {
-         if (amount > 0 && Deposits[msg.sender] >= amount) {
+         require(amount > 0 && deposits[msg.sender] >= amount, "Invalid withdrawal amount.");
+         deposits[msg.sender] -= amount;
-             msg.sender.transfer(amount);
? ----
+         msg.sender.transfer(amount);
-         }
      }
- }
+ }