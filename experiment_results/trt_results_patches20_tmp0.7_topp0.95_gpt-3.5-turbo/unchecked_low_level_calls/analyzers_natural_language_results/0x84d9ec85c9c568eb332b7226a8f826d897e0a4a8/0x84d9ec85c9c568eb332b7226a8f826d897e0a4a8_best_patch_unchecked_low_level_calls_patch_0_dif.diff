  pragma solidity ^0.4.16;
  
  contract Owned {
      modifier onlyOwner() {
          require(msg.sender == owner);
          _;
      }
  
      address public owner;
  
-     function Owned() {
+     constructor() public {
          owner = msg.sender;
      }
  
      address public newOwner;
  
-     function changeOwner(address _newOwner) onlyOwner {
+     function changeOwner(address _newOwner) public onlyOwner {
?                                             +++++++
          newOwner = _newOwner;
      }
  
-     function acceptOwnership() {
+     function acceptOwnership() public {
?                                +++++++
          if (msg.sender == newOwner) {
              owner = newOwner;
+             newOwner = address(0);
          }
      }
  
-     function execute(address _dst, uint _value, bytes _data) onlyOwner {
+     function execute(address _dst, uint _value, bytes _data) public onlyOwner returns(bool) {
?                                                             +++++++           ++++++++++++++
-         _dst.call.value(_value)(_data);
+         require(_dst.call.value(_value)(_data));
?         ++++++++                              +
+         return true;
      }
  }
  
  contract WedIndex is Owned {
      string public wedaddress;
      string public partnernames;
      uint public indexdate;
      uint public weddingdate;
      uint public displaymultisig;
  
      IndexArray[] public indexarray;
  
      struct IndexArray {
          uint indexdate;
          string wedaddress;
          string partnernames;
          uint weddingdate;
          uint displaymultisig;
      }
  
-     function numberOfIndex() public constant returns (uint) {
?                                     ^^^^^^^^
+     function numberOfIndex() public view returns (uint) {
?                                     ^^^^
          return indexarray.length;
      }
  
      function writeIndex(
-         uint indexdate,
-         string wedaddress,
+         string _wedaddress,
?                +
-         string partnernames,
+         string _partnernames,
?                +
-         uint weddingdate,
+         uint _weddingdate,
?              +
-         uint displaymultisig
+         uint _displaymultisig
?              +
-     ) {
+     ) public {
          indexarray.push(
              IndexArray(
                  now,
-                 wedaddress,
+                 _wedaddress,
?                 +
-                 partnernames,
+                 _partnernames,
?                 +
-                 weddingdate,
+                 _weddingdate,
?                 +
-                 displaymultisig
+                 _displaymultisig
?                 +
              )
          );
-         IndexWritten(
+         emit IndexWritten(
?        +++++
              now,
-             wedaddress,
+             _wedaddress,
?             +
-             partnernames,
+             _partnernames,
?             +
-             weddingdate,
+             _weddingdate,
?             +
-             displaymultisig
+             _displaymultisig
?             +
          );
      }
  
      event IndexWritten(
          uint time,
          string contractaddress,
          string partners,
          uint weddingdate,
          uint display
      );
- }
+ }