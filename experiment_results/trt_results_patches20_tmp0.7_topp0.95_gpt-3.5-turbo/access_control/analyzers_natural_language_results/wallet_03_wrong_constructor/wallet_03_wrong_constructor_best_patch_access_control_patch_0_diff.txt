  pragma solidity ^0.4.24;
  
  contract Wallet {
-     address creator;
+     address public creator;
?            +++++++
+     mapping(address => uint256) public balances;
  
+     constructor() public {
-     mapping(address => uint256) balances;
- 
-     function initWallet() public {
          creator = msg.sender;
      }
  
      function deposit() public payable {
-         assert(balances[msg.sender] + msg.value > balances[msg.sender]);
?         ^^^  ^
+         require(balances[msg.sender] + msg.value >= balances[msg.sender]);
?         ^ +++ ^                                   +
          balances[msg.sender] += msg.value;
      }
  
      function withdraw(uint256 amount) public {
          require(amount <= balances[msg.sender]);
+         balances[msg.sender] -= amount;
          msg.sender.transfer(amount);
-         balances[msg.sender] -= amount;
      }
  
      function migrateTo(address to) public {
          require(creator == msg.sender);
-         to.transfer(this.balance);
+         to.transfer(address(this).balance);
?                     ++++++++    +
      }
- }
+ }