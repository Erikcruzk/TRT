{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 214,
            "contract": "FibonacciBalance",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x4",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x6080604052600360025560405160208061040783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038c8061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100ea57806320d786b5146101415780633ccfd60b1461016c578063bbe1d75b14610183578063be9a6555146101ae575b34801561007957600080fd5b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505090508015156100e757600080fd5b50005b3480156100f657600080fd5b506100ff6101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566101fe565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610204565b005b34801561018f57600080fd5b50610198610354565b6040518082815260200191505060405180910390f35b3480156101ba57600080fd5b506101c361035a565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505090508015156102fe57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610350573d6000803e3d6000fd5b5050565b60015481565b600254815600a165627a7a72305820b088b87f0eb656206543ff1d79232ab633acebefea673de2da24bf2d8b5654a80029efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x",
                        "input": "0x",
                        "name": "unknown",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "fallback",
            "line": 26,
            "message": "The contract delegates execution to another contract with a user-supplied address.\nThe smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf.\nClassification: SWC-112",
            "name": "Delegatecall to user-supplied address (SWC 112)",
            "severity": "High"
        },
        {
            "address": 354,
            "contract": "FibonacciLib",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561001057600080fd5b506101b6806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063bbe1d75b14610067578063be9a655514610092578063f6a03ebf146100bd578063fe75faab146100ea575b600080fd5b34801561007357600080fd5b5061007c610117565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a761011d565b6040518082815260200191505060405180910390f35b3480156100c957600080fd5b506100e860048036038101908080359060200190929190505050610123565b005b3480156100f657600080fd5b506101156004803603810190808035906020019092919050505061012d565b005b60015481565b60005481565b8060008190555050565b6101368161013f565b60018190555050565b600080821415610153576000549050610185565b6001821415610169576001600054019050610185565b6101756002830361013f565b6101816001840361013f565b0190505b9190505600a165627a7a723058206ce1b2092ff3d4fbf308f276f26a2b40a94c73abaeb2e4be3245f7015e6165b60029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xf6a03ebfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                        "input": "0xf6a03ebfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                        "name": "setStart(uint256)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": [
                            115792089237316195423570985008687907853269984665640564039457584007913129639935
                        ],
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xfe75faab0000000000000000000000000000000000000000000000000000000000000001",
                        "input": "0xfe75faab0000000000000000000000000000000000000000000000000000000000000001",
                        "name": "setFibonacci(uint256)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": [
                            1
                        ],
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "setFibonacci(uint256)",
            "line": 45,
            "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "High"
        },
        {
            "address": 386,
            "contract": "FibonacciLib",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561001057600080fd5b506101b6806100206000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063bbe1d75b14610067578063be9a655514610092578063f6a03ebf146100bd578063fe75faab146100ea575b600080fd5b34801561007357600080fd5b5061007c610117565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a761011d565b6040518082815260200191505060405180910390f35b3480156100c957600080fd5b506100e860048036038101908080359060200190929190505050610123565b005b3480156100f657600080fd5b506101156004803603810190808035906020019092919050505061012d565b005b60015481565b60005481565b8060008190555050565b6101368161013f565b60018190555050565b600080821415610153576000549050610185565b6001821415610169576001600054019050610185565b6101756002830361013f565b6101816001840361013f565b0190505b9190505600a165627a7a723058206ce1b2092ff3d4fbf308f276f26a2b40a94c73abaeb2e4be3245f7015e6165b60029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xf6a03ebfaa",
                        "input": "0xf6a03ebfaa",
                        "name": "setStart(uint256)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": [
                            76893184259155286023465107232331813808812099192026937057452301880254812651520
                        ],
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xfe75faab0000000000000000000000000000000000000000000000000000000000000002",
                        "input": "0xfe75faab0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "setFibonacci(uint256)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": [
                            2
                        ],
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "setFibonacci(uint256)",
            "line": 46,
            "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "High"
        },
        {
            "address": 748,
            "contract": "FibonacciBalance",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x6080604052600360025560405160208061040783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038c8061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100ea57806320d786b5146101415780633ccfd60b1461016c578063bbe1d75b14610183578063be9a6555146101ae575b34801561007957600080fd5b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505090508015156100e757600080fd5b50005b3480156100f657600080fd5b506100ff6101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566101fe565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610204565b005b34801561018f57600080fd5b50610198610354565b6040518082815260200191505060405180910390f35b3480156101ba57600080fd5b506101c361035a565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505090508015156102fe57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610350573d6000803e3d6000fd5b5050565b60015481565b600254815600a165627a7a72305820b088b87f0eb656206543ff1d79232ab633acebefea673de2da24bf2d8b5654a80029efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x3ccfd60b",
                        "input": "0x3ccfd60b",
                        "name": "withdraw()",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "withdraw()",
            "line": 20,
            "message": "The contract delegates execution to another contract with a user-supplied address.\nThe smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf.\nClassification: SWC-112",
            "name": "Delegatecall to user-supplied address (SWC 112)",
            "severity": "High"
        },
        {
            "address": 804,
            "contract": "FibonacciBalance",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x6080604052600360025560405160208061040783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038c8061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100ea57806320d786b5146101415780633ccfd60b1461016c578063bbe1d75b14610183578063be9a6555146101ae575b34801561007957600080fd5b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505090508015156100e757600080fd5b50005b3480156100f657600080fd5b506100ff6101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566101fe565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610204565b005b34801561018f57600080fd5b50610198610354565b6040518082815260200191505060405180910390f35b3480156101ba57600080fd5b506101c361035a565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505090508015156102fe57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610350573d6000803e3d6000fd5b5050565b60015481565b600254815600a165627a7a72305820b088b87f0eb656206543ff1d79232ab633acebefea673de2da24bf2d8b5654a80029efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x3ccfd60b",
                        "input": "0x3ccfd60b",
                        "name": "withdraw()",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "withdraw()",
            "line": 22,
            "message": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        },
        {
            "address": 826,
            "contract": "FibonacciBalance",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6080604052600360025560405160208061040783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038c8061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100ea57806320d786b5146101415780633ccfd60b1461016c578063bbe1d75b14610183578063be9a6555146101ae575b34801561007957600080fd5b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505090508015156100e757600080fd5b50005b3480156100f657600080fd5b506100ff6101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566101fe565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610204565b005b34801561018f57600080fd5b50610198610354565b6040518082815260200191505060405180910390f35b3480156101ba57600080fd5b506101c361035a565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505090508015156102fe57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610350573d6000803e3d6000fd5b5050565b60015481565b600254815600a165627a7a72305820b088b87f0eb656206543ff1d79232ab633acebefea673de2da24bf2d8b5654a80029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x3ccfd60b",
                        "input": "0x3ccfd60b",
                        "name": "withdraw()",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "withdraw()",
            "line": 22,
            "message": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).\nClassification: SWC-113",
            "name": "Multiple Calls in a Single Transaction (SWC 113)",
            "severity": "Low"
        },
        {
            "address": 826,
            "contract": "FibonacciBalance",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x6080604052600360025560405160208061040783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061038c8061007b6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631d0e8e9a146100ea57806320d786b5146101415780633ccfd60b1461016c578063bbe1d75b14610183578063be9a6555146101ae575b34801561007957600080fd5b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405180838380828437820191505092505050600060405180830381855af491505090508015156100e757600080fd5b50005b3480156100f657600080fd5b506100ff6101d9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566101fe565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610204565b005b34801561018f57600080fd5b50610198610354565b6040518082815260200191505060405180910390f35b3480156101ba57600080fd5b506101c361035a565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060016003600082825401925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744669626f6e616363692875696e74323536290000000000000000000000815250601501905060405180910390207c010000000000000000000000000000000000000000000000000000000090046003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381865af49250505090508015156102fe57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000600154029081150290604051600060405180830381858888f19350505050158015610350573d6000803e3d6000fd5b5050565b60015481565b600254815600a165627a7a72305820b088b87f0eb656206543ff1d79232ab633acebefea673de2da24bf2d8b5654a80029efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x3ccfd60b",
                        "input": "0x3ccfd60b",
                        "name": "withdraw()",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/access_control/analyzers_natural_language_results/FibonacciBalance/candidate_patches/patch_2/patch_2.sol",
            "function": "withdraw()",
            "line": 22,
            "message": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
