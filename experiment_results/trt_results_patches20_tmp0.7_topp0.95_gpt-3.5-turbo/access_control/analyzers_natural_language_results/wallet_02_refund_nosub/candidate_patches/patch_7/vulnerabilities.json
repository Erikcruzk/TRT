{
  "smartbugs_completed": true,
  "analyzer_results": {
    "maian": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Not destructible (no self-destruct)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    },
    "securify": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "MissingInputValidation",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        },
        {
          "name": "TODAmount",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function deposit() public payable {\n        require(balances[msg.sender] + msg.value > balances[msg.sender]);\n        balances[msg.sender] += msg.value;",
          "message": "Wallet.deposit (patch_7.sol#11-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function withdraw(uint256 amount) public {\n        require(amount > 0 && amount <= balances[msg.sender]);\n        balances[msg.sender] -= amount;\n        msg.sender.transfer(amount);",
          "message": "Wallet.withdraw (patch_7.sol#16-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function refund() public {\n        uint256 balance = balances[msg.sender];\n        require(balance > 0);\n        balances[msg.sender] = 0;\n        msg.sender.transfer(balance);",
          "message": "Wallet.refund (patch_7.sol#22-27) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 29,
          "vulnerability_to_line": 32,
          "vulnerability_code": "    function migrateTo(address to) public {\n        require(creator == msg.sender);\n        to.transfer(address(this).balance);",
          "message": "Wallet.migrateTo (patch_7.sol#29-32) should be declared external\n"
        }
      ]
    },
    "manticore-0.3.7": {
      "successfull_analysis": false,
      "errors": [
        "exception (manticore.core.state.Concretize)",
        "exception (manticore.exceptions.ManticoreError: Forking on unfeasible constraint set)"
      ],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Transaction-Ordering Dependence (TOD)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    }
  }
}