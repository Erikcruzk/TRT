{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "controlled-delegatecall",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {\n        require(msg.sender == owner);\n        require(_callee.delegatecall(_data));",
          "message": "Proxy.forward (patch_11.sol#10-13) uses delegatecall to a input-controlled function id\n\trequire(bool)(_callee.delegatecall(_data)) (patch_11.sol#12)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {\n        require(msg.sender == owner);\n        require(_callee.delegatecall(_data));",
          "message": "Proxy.forward (patch_11.sol#10-13) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {\n        require(msg.sender == owner);\n        require(_callee.delegatecall(_data));",
          "message": "Low level call in Proxy.forward (patch_11.sol#10-13):\n\t-require(bool)(_callee.delegatecall(_data)) patch_11.sol#12\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {",
          "message": "Parameter '_callee' of Proxy.forward (patch_11.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function forward(address _callee, bytes _data) public {",
          "message": "Parameter '_data' of Proxy.forward (patch_11.sol#10) is not in mixedCase\n"
        }
      ]
    },
    "securify": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "manticore-0.3.7": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "maian": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Not destructible (no self-destruct)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        },
        {
          "name": "No Ether lock (Ether refused)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}