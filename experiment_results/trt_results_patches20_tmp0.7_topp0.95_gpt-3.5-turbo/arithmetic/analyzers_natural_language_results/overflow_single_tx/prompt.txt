/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.23;

contract IntegerOverflowSingleTransaction {
    uint public count = 1;

    function overflowaddtostate(uint256 input) public {
        count += input;
    }

    function overflowmultostate(uint256 input) public {
        count *= input;
    }

    function underflowtostate(uint256 input) public {
        count -= input;
    }

    function overflowlocalonly(uint256 input) public {
        uint res = count + input;
    }

    function overflowmulocalonly(uint256 input) public {
        uint res = count * input;
    }

    function underflowlocalonly(uint256 input) public {
        uint res = count - input;
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Osiris Analysis Results
/// 1.1. Vulnerability: arithmetic at Line 7:
        count += input;
/// 1.2. Vulnerability: arithmetic at Line 11:
        count *= input;
/// 1.3. Vulnerability: arithmetic at Line 15:
        count -= input;


/// 2. Oyente Analysis Results
/// 2.1. Vulnerability: arithmetic at Line 19:
        uint res = count + input;
/// 2.2. Vulnerability: arithmetic at Line 15:
        count -= input;


/// 3. Mythril-0.23.15 Analysis Results
/// 3.1. Vulnerability: arithmetic at Line 15:
        count -= input;
///  Message:The arithmetic operator can underflow.
///   It is possible to cause an integer overflow or underflow in the arithmetic operation. 
///   Classification: SWC-101
/// 3.2. Vulnerability: arithmetic at Line 11:
        count *= input;
///  Message:The arithmetic operator can overflow.
///   It is possible to cause an integer overflow or underflow in the arithmetic operation. 
///   Classification: SWC-101
/// 3.3. Vulnerability: arithmetic at Line 7:
        count += input;
///  Message:The arithmetic operator can overflow.
///   It is possible to cause an integer overflow or underflow in the arithmetic operation. 
///   Classification: SWC-101



/// Repaired Solidity Smart Contract