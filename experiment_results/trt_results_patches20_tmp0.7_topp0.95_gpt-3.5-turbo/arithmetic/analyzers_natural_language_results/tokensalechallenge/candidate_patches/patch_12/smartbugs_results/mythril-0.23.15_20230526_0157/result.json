{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 174,
            "contract": "TokenSaleChallenge",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6080604052670de0b6b3a7640000341461004e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610045906100ad565b60405180910390fd5b6100cb565b5f82825260208201905092915050565b7f416d6f756e742073686f756c642062652065786163746c7920312065746865725f82015250565b5f610097602083610053565b91506100a282610063565b602082019050919050565b5f6020820190508181035f8301526100c48161008b565b9050919050565b6106c2806100d85f395ff3fe60806040526004361061003e575f3560e01c806370a0823114610042578063b2fa1c9e1461007e578063d96a094a146100a8578063e4849b32146100c4575b5f80fd5b34801561004d575f80fd5b506100686004803603810190610063919061038c565b6100ec565b60405161007591906103cf565b60405180910390f35b348015610089575f80fd5b50610092610100565b60405161009f9190610402565b60405180910390f35b6100c260048036038101906100bd9190610445565b610111565b005b3480156100cf575f80fd5b506100ea60048036038101906100e59190610445565b6101bb565b005b5f602052805f5260405f205f915090505481565b5f670de0b6b3a76400004710905090565b670de0b6b3a764000081610125919061049d565b3414610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d90610538565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101b19190610556565b9250508190555050565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561023a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610231906105d3565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461028591906105f1565b925050819055505f670de0b6b3a7640000826102a1919061049d565b9050804710156102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd9061066e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610329573d5f803e3d5ffd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61035b82610332565b9050919050565b61036b81610351565b8114610375575f80fd5b50565b5f8135905061038681610362565b92915050565b5f602082840312156103a1576103a061032e565b5b5f6103ae84828501610378565b91505092915050565b5f819050919050565b6103c9816103b7565b82525050565b5f6020820190506103e25f8301846103c0565b92915050565b5f8115159050919050565b6103fc816103e8565b82525050565b5f6020820190506104155f8301846103f3565b92915050565b610424816103b7565b811461042e575f80fd5b50565b5f8135905061043f8161041b565b92915050565b5f6020828403121561045a5761045961032e565b5b5f61046784828501610431565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104a7826103b7565b91506104b2836103b7565b92508282026104c0816103b7565b915082820484148315176104d7576104d6610470565b5b5092915050565b5f82825260208201905092915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f610522600e836104de565b915061052d826104ee565b602082019050919050565b5f6020820190508181035f83015261054f81610516565b9050919050565b5f610560826103b7565b915061056b836103b7565b925082820190508082111561058357610582610470565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6105bd6014836104de565b91506105c882610589565b602082019050919050565b5f6020820190508181035f8301526105ea816105b1565b9050919050565b5f6105fb826103b7565b9150610606836103b7565b925082820390508181111561061e5761061d610470565b5b92915050565b7f436f6e74726163742062616c616e6365206973206c6f770000000000000000005f82015250565b5f6106586017836104de565b915061066382610624565b602082019050919050565b5f6020820190508181035f8301526106858161064c565b905091905056fea2646970667358221220c388e0660078724cc3b43bf52357a5e215b456063b8ec87bc4920ca7f06a0b1364736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/arithmetic/analyzers_natural_language_results/tokensalechallenge/candidate_patches/patch_12/patch_12.sol",
            "function": "constructor",
            "line": 8,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 211,
            "contract": "TokenSaleChallenge",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2001080440040001",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6080604052670de0b6b3a7640000341461004e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610045906100ad565b60405180910390fd5b6100cb565b5f82825260208201905092915050565b7f416d6f756e742073686f756c642062652065786163746c7920312065746865725f82015250565b5f610097602083610053565b91506100a282610063565b602082019050919050565b5f6020820190508181035f8301526100c48161008b565b9050919050565b6106c2806100d85f395ff3fe60806040526004361061003e575f3560e01c806370a0823114610042578063b2fa1c9e1461007e578063d96a094a146100a8578063e4849b32146100c4575b5f80fd5b34801561004d575f80fd5b506100686004803603810190610063919061038c565b6100ec565b60405161007591906103cf565b60405180910390f35b348015610089575f80fd5b50610092610100565b60405161009f9190610402565b60405180910390f35b6100c260048036038101906100bd9190610445565b610111565b005b3480156100cf575f80fd5b506100ea60048036038101906100e59190610445565b6101bb565b005b5f602052805f5260405f205f915090505481565b5f670de0b6b3a76400004710905090565b670de0b6b3a764000081610125919061049d565b3414610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d90610538565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101b19190610556565b9250508190555050565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561023a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610231906105d3565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461028591906105f1565b925050819055505f670de0b6b3a7640000826102a1919061049d565b9050804710156102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd9061066e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610329573d5f803e3d5ffd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61035b82610332565b9050919050565b61036b81610351565b8114610375575f80fd5b50565b5f8135905061038681610362565b92915050565b5f602082840312156103a1576103a061032e565b5b5f6103ae84828501610378565b91505092915050565b5f819050919050565b6103c9816103b7565b82525050565b5f6020820190506103e25f8301846103c0565b92915050565b5f8115159050919050565b6103fc816103e8565b82525050565b5f6020820190506104155f8301846103f3565b92915050565b610424816103b7565b811461042e575f80fd5b50565b5f8135905061043f8161041b565b92915050565b5f6020828403121561045a5761045961032e565b5b5f61046784828501610431565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6104a7826103b7565b91506104b2836103b7565b92508282026104c0816103b7565b915082820484148315176104d7576104d6610470565b5b5092915050565b5f82825260208201905092915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f610522600e836104de565b915061052d826104ee565b602082019050919050565b5f6020820190508181035f83015261054f81610516565b9050919050565b5f610560826103b7565b915061056b836103b7565b925082820190508082111561058357610582610470565b5b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6105bd6014836104de565b91506105c882610589565b602082019050919050565b5f6020820190508181035f8301526105ea816105b1565b9050919050565b5f6105fb826103b7565b9150610606836103b7565b925082820390508181111561061e5761061d610470565b5b92915050565b7f436f6e74726163742062616c616e6365206973206c6f770000000000000000005f82015250565b5f6106586017836104de565b915061066382610624565b602082019050919050565b5f6020820190508181035f8301526106858161064c565b905091905056fea2646970667358221220c388e0660078724cc3b43bf52357a5e215b456063b8ec87bc4920ca7f06a0b1364736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0xde0b6b3a7640000"
                    }
                ]
            },
            "filename": "experiment_results/trt_results_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/arithmetic/analyzers_natural_language_results/tokensalechallenge/candidate_patches/patch_12/patch_12.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
