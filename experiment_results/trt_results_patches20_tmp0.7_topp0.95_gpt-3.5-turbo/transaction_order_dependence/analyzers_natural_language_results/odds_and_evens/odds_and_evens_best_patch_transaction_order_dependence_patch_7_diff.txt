- pragma solidity ^0.4.2;
+ pragma solidity ^0.4.24;
?                       +
  
  contract OddsAndEvens {
      struct Player {
          address addr;
          uint number;
      }
  
      Player[2] public players;
  
      uint8 tot;
      address owner;
  
-     function OddsAndEvens() {
+     constructor() public {
          owner = msg.sender;
      }
  
-     function play(uint number) payable {
+     function play(uint number) public payable {
?                                +++++++
-         if (msg.value != 1 ether) throw;
?          ^^           -          ------
+         require(msg.value == 1 ether);
?         ++++ ^^            +
  
          players[tot] = Player(msg.sender, number);
          tot++;
  
+         if (tot == 2) {
-         if (tot == 2) andTheWinnerIs();
?         ^^^^^^^^^^^^^
+             andTheWinnerIs();
?         ^^^
+         }
      }
  
      function andTheWinnerIs() private {
          bool res;
          uint n = players[0].number + players[1].number;
          if (n % 2 == 0) {
-             res = players[0].addr.send(1800 finney);
?                                     ^^
+             res = players[0].addr.transfer(1800 finney);
?                                   ++++ + ^
          } else {
-             res = players[1].addr.send(1800 finney);
?                                     ^^
+             res = players[1].addr.transfer(1800 finney);
?                                   ++++ + ^
          }
  
          delete players;
          tot = 0;
      }
  
-     function getProfit() {
+     function getProfit() public {
?                          +++++++
-         if (msg.sender != owner) throw;
?          ^^            -        ------
+         require(msg.sender == owner);
?         ++++ ^^             +
-         bool res = msg.sender.send(this.balance);
?                                 ^
+         bool res = msg.sender.transfer(address(this).balance);
?                               ++++ + ^^^ +++++     +
      }
- }
+ }