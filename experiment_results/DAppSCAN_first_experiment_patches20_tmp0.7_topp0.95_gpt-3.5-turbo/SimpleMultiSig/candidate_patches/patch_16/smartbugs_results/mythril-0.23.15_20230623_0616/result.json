{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 13,
            "contract": "SimpleMultiSig",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801562000010575f80fd5b50604051620014c9380380620014c983398181016040528101906200003691906200057f565b600a8251111580156200004a575081518311155b80156200005657505f83115b6200005f575f80fd5b5f805b8351811015620001da578173ffffffffffffffffffffffffffffffffffffffff16848281518110620000995762000098620005f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1611801562000129575060025f858381518110620000d957620000d8620005f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b62000132575f80fd5b600160025f8684815181106200014d576200014c620005f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550838181518110620001ba57620001b9620005f7565b5b602002602001015191508080620001d19062000651565b91505062000062565b508260039080519060200190620001f3929190620002c0565b50836001819055507fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac564727fb7a0bfa1b79f2443f4d73ebb9259cddbcd510b18be6fc4da7d1aa7b1786e73e67fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc684307f251543af6a222378665a76fe38dbceae4871a070b7fdaf5c6c30cf758dc33cc05f1b6040516020016200029a96959493929190620006d9565b604051602081830303815290604052805190602001206004819055505050505062000744565b828054828255905f5260205f2090810192821562000339579160200282015b8281111562000338578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620002df565b5b5090506200034891906200034c565b5090565b5b8082111562000365575f815f9055506001016200034d565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6200038e816200037a565b811462000399575f80fd5b50565b5f81519050620003ac8162000383565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003fe82620003b6565b810181811067ffffffffffffffff8211171562000420576200041f620003c6565b5b80604052505050565b5f6200043462000369565b9050620004428282620003f3565b919050565b5f67ffffffffffffffff821115620004645762000463620003c6565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620004a48262000479565b9050919050565b620004b68162000498565b8114620004c1575f80fd5b50565b5f81519050620004d481620004ab565b92915050565b5f620004f0620004ea8462000447565b62000429565b9050808382526020820190506020840283018581111562000516576200051562000475565b5b835b818110156200054357806200052e8882620004c4565b84526020840193505060208101905062000518565b5050509392505050565b5f82601f830112620005645762000563620003b2565b5b815162000576848260208601620004da565b91505092915050565b5f805f6060848603121562000599576200059862000372565b5b5f620005a8868287016200039c565b935050602084015167ffffffffffffffff811115620005cc57620005cb62000376565b5b620005da868287016200054d565b9250506040620005ed868287016200039c565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200065d826200037a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000692576200069162000624565b5b600182019050919050565b5f819050919050565b620006b1816200069d565b82525050565b620006c2816200037a565b82525050565b620006d38162000498565b82525050565b5f60c082019050620006ee5f830189620006a6565b620006fd6020830188620006a6565b6200070c6040830187620006a6565b6200071b6060830186620006b7565b6200072a6080830185620006c8565b6200073960a0830184620006a6565b979650505050505050565b610d7780620007525f395ff3fe60806040526004361061004d575f3560e01c80632f54bf6e1461005857806342cde4e814610094578063a0ab9653146100be578063aa5df9e2146100e6578063affed0e01461012257610054565b3661005457005b5f80fd5b348015610063575f80fd5b5061007e6004803603810190610079919061051d565b61014c565b60405161008b9190610562565b60405180910390f35b34801561009f575f80fd5b506100a8610169565b6040516100b59190610593565b60405180910390f35b3480156100c9575f80fd5b506100e460048036038101906100df91906108ff565b61016f565b005b3480156100f1575f80fd5b5061010c60048036038101906101079190610a20565b610472565b6040516101199190610a5a565b60405180910390f35b34801561012d575f80fd5b506101366104ad565b6040516101439190610593565b60405180910390f35b6002602052805f5260405f205f915054906101000a900460ff1681565b60015481565b60015487511461017d575f80fd5b8551875114801561018f575087518751145b610197575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806101fc57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b610204575f80fd5b5f7f3ee892349ae4bbe61dce18f95115b5dc02daf49204cc602458cd4c1f540d56d7868686805190602001205f54878760405160200161024a9796959493929190610a82565b6040516020818303038152906040528051906020012090505f60045482604051602001610278929190610b63565b6040516020818303038152906040528051906020012090505f805b6001548110156103da575f6001848e84815181106102b4576102b3610b99565b5b60200260200101518e85815181106102cf576102ce610b99565b5b60200260200101518e86815181106102ea576102e9610b99565b5b60200260200101516040515f815260200160405260405161030e9493929190610bd5565b6020604051602081039080840390855afa15801561032e573d5f803e3d5ffd5b5050506020604051035190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161180156103bb575060025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6103c3575f80fd5b8092505080806103d290610c45565b915050610293565b5060015f546103e99190610c8c565b5f819055505f8873ffffffffffffffffffffffffffffffffffffffff16888690896040516104179190610d2b565b5f60405180830381858888f193505050503d805f8114610452576040519150601f19603f3d011682016040523d82523d5f602084013e610457565b606091505b5050905080610464575f80fd5b505050505050505050505050565b60038181548110610481575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5481565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104ec826104c3565b9050919050565b6104fc816104e2565b8114610506575f80fd5b50565b5f81359050610517816104f3565b92915050565b5f60208284031215610532576105316104bb565b5b5f61053f84828501610509565b91505092915050565b5f8115159050919050565b61055c81610548565b82525050565b5f6020820190506105755f830184610553565b92915050565b5f819050919050565b61058d8161057b565b82525050565b5f6020820190506105a65f830184610584565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105f6826105b0565b810181811067ffffffffffffffff82111715610615576106146105c0565b5b80604052505050565b5f6106276104b2565b905061063382826105ed565b919050565b5f67ffffffffffffffff821115610652576106516105c0565b5b602082029050602081019050919050565b5f80fd5b5f60ff82169050919050565b61067c81610667565b8114610686575f80fd5b50565b5f8135905061069781610673565b92915050565b5f6106af6106aa84610638565b61061e565b905080838252602082019050602084028301858111156106d2576106d1610663565b5b835b818110156106fb57806106e78882610689565b8452602084019350506020810190506106d4565b5050509392505050565b5f82601f830112610719576107186105ac565b5b813561072984826020860161069d565b91505092915050565b5f67ffffffffffffffff82111561074c5761074b6105c0565b5b602082029050602081019050919050565b5f819050919050565b61076f8161075d565b8114610779575f80fd5b50565b5f8135905061078a81610766565b92915050565b5f6107a261079d84610732565b61061e565b905080838252602082019050602084028301858111156107c5576107c4610663565b5b835b818110156107ee57806107da888261077c565b8452602084019350506020810190506107c7565b5050509392505050565b5f82601f83011261080c5761080b6105ac565b5b813561081c848260208601610790565b91505092915050565b61082e8161057b565b8114610838575f80fd5b50565b5f8135905061084981610825565b92915050565b5f80fd5b5f67ffffffffffffffff82111561086d5761086c6105c0565b5b610876826105b0565b9050602081019050919050565b828183375f83830152505050565b5f6108a361089e84610853565b61061e565b9050828152602081018484840111156108bf576108be61084f565b5b6108ca848285610883565b509392505050565b5f82601f8301126108e6576108e56105ac565b5b81356108f6848260208601610891565b91505092915050565b5f805f805f805f80610100898b03121561091c5761091b6104bb565b5b5f89013567ffffffffffffffff811115610939576109386104bf565b5b6109458b828c01610705565b985050602089013567ffffffffffffffff811115610966576109656104bf565b5b6109728b828c016107f8565b975050604089013567ffffffffffffffff811115610993576109926104bf565b5b61099f8b828c016107f8565b96505060606109b08b828c01610509565b95505060806109c18b828c0161083b565b94505060a089013567ffffffffffffffff8111156109e2576109e16104bf565b5b6109ee8b828c016108d2565b93505060c06109ff8b828c01610509565b92505060e0610a108b828c0161083b565b9150509295985092959890939650565b5f60208284031215610a3557610a346104bb565b5b5f610a428482850161083b565b91505092915050565b610a54816104e2565b82525050565b5f602082019050610a6d5f830184610a4b565b92915050565b610a7c8161075d565b82525050565b5f60e082019050610a955f83018a610a73565b610aa26020830189610a4b565b610aaf6040830188610584565b610abc6060830187610a73565b610ac96080830186610584565b610ad660a0830185610a4b565b610ae360c0830184610584565b98975050505050505050565b5f81905092915050565b7f19010000000000000000000000000000000000000000000000000000000000005f82015250565b5f610b2d600283610aef565b9150610b3882610af9565b600282019050919050565b5f819050919050565b610b5d610b588261075d565b610b43565b82525050565b5f610b6d82610b21565b9150610b798285610b4c565b602082019150610b898284610b4c565b6020820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b610bcf81610667565b82525050565b5f608082019050610be85f830187610a73565b610bf56020830186610bc6565b610c026040830185610a73565b610c0f6060830184610a73565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c4f8261057b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c8157610c80610c18565b5b600182019050919050565b5f610c968261057b565b9150610ca18361057b565b9250828201905080821115610cb957610cb8610c18565b5b92915050565b5f81519050919050565b5f81905092915050565b5f5b83811015610cf0578082015181840152602081019050610cd5565b5f8484015250505050565b5f610d0582610cbf565b610d0f8185610cc9565b9350610d1f818560208601610cd3565b80840191505092915050565b5f610d368284610cfb565b91508190509291505056fea2646970667358221220a5efe0e5400873a59eab4dc11101ca0707792d8c661560293f9fdf7e09676fa964736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "experiment_results/DAppSCAN_first_experiment_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/SimpleMultiSig/candidate_patches/patch_16/patch_16.sol",
            "function": "constructor",
            "line": 17,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
