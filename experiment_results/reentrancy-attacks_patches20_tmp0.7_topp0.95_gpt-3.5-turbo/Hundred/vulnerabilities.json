{
  "smartbugs_completed": "list index out of range",
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_53"
      ],
      "vulnerability_findings": [
        {
          "name": "controlled-delegatecall",
          "vulnerability_from_line": 915,
          "vulnerability_to_line": 923,
          "vulnerability_code": "",
          "message": "CErc20Delegator.delegateTo (Hundred.sol#915-923) uses delegatecall to a input-controlled function id\n\t(success,returnData) = callee.delegatecall(data) (Hundred.sol#916)\n"
        },
        {
          "name": "controlled-delegatecall",
          "vulnerability_from_line": 956,
          "vulnerability_to_line": 970,
          "vulnerability_code": "",
          "message": "CErc20Delegator.fallback (Hundred.sol#956-970) uses delegatecall to a input-controlled function id\n\t(success) = implementation.delegatecall(msg.data) (Hundred.sol#960)\n"
        },
        {
          "name": "constant-function",
          "vulnerability_from_line": 942,
          "vulnerability_to_line": 950,
          "vulnerability_code": "",
          "message": "CErc20Delegator.delegateToViewImplementation (Hundred.sol#942-950) is declared view but contains assembly code\n"
        },
        {
          "name": "erc20-interface",
          "vulnerability_from_line": 125,
          "vulnerability_to_line": 187,
          "vulnerability_code": "    uint internal constant borrowRateMaxMantissa = 0.0005e16;\n\n        uint internal constant reserveFactorMaxMantissa = 1e18;\n\n        address payable public admin;\n\n        address payable public pendingAdmin;\n\n        ComptrollerInterface public comptroller;\n\n        InterestRateModel public interestRateModel;\n\n        uint internal initialExchangeRateMantissa;\n\n        uint public reserveFactorMantissa;\n\n        uint public accrualBlockNumber;\n\n        uint public borrowIndex;\n\n        uint public totalBorrows;\n\n        uint public totalReserves;\n\n        uint public totalSupply;\n\n        mapping (address => uint) internal accountTokens;\n\n        mapping (address => mapping (address => uint)) internal transferAllowances;\n\n        struct BorrowSnapshot {\n        uint principal;\n        uint interestIndex;\n    }\n\n        mapping(address => BorrowSnapshot) internal accountBorrows;\n}\n\ncontract CTokenInterface is CTokenStorage {\n        bool public constant isCToken = true;\n\n\n    \n        event AccrueInterest(uint cashPrior, uint interestAccumulated, uint borrowIndex, uint totalBorrows);\n\n        event Mint(address minter, uint mintAmount, uint mintTokens);\n\n        event Redeem(address redeemer, uint redeemAmount, uint redeemTokens);\n\n        event Borrow(address borrower, uint borrowAmount, uint accountBorrows, uint totalBorrows);\n\n        event RepayBorrow(address payer, address borrower, uint repayAmount, uint accountBorrows, uint totalBorrows);\n\n        event LiquidateBorrow(address liquidator, address borrower, uint repayAmount, address cTokenCollateral, uint seizeTokens);\n\n\n    \n        event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n\n        event NewAdmin(address oldAdmin, address newAdmin);\n\n        event NewComptroller(ComptrollerInterface oldComptroller, ComptrollerInterface newComptroller);",
          "message": "EIP20NonStandardInterface (Hundred.sol#125-187) has incorrect ERC20 function interface(s):\n\t-transfer (Hundred.sol#151)\n\t-transferFrom (Hundred.sol#165)\n"
        },
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": 568,
          "vulnerability_code": "",
          "message": "Reentrancy in CErc20Delegator._setImplementation (Hundred.sol#555-568):\n\tExternal calls:\n\t- delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (Hundred.sol#559)\n\tState variables written after the call(s):\n\t- implementation (Hundred.sol#563)\n"
        },
        {
          "name": "reentrancy-no-eth",
          "vulnerability_from_line": 519,
          "vulnerability_to_line": 547,
          "vulnerability_code": "",
          "message": "Reentrancy in CErc20Delegator.constructor (Hundred.sol#519-547):\n\tExternal calls:\n\t- delegateTo(implementation_,abi.encodeWithSignature(initialize(address,address,address,uint256,string,string,uint8),underlying_,comptroller_,interestRateModel_,initialExchangeRateMantissa_,name_,symbol_,decimals_)) (Hundred.sol#533-540)\n\t- _setImplementation(implementation_,false,becomeImplementationData) (Hundred.sol#543)\n\tState variables written after the call(s):\n\t- admin (Hundred.sol#546)\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 915,
          "vulnerability_to_line": 923,
          "vulnerability_code": "",
          "message": "CErc20Delegator.delegateTo uses assembly (Hundred.sol#915-923)\n\t- Hundred.sol#917-921\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 942,
          "vulnerability_to_line": 950,
          "vulnerability_code": "",
          "message": "CErc20Delegator.delegateToViewImplementation uses assembly (Hundred.sol#942-950)\n\t- Hundred.sol#944-948\n"
        },
        {
          "name": "assembly",
          "vulnerability_from_line": 956,
          "vulnerability_to_line": 970,
          "vulnerability_code": "",
          "message": "CErc20Delegator.fallback uses assembly (Hundred.sol#956-970)\n\t- Hundred.sol#962-969\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 437,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }",
          "message": "CErc20Storage.underlying should be constant (Hundred.sol#437)\nCTokenStorage._notEntered should be constant (Hundred.sol#200)\nCTokenStorage.accrualBlockNumber should be constant (Hundred.sol#261)\nCTokenStorage.borrowIndex should be constant (Hundred.sol#266)\nCTokenStorage.decimals should be constant (Hundred.sol#215)\nCTokenStorage.initialExchangeRateMantissa should be constant (Hundred.sol#251)\nCTokenStorage.name should be constant (Hundred.sol#205)\nCTokenStorage.pendingAdmin should be constant (Hundred.sol#236)\nCTokenStorage.reserveFactorMantissa should be constant (Hundred.sol#256)\nCTokenStorage.symbol should be constant (Hundred.sol#210)\nCTokenStorage.totalBorrows should be constant (Hundred.sol#271)\nCTokenStorage.totalReserves should be constant (Hundred.sol#276)\nCTokenStorage.totalSupply should be constant (Hundred.sol#281)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 415,
          "vulnerability_to_line": null,
          "vulnerability_code": "        function exchangeRateStored() public view returns (uint) {",
          "message": "CTokenInterface.borrowBalanceStored (Hundred.sol#415) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 768,
          "vulnerability_to_line": 771,
          "vulnerability_code": "",
          "message": "CErc20Delegator.borrowBalanceStored (Hundred.sol#768-771) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 777,
          "vulnerability_to_line": 780,
          "vulnerability_code": "",
          "message": "CErc20Delegator.exchangeRateCurrent (Hundred.sol#777-780) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 416,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes memory data = delegateToViewImplementation(abi.encodeWithSignature(\"exchangeRateStored()\"));",
          "message": "CTokenInterface.exchangeRateCurrent (Hundred.sol#416) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 417,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return abi.decode(data, (uint));",
          "message": "CTokenInterface.exchangeRateStored (Hundred.sol#417) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 787,
          "vulnerability_to_line": 790,
          "vulnerability_code": "",
          "message": "CErc20Delegator.exchangeRateStored (Hundred.sol#787-790) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 419,
          "vulnerability_to_line": null,
          "vulnerability_code": "",
          "message": "CTokenInterface.accrueInterest (Hundred.sol#419) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 806,
          "vulnerability_to_line": 809,
          "vulnerability_code": "",
          "message": "CErc20Delegator.accrueInterest (Hundred.sol#806-809) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 852,
          "vulnerability_to_line": 855,
          "vulnerability_code": "",
          "message": "CErc20Delegator._setComptroller (Hundred.sol#852-855) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 427,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return abi.decode(data, (uint));",
          "message": "CTokenInterface._setComptroller (Hundred.sol#427) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 903,
          "vulnerability_to_line": 906,
          "vulnerability_code": "",
          "message": "CErc20Delegator._setInterestRateModel (Hundred.sol#903-906) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": null,
          "vulnerability_code": "        function seize(address liquidator, address borrower, uint seizeTokens) external returns (uint) {",
          "message": "CTokenInterface._setInterestRateModel (Hundred.sol#430) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 487,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return delegateTo(implementation, data);",
          "message": "CDelegateInterface._becomeImplementation (Hundred.sol#487) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 492,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {",
          "message": "CDelegateInterface._resignImplementation (Hundred.sol#492) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ",
          "message": "Detected issues with version pragma in Hundred.sol:\n\t- pragma solidity^0.5.16 (Hundred.sol#9): it allows old versions\n\t- pragma solidity^0.5.16 (Hundred.sol#84): it allows old versions\n\t- pragma solidity^0.5.16 (Hundred.sol#118): it allows old versions\n\t- pragma solidity^0.5.16 (Hundred.sol#192): it allows old versions\n\t- pragma solidity^0.5.16 (Hundred.sol#498): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 915,
          "vulnerability_to_line": 923,
          "vulnerability_code": "",
          "message": "Low level call in CErc20Delegator.delegateTo (Hundred.sol#915-923):\n\t-(success,returnData) = callee.delegatecall(data) Hundred.sol#916\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 942,
          "vulnerability_to_line": 950,
          "vulnerability_code": "",
          "message": "Low level call in CErc20Delegator.delegateToViewImplementation (Hundred.sol#942-950):\n\t-(success,returnData) = address(this).staticcall(abi.encodeWithSignature(delegateToImplementation(bytes),data)) Hundred.sol#943\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 956,
          "vulnerability_to_line": 970,
          "vulnerability_code": "",
          "message": "Low level call in CErc20Delegator.fallback (Hundred.sol#956-970):\n\t-(success) = implementation.delegatecall(msg.data) Hundred.sol#960\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    ",
          "message": "Constant 'ComptrollerInterface.isComptroller' (Hundred.sol#13) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 92,
          "vulnerability_to_line": null,
          "vulnerability_code": "",
          "message": "Constant 'InterestRateModel.isInterestRateModel' (Hundred.sol#92) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 200,
          "vulnerability_to_line": null,
          "vulnerability_code": "        event Failure(uint error, uint info, uint detail);",
          "message": "Variable 'CTokenStorage._notEntered' (Hundred.sol#200) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 221,
          "vulnerability_to_line": null,
          "vulnerability_code": "",
          "message": "Constant 'CTokenStorage.borrowRateMaxMantissa' (Hundred.sol#221) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 226,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function _setComptroller(ComptrollerInterface newComptroller) public returns (uint);",
          "message": "Constant 'CTokenStorage.reserveFactorMaxMantissa' (Hundred.sol#226) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 425,
          "vulnerability_to_line": null,
          "vulnerability_code": "        function accrueInterest() public returns (uint) {",
          "message": "Function 'CTokenInterface._setPendingAdmin' (Hundred.sol#425) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 426,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes memory data = delegateToImplementation(abi.encodeWithSignature(\"accrueInterest()\"));",
          "message": "Function 'CTokenInterface._acceptAdmin' (Hundred.sol#426) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 427,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return abi.decode(data, (uint));",
          "message": "Function 'CTokenInterface._setComptroller' (Hundred.sol#427) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 428,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }",
          "message": "Function 'CTokenInterface._setReserveFactor' (Hundred.sol#428) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 429,
          "vulnerability_to_line": null,
          "vulnerability_code": "",
          "message": "Function 'CTokenInterface._reduceReserves' (Hundred.sol#429) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 430,
          "vulnerability_to_line": null,
          "vulnerability_code": "        function seize(address liquidator, address borrower, uint seizeTokens) external returns (uint) {",
          "message": "Function 'CTokenInterface._setInterestRateModel' (Hundred.sol#430) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 313,
          "vulnerability_to_line": null,
          "vulnerability_code": "    }",
          "message": "Constant 'CTokenInterface.isCToken' (Hundred.sol#313) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 456,
          "vulnerability_to_line": null,
          "vulnerability_code": "        function _acceptAdmin() external returns (uint) {",
          "message": "Function 'CErc20Interface._addReserves' (Hundred.sol#456) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 478,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {",
          "message": "Function 'CDelegatorInterface._setImplementation' (Hundred.sol#478) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 487,
          "vulnerability_to_line": null,
          "vulnerability_code": "        return delegateTo(implementation, data);",
          "message": "Function 'CDelegateInterface._becomeImplementation' (Hundred.sol#487) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 492,
          "vulnerability_to_line": null,
          "vulnerability_code": "        assembly {",
          "message": "Function 'CDelegateInterface._resignImplementation' (Hundred.sol#492) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 842,
          "vulnerability_to_line": 845,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._setPendingAdmin' (Hundred.sol#842-845) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 872,
          "vulnerability_to_line": 875,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._acceptAdmin' (Hundred.sol#872-875) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 852,
          "vulnerability_to_line": 855,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._setComptroller' (Hundred.sol#852-855) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 862,
          "vulnerability_to_line": 865,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._setReserveFactor' (Hundred.sol#862-865) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 892,
          "vulnerability_to_line": 895,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._reduceReserves' (Hundred.sol#892-895) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 903,
          "vulnerability_to_line": 906,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._setInterestRateModel' (Hundred.sol#903-906) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 882,
          "vulnerability_to_line": 885,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._addReserves' (Hundred.sol#882-885) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 555,
          "vulnerability_to_line": 568,
          "vulnerability_code": "",
          "message": "Function 'CErc20Delegator._setImplementation' (Hundred.sol#555-568) is not in mixedCase\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 200,
          "vulnerability_to_line": null,
          "vulnerability_code": "        event Failure(uint error, uint info, uint detail);",
          "message": "CTokenStorage._notEntered (Hundred.sol#200) is never used in CErc20Delegator\nCTokenStorage.borrowRateMaxMantissa (Hundred.sol#221) is never used in CErc20Delegator\nCTokenStorage.reserveFactorMaxMantissa (Hundred.sol#226) is never used in CErc20Delegator\nCTokenStorage.initialExchangeRateMantissa (Hundred.sol#251) is never used in CErc20Delegator\nCTokenStorage.accountTokens (Hundred.sol#286) is never used in CErc20Delegator\nCTokenStorage.transferAllowances (Hundred.sol#291) is never used in CErc20Delegator\nCTokenStorage.accountBorrows (Hundred.sol#306) is never used in CErc20Delegator\n"
        }
      ]
    }
  }
}