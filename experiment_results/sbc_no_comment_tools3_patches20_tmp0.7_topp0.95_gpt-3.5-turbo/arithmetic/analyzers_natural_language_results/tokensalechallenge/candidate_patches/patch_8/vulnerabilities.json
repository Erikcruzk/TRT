{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function isComplete() public view returns (bool) {\n        return totalEther >= 1 ether;",
          "message": "TokenSaleChallenge.isComplete (patch_8.sol#18-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 30,
          "vulnerability_code": "    function buy(uint256 numTokens) public payable {\n        require(msg.value == numTokens * PRICE_PER_TOKEN);\n\n        balanceOf[msg.sender] += numTokens;\n        totalTokens += numTokens;\n        totalEther += msg.value;\n\n        emit Buy(msg.sender, numTokens);",
          "message": "TokenSaleChallenge.buy (patch_8.sol#22-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function sell(uint256 numTokens) public {\n        require(balanceOf[msg.sender] >= numTokens);\n\n        balanceOf[msg.sender] -= numTokens;\n        totalTokens -= numTokens;\n        totalEther -= numTokens * PRICE_PER_TOKEN;\n\n        msg.sender.transfer(numTokens * PRICE_PER_TOKEN);\n\n        emit Sell(msg.sender, numTokens);",
          "message": "TokenSaleChallenge.sell (patch_8.sol#32-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 50,
          "vulnerability_code": "    function withdraw() public {\n        require(msg.sender == owner);\n        require(totalEther >= 1 ether);\n\n        owner.transfer(totalEther);\n        totalEther = 0;",
          "message": "TokenSaleChallenge.withdraw (patch_8.sol#44-50) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.21;",
          "message": "Detected issues with version pragma in patch_8.sol:\n\t- pragma solidity^0.4.21 (patch_8.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function TokenSaleChallenge() public {\n        owner = msg.sender;",
          "message": "Function 'TokenSaleChallenge.TokenSaleChallenge' (patch_8.sol#14-16) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_SEGV"
      ],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}