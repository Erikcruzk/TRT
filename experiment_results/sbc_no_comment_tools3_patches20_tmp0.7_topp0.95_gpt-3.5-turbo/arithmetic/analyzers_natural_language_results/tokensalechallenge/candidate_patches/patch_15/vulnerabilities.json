{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function isComplete() public view returns (bool) {\n        return address(this).balance >= 1 ether;",
          "message": "TokenSaleChallenge.isComplete (patch_15.sol#13-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function buy(uint256 numTokens) public payable {\n        require(msg.value == numTokens * PRICE_PER_TOKEN);\n        balanceOf[msg.sender] += numTokens;",
          "message": "TokenSaleChallenge.buy (patch_15.sol#17-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function sell(uint256 numTokens) public {\n        require(balanceOf[msg.sender] >= numTokens);\n        balanceOf[msg.sender] -= numTokens;\n        msg.sender.transfer(numTokens * PRICE_PER_TOKEN);",
          "message": "TokenSaleChallenge.sell (patch_15.sol#22-26) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.21;",
          "message": "Detected issues with version pragma in patch_15.sol:\n\t- pragma solidity^0.4.21 (patch_15.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function TokenSaleChallenge() public payable {\n        player = msg.sender;\n        require(msg.value == 1 ether);",
          "message": "Function 'TokenSaleChallenge.TokenSaleChallenge' (patch_15.sol#8-11) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": [
        {
          "name": "Integer Arithmetic Bugs (SWC 101)",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        require(msg.value == numTokens * PRICE_PER_TOKEN);",
          "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101"
        }
      ]
    }
  }
}