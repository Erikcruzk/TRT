{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_28"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;",
          "message": "Owned.changeOwner (patch_18.sol#17-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function acceptOwnership() public {\n        if (msg.sender == newOwner) {\n            owner = newOwner;\n        }",
          "message": "Owned.acceptOwnership (patch_18.sol#21-25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function execute(address _dst, uint256 _value, bytes _data) public onlyOwner {\n        require(_dst.call.value(_value)(_data));",
          "message": "Owned.execute (patch_18.sol#27-29) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 66,
          "vulnerability_to_line": 68,
          "vulnerability_code": "    function numberOfMajorEvents() public view returns (uint256) {\n        return majorEvents.length;",
          "message": "Marriage.numberOfMajorEvents (patch_18.sol#66-68) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 70,
          "vulnerability_to_line": 72,
          "vulnerability_code": "    function numberOfMessages() public view returns (uint256) {\n        return messages.length;",
          "message": "Marriage.numberOfMessages (patch_18.sol#70-72) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 74,
          "vulnerability_to_line": 88,
          "vulnerability_code": "    function createMarriage(\n        string _partner1,\n        string _partner2,\n        string _vows,\n        string _url\n    ) public onlyOwner {\n        require(majorEvents.length == 0);\n        partner1 = _partner1;\n        partner2 = _partner2;\n        marriageDate = now;\n        vows = _vows;\n        marriageStatus = \"Married\";\n        majorEvents.push(Event(now, \"Marriage\", vows, _url));\n        emit MajorEvent(\"Marriage\", vows, _url);",
          "message": "Marriage.createMarriage (patch_18.sol#74-88) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": 93,
          "vulnerability_code": "    function setStatus(string _status, string _url) public onlyOwner {\n        marriageStatus = _status;\n        setMajorEvent(\"Changed Status\", _status, _url);",
          "message": "Marriage.setStatus (patch_18.sol#90-93) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 104,
          "vulnerability_to_line": 114,
          "vulnerability_code": "    function sendMessage(\n        string _nameFrom,\n        string _text,\n        string _url\n    ) public payable areMarried {\n        if (msg.value > 0) {\n            owner.transfer(msg.value);\n        }\n        messages.push(Message(now, _nameFrom, _text, _url, msg.value));\n        emit MessageSent(_nameFrom, _text, _url, msg.value);",
          "message": "Marriage.sendMessage (patch_18.sol#104-114) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.16;",
          "message": "Detected issues with version pragma in patch_18.sol:\n\t- pragma solidity^0.4.16 (patch_18.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function execute(address _dst, uint256 _value, bytes _data) public onlyOwner {\n        require(_dst.call.value(_value)(_data));",
          "message": "Low level call in Owned.execute (patch_18.sol#27-29):\n\t-require(bool)(_dst.call.value(_value)(_data)) patch_18.sol#28\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function Owned() public {\n        owner = msg.sender;",
          "message": "Function 'Owned.Owned' (patch_18.sol#11-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {",
          "message": "Parameter '_newOwner' of Owned.changeOwner (patch_18.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint256 _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_dst' of Owned.execute (patch_18.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint256 _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_value' of Owned.execute (patch_18.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint256 _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_data' of Owned.execute (patch_18.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 62,
          "vulnerability_to_line": 64,
          "vulnerability_code": "    function Marriage() public {\n        owner = msg.sender;",
          "message": "Function 'Marriage.Marriage' (patch_18.sol#62-64) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 75,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _partner1,",
          "message": "Parameter '_partner1' of Marriage.createMarriage (patch_18.sol#75) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 76,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _partner2,",
          "message": "Parameter '_partner2' of Marriage.createMarriage (patch_18.sol#76) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 77,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _vows,",
          "message": "Parameter '_vows' of Marriage.createMarriage (patch_18.sol#77) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 78,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _url",
          "message": "Parameter '_url' of Marriage.createMarriage (patch_18.sol#78) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setStatus(string _status, string _url) public onlyOwner {",
          "message": "Parameter '_status' of Marriage.setStatus (patch_18.sol#90) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 90,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setStatus(string _status, string _url) public onlyOwner {",
          "message": "Parameter '_url' of Marriage.setStatus (patch_18.sol#90) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 96,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _name,",
          "message": "Parameter '_name' of Marriage.setMajorEvent (patch_18.sol#96) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 97,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _description,",
          "message": "Parameter '_description' of Marriage.setMajorEvent (patch_18.sol#97) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 98,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _url",
          "message": "Parameter '_url' of Marriage.setMajorEvent (patch_18.sol#98) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 105,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _nameFrom,",
          "message": "Parameter '_nameFrom' of Marriage.sendMessage (patch_18.sol#105) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 106,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _text,",
          "message": "Parameter '_text' of Marriage.sendMessage (patch_18.sol#106) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 107,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string _url",
          "message": "Parameter '_url' of Marriage.sendMessage (patch_18.sol#107) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}