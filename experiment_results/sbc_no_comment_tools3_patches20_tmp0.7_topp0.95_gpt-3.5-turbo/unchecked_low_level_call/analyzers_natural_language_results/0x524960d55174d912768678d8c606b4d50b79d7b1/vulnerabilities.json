{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function transfer() returns (bool) {\n        address contract_address;\n        contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;\n        address c1;\n        address c2;\n        uint256 k;\n        k = 1;\n\n        c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\n\n        contract_address.call(\"register\", \"CentraToken\");\n        if (\n            !contract_address.call(\n                bytes4(keccak256(\"transfer(address,uint256)\")),\n                c2,\n                k\n            )\n        ) return false;\n\n        return true;",
          "message": "Centra4.transfer (0x524960d55174d912768678d8c606b4d50b79d7b1.sol#4-24) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.13;",
          "message": "Detected issues with version pragma in 0x524960d55174d912768678d8c606b4d50b79d7b1.sol:\n\t- pragma solidity^0.4.13 (0x524960d55174d912768678d8c606b4d50b79d7b1.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function transfer() returns (bool) {\n        address contract_address;\n        contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;\n        address c1;\n        address c2;\n        uint256 k;\n        k = 1;\n\n        c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\n\n        contract_address.call(\"register\", \"CentraToken\");\n        if (\n            !contract_address.call(\n                bytes4(keccak256(\"transfer(address,uint256)\")),\n                c2,\n                k\n            )\n        ) return false;\n\n        return true;",
          "message": "Low level call in Centra4.transfer (0x524960d55174d912768678d8c606b4d50b79d7b1.sol#4-24):\n\t-contract_address.call(register,CentraToken) 0x524960d55174d912768678d8c606b4d50b79d7b1.sol#14\n\t-! contract_address.call(bytes4(keccak256()(transfer(address,uint256))),c2,k) 0x524960d55174d912768678d8c606b4d50b79d7b1.sol#15-21\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": null,
          "vulnerability_code": "        contract_address.call(\"register\", \"CentraToken\");",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}