{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_15"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function newPuppet() public returns (address newPuppet) {",
          "message": "Splitter.newPuppet.newPuppet (local variable @ 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#32) shadows:\n\t- Splitter.newPuppet (function @ 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#32-37)\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _addy;",
          "message": "Splitter._addy should be constant (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#7)\nSplitter._count should be constant (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#9)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function withdraw() public {\n        require(msg.sender == owner);\n        owner.transfer(address(this).balance);",
          "message": "Splitter.withdraw (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#23-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 30,
          "vulnerability_code": "    function getPuppetCount() public constant returns (uint256 puppetCount) {\n        return puppets.length;",
          "message": "Splitter.getPuppetCount (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#28-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function setExtra(uint256 _id, address _newExtra) public {\n        require(_newExtra != address(0));\n        extra[_id] = _newExtra;",
          "message": "Splitter.setExtra (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#39-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 55,
          "vulnerability_code": "    function fundPuppets() public payable {\n        require(msg.sender == owner);\n        _share = SafeMath.div(msg.value, 4);\n\n        extra[0].call.value(_share).gas(800000)();\n\n        extra[1].call.value(_share).gas(800000)();\n\n        extra[2].call.value(_share).gas(800000)();\n\n        extra[3].call.value(_share).gas(800000)();",
          "message": "Splitter.fundPuppets (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#44-55) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "Splitter.fallback (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#57) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 73,
          "vulnerability_code": "    function() public payable {\n        if (msg.sender != target[0]) {\n            target[0].call.value(msg.value).gas(600000)();\n        }",
          "message": "Puppet.fallback (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69-73) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 75,
          "vulnerability_to_line": 78,
          "vulnerability_code": "    function withdraw() public {\n        require(msg.sender == master[0]);\n        master[0].transfer(address(this).balance);",
          "message": "Puppet.withdraw (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#75-78) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;",
          "message": "Detected issues with version pragma in 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol:\n\t- pragma solidity^0.4.23 (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 55,
          "vulnerability_code": "    function fundPuppets() public payable {\n        require(msg.sender == owner);\n        _share = SafeMath.div(msg.value, 4);\n\n        extra[0].call.value(_share).gas(800000)();\n\n        extra[1].call.value(_share).gas(800000)();\n\n        extra[2].call.value(_share).gas(800000)();\n\n        extra[3].call.value(_share).gas(800000)();",
          "message": "Low level call in Splitter.fundPuppets (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#44-55):\n\t-extra[0].call.value(_share).gas(800000)() 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#48\n\t-extra[1].call.value(_share).gas(800000)() 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#50\n\t-extra[2].call.value(_share).gas(800000)() 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#52\n\t-extra[3].call.value(_share).gas(800000)() 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#54\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 69,
          "vulnerability_to_line": 73,
          "vulnerability_code": "    function() public payable {\n        if (msg.sender != target[0]) {\n            target[0].call.value(msg.value).gas(600000)();\n        }",
          "message": "Low level call in Puppet.fallback (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#69-73):\n\t-target[0].call.value(msg.value).gas(600000)() 0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#71\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setExtra(uint256 _id, address _newExtra) public {",
          "message": "Parameter '_id' of Splitter.setExtra (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#39) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 39,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setExtra(uint256 _id, address _newExtra) public {",
          "message": "Parameter '_newExtra' of Splitter.setExtra (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#39) is not in mixedCase\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address private _addy;",
          "message": "Splitter._addy (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#7) is never used in Splitter\nSplitter._count (0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol#9) is never used in Splitter\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 71,
          "vulnerability_to_line": null,
          "vulnerability_code": "            target[0].call.value(msg.value).gas(600000)();",
          "message": null
        },
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 50,
          "vulnerability_to_line": null,
          "vulnerability_code": "        extra[1].call.value(_share).gas(800000)();",
          "message": null
        },
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "        extra[0].call.value(_share).gas(800000)();",
          "message": null
        }
      ]
    }
  }
}