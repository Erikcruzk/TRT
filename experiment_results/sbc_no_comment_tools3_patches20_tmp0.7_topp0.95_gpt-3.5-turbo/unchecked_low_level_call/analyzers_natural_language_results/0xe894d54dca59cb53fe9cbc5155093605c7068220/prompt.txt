/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.24;

contract airDrop {
    function transfer(
        address from,
        address caddress,
        address[] _tos,
        uint v,
        uint _decimals
    ) public returns (bool) {
        require(_tos.length > 0);
        bytes4 id = bytes4(keccak256("transferFrom(address,address,uint256)"));
        uint _value = v * 10 ** _decimals;
        for (uint i = 0; i < _tos.length; i++) {
            caddress.call(id, from, _tos[i], _value);
        }
        return true;
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Slither Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 4-18:
    function transfer(
        address from,
        address caddress,
        address[] _tos,
        uint v,
        uint _decimals
    ) public returns (bool) {
        require(_tos.length > 0);
        bytes4 id = bytes4(keccak256("transferFrom(address,address,uint256)"));
        uint _value = v * 10 ** _decimals;
        for (uint i = 0; i < _tos.length; i++) {
            caddress.call(id, from, _tos[i], _value);
        }
        return true;
///  Message:Low level call in airDrop.transfer (0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#4-18):
///   	-caddress.call(id,from,_tos[i],_value) 0xe894d54dca59cb53fe9cbc5155093605c7068220.sol#15



/// Repaired Solidity Smart Contract