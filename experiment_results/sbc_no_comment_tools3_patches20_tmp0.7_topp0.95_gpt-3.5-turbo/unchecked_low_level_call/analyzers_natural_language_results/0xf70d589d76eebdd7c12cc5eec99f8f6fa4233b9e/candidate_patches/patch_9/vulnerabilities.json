{
  "smartbugs_completed": true,
  "analyzer_results": {
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_9"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function getFreebie() public payable {\n        if (msg.value > 1 ether) {\n            owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "WhaleGiveaway2.getFreebie (patch_9.sol#8-13) sends eth to arbitrary user\n\tDangerous calls:\n\t- msg.sender.transfer(this.balance) (patch_9.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "WhaleGiveaway2.fallback (patch_9.sol#6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function getFreebie() public payable {\n        if (msg.value > 1 ether) {\n            owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "WhaleGiveaway2.getFreebie (patch_9.sol#8-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function withdraw() public payable {\n        if (msg.sender == 0x7a617c2B05d2A74Ff9bABC9d81E5225C1e01004b) {\n            owner = 0x7a617c2B05d2A74Ff9bABC9d81E5225C1e01004b;\n        }\n        require(msg.sender == owner);\n        owner.transfer(this.balance);",
          "message": "WhaleGiveaway2.withdraw (patch_9.sol#15-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function command(address _address, bytes _data) public payable {\n        require(msg.sender == owner);\n\n        require(_address.call.value(msg.value)(_data));",
          "message": "WhaleGiveaway2.command (patch_9.sol#23-27) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in patch_9.sol:\n\t- pragma solidity^0.4.19 (patch_9.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function command(address _address, bytes _data) public payable {\n        require(msg.sender == owner);\n\n        require(_address.call.value(msg.value)(_data));",
          "message": "Low level call in WhaleGiveaway2.command (patch_9.sol#23-27):\n\t-require(bool)(_address.call.value(msg.value)(_data)) patch_9.sol#26\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function command(address _address, bytes _data) public payable {",
          "message": "Parameter '_address' of WhaleGiveaway2.command (patch_9.sol#23) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function command(address _address, bytes _data) public payable {",
          "message": "Parameter '_data' of WhaleGiveaway2.command (patch_9.sol#23) is not in mixedCase\n"
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}