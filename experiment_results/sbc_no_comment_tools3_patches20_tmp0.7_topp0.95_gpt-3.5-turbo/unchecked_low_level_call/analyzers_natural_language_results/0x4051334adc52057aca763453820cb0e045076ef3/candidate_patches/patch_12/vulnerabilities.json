{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "calls-loop",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "            require(tokenAddress.call(id, from, toAddresses[i], amount));",
          "message": "Airdrop.transfer has external calls inside a loop:\n\t- require(bool)(tokenAddress.call(id,from,toAddresses[i],amount)) (patch_12.sol#13)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function transfer(\n        address from,\n        address tokenAddress,\n        address[] toAddresses,\n        uint amount\n    ) public returns (bool) {\n        require(toAddresses.length > 0);\n        bytes4 id = bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for (uint i = 0; i < toAddresses.length; i++) {\n            require(tokenAddress.call(id, from, toAddresses[i], amount));\n        }\n        return true;",
          "message": "Airdrop.transfer (patch_12.sol#4-16) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": 16,
          "vulnerability_code": "    function transfer(\n        address from,\n        address tokenAddress,\n        address[] toAddresses,\n        uint amount\n    ) public returns (bool) {\n        require(toAddresses.length > 0);\n        bytes4 id = bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for (uint i = 0; i < toAddresses.length; i++) {\n            require(tokenAddress.call(id, from, toAddresses[i], amount));\n        }\n        return true;",
          "message": "Low level call in Airdrop.transfer (patch_12.sol#4-16):\n\t-require(bool)(tokenAddress.call(id,from,toAddresses[i],amount)) patch_12.sol#13\n"
        }
      ]
    }
  }
}