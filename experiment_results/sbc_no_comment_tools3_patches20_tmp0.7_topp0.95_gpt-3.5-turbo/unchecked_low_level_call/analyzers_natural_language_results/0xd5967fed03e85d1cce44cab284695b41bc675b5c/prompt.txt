/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.0;

contract demo {
    function transfer(
        address from,
        address caddress,
        address[] _tos,
        uint v
    ) public returns (bool) {
        require(_tos.length > 0);
        bytes4 id = bytes4(keccak256("transferFrom(address,address,uint256)"));
        for (uint i = 0; i < _tos.length; i++) {
            caddress.call(id, from, _tos[i], v);
        }
        return true;
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Slither Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 4-16:
    function transfer(
        address from,
        address caddress,
        address[] _tos,
        uint v
    ) public returns (bool) {
        require(_tos.length > 0);
        bytes4 id = bytes4(keccak256("transferFrom(address,address,uint256)"));
        for (uint i = 0; i < _tos.length; i++) {
            caddress.call(id, from, _tos[i], v);
        }
        return true;
///  Message:Low level call in demo.transfer (0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#4-16):
///   	-caddress.call(id,from,_tos[i],v) 0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol#13



/// Repaired Solidity Smart Contract