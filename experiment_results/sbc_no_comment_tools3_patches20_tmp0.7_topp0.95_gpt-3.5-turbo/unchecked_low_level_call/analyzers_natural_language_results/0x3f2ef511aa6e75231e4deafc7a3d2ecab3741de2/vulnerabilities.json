{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function redeem() public payable {\n        if (msg.value >= minEligibility) {\n            Owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "WhaleGiveaway2.redeem (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#9-14) sends eth to arbitrary user\n\tDangerous calls:\n\t- msg.sender.transfer(this.balance) (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#12)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "WhaleGiveaway2.fallback (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#7) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function redeem() public payable {\n        if (msg.value >= minEligibility) {\n            Owner.transfer(this.balance);\n            msg.sender.transfer(this.balance);\n        }",
          "message": "WhaleGiveaway2.redeem (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#9-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function withdraw() public payable {\n        if (msg.sender == 0x7a617c2B05d2A74Ff9bABC9d81E5225C1e01004b) {\n            Owner = 0x7a617c2B05d2A74Ff9bABC9d81E5225C1e01004b;\n        }\n        require(msg.sender == Owner);\n        Owner.transfer(this.balance);",
          "message": "WhaleGiveaway2.withdraw (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#16-22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "WhaleGiveaway2.Command (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#24-28) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol:\n\t- pragma solidity^0.4.19 (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "Low level call in WhaleGiveaway2.Command (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#24-28):\n\t-adr.call.value(msg.value)(data) 0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#27\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 24,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function Command(address adr, bytes data) public payable {\n        require(msg.sender == Owner);\n\n        adr.call.value(msg.value)(data);",
          "message": "Function 'WhaleGiveaway2.Command' (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#24-28) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "    address public Owner = msg.sender;",
          "message": "Variable 'WhaleGiveaway2.Owner' (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#4) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 5,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public constant minEligibility = 0.999001 ether;",
          "message": "Constant 'WhaleGiveaway2.minEligibility' (0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol#5) is not in UPPER_CASE_WITH_UNDERSCORES\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "        adr.call.value(msg.value)(data);",
          "message": null
        }
      ]
    }
  }
}