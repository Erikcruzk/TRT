{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_8"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function() public payable {\n        depositsCount++;",
          "message": "SimpleWallet.fallback (patch_13.sol#12-14) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function withdrawAll() public onlyOwner {\n        withdraw(address(this).balance);",
          "message": "SimpleWallet.withdrawAll (patch_13.sol#16-18) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function sendMoney(\n        address _target,\n        uint _value,\n        bytes _data\n    ) public onlyOwner {\n        require(_target.call.value(_value)(_data)); // added require statement to check if low level call was successful",
          "message": "SimpleWallet.sendMoney (patch_13.sol#25-31) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function sendMoney(\n        address _target,\n        uint _value,\n        bytes _data\n    ) public onlyOwner {\n        require(_target.call.value(_value)(_data)); // added require statement to check if low level call was successful",
          "message": "Low level call in SimpleWallet.sendMoney (patch_13.sol#25-31):\n\t-require(bool)(_target.call.value(_value)(_data)) patch_13.sol#30\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint _value) public onlyOwner {",
          "message": "Parameter '_value' of SimpleWallet.withdraw (patch_13.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _target,",
          "message": "Parameter '_target' of SimpleWallet.sendMoney (patch_13.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint _value,",
          "message": "Parameter '_value' of SimpleWallet.sendMoney (patch_13.sol#27) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes _data",
          "message": "Parameter '_data' of SimpleWallet.sendMoney (patch_13.sol#28) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}