{
    "docker": {
        "command": null,
        "detach": true,
        "entrypoint": "'/sb/bin/do_solidity.sh' '/sb/patch_2.sol' '180' '/sb/bin'",
        "image": "smartbugs/slither",
        "user": 0,
        "volumes": {
            "/var/folders/s1/_yt1wb5s7xg1lrsrnvvzfwxh0000gn/T/tmp7uvql09l": {
                "bind": "/sb",
                "mode": "rw"
            }
        }
    },
    "filename": "/Users/erikcruz/Documents/thesis_repos/transformative_smart_contract_repair/experiment_results/sbc_no_comment_tools3_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/unchecked_low_level_call/analyzers_natural_language_results/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6/candidate_patches/patch_2/patch_2.sol",
    "platform": {
        "cpu": "Apple M2 Max",
        "python": "3.9.6.final.0 (64 bit)",
        "release": "22.4.0",
        "smartbugs": "2.0.7",
        "system": "Darwin",
        "version": "Darwin Kernel Version 22.4.0: Mon Mar  6 20:59:58 PST 2023; root:xnu-8796.101.5~3/RELEASE_ARM64_T6020"
    },
    "result": {
        "duration": 15.77191686630249,
        "exit_code": 9,
        "logs": "result.log",
        "output": "result.tar",
        "start": 1684024799.031708
    },
    "runid": "20230514_0039",
    "solc": "0.4.26",
    "tool": {
        "bin": "scripts",
        "command": null,
        "cpu_quota": null,
        "entrypoint": "'$BIN/do_solidity.sh' '$FILENAME' '$TIMEOUT' '$BIN'",
        "id": "slither",
        "image": "smartbugs/slither",
        "info": "Slither is a Solidity static analysis framework written in Python 3. It runs a suite of vulnerability detectors and prints visual information about contract details. Slither enables developers to find vulnerabilities, enhance their code comphrehension, and quickly prototype custom analyses.",
        "mem_limit": null,
        "mode": "solidity",
        "name": "Slither",
        "origin": "https://github.com/crytic/slither",
        "output": "/output.json",
        "parser": "parser.py",
        "solc": true,
        "version": null
    }
}
