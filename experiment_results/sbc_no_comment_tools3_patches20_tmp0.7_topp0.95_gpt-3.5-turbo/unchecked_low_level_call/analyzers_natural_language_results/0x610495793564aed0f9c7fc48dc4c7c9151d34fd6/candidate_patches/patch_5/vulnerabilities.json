{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_9"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function() public payable {\n        depositsCount++;",
          "message": "SimpleWallet.fallback (patch_5.sol#17-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function withdrawAll() public onlyOwner {\n        require(address(this).balance > 0);\n        owner.transfer(address(this).balance);",
          "message": "SimpleWallet.withdrawAll (patch_5.sol#21-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function withdraw(uint _value) public onlyOwner {\n        require(address(this).balance >= _value);\n        owner.transfer(_value);",
          "message": "SimpleWallet.withdraw (patch_5.sol#26-29) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function sendMoney(\n        address _target,\n        uint _value,\n        bytes _data\n    ) public onlyOwner {\n        require(_target != address(0));\n        require(_target.call.value(_value)(_data));",
          "message": "SimpleWallet.sendMoney (patch_5.sol#31-38) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function sendMoney(\n        address _target,\n        uint _value,\n        bytes _data\n    ) public onlyOwner {\n        require(_target != address(0));\n        require(_target.call.value(_value)(_data));",
          "message": "Low level call in SimpleWallet.sendMoney (patch_5.sol#31-38):\n\t-require(bool)(_target.call.value(_value)(_data)) patch_5.sol#37\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint _value) public onlyOwner {",
          "message": "Parameter '_value' of SimpleWallet.withdraw (patch_5.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "        address _target,",
          "message": "Parameter '_target' of SimpleWallet.sendMoney (patch_5.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint _value,",
          "message": "Parameter '_value' of SimpleWallet.sendMoney (patch_5.sol#33) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 34,
          "vulnerability_to_line": null,
          "vulnerability_code": "        bytes _data",
          "message": "Parameter '_data' of SimpleWallet.sendMoney (patch_5.sol#34) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}