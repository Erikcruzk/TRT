/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.24;

contract SimpleWallet {
    address public owner = msg.sender;
    uint public depositsCount;

    modifier onlyOwner() {
        require(msg.sender == owner);
        _;
    }

    function() public payable {
        depositsCount++;
    }

    function withdrawAll() public onlyOwner {
        withdraw(address(this).balance);
    }

    function withdraw(uint _value) public onlyOwner {
        msg.sender.transfer(_value);
    }

    function sendMoney(
        address _target,
        uint _value,
        bytes _data
    ) public onlyOwner {
        _target.call.value(_value)(_data);
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Slither Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 24-30:
    function sendMoney(
        address _target,
        uint _value,
        bytes _data
    ) public onlyOwner {
        _target.call.value(_value)(_data);
///  Message:Low level call in SimpleWallet.sendMoney (0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#24-30):
///   	-_target.call.value(_value)(_data) 0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#29



/// Repaired Solidity Smart Contract