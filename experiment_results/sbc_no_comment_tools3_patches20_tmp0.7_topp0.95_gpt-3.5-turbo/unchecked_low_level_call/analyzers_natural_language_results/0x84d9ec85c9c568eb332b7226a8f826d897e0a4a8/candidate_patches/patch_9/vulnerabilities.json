{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_18"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint indexdate,",
          "message": "WedIndex.writeIndex.indexdate (local variable @ patch_9.sol#53) shadows:\n\t- WedIndex.indexdate (state variable @ patch_9.sol#34)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 54,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string wedaddress,",
          "message": "WedIndex.writeIndex.wedaddress (local variable @ patch_9.sol#54) shadows:\n\t- WedIndex.wedaddress (state variable @ patch_9.sol#32)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "        string partnernames,",
          "message": "WedIndex.writeIndex.partnernames (local variable @ patch_9.sol#55) shadows:\n\t- WedIndex.partnernames (state variable @ patch_9.sol#33)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 56,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint weddingdate,",
          "message": "WedIndex.writeIndex.weddingdate (local variable @ patch_9.sol#56) shadows:\n\t- WedIndex.weddingdate (state variable @ patch_9.sol#35)\n"
        },
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "        uint displaymultisig",
          "message": "WedIndex.writeIndex.displaymultisig (local variable @ patch_9.sol#57) shadows:\n\t- WedIndex.displaymultisig (state variable @ patch_9.sol#36)\n"
        },
        {
          "name": "constable-states",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public displaymultisig;",
          "message": "WedIndex.displaymultisig should be constant (patch_9.sol#36)\nWedIndex.indexdate should be constant (patch_9.sol#34)\nWedIndex.partnernames should be constant (patch_9.sol#33)\nWedIndex.wedaddress should be constant (patch_9.sol#32)\nWedIndex.weddingdate should be constant (patch_9.sol#35)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {\n        newOwner = _newOwner;",
          "message": "Owned.changeOwner (patch_9.sol#17-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        owner = newOwner;",
          "message": "Owned.acceptOwnership (patch_9.sol#21-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function execute(address _dst, uint _value, bytes _data) public onlyOwner {\n        require(_dst.call.value(_value)(_data));",
          "message": "Owned.execute (patch_9.sol#26-28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": 50,
          "vulnerability_code": "    function numberOfIndex() public view returns (uint) {\n        return indexarray.length;",
          "message": "WedIndex.numberOfIndex (patch_9.sol#48-50) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 52,
          "vulnerability_to_line": 75,
          "vulnerability_code": "    function writeIndex(\n        uint indexdate,\n        string wedaddress,\n        string partnernames,\n        uint weddingdate,\n        uint displaymultisig\n    ) public {\n        indexarray.push(\n            IndexArray(\n                now,\n                wedaddress,\n                partnernames,\n                weddingdate,\n                displaymultisig\n            )\n        );\n        emit IndexWritten(\n            now,\n            wedaddress,\n            partnernames,\n            weddingdate,\n            displaymultisig\n        );",
          "message": "WedIndex.writeIndex (patch_9.sol#52-75) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.16;",
          "message": "Detected issues with version pragma in patch_9.sol:\n\t- pragma solidity^0.4.16 (patch_9.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function execute(address _dst, uint _value, bytes _data) public onlyOwner {\n        require(_dst.call.value(_value)(_data));",
          "message": "Low level call in Owned.execute (patch_9.sol#26-28):\n\t-require(bool)(_dst.call.value(_value)(_data)) patch_9.sol#27\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function Owned() public {\n        owner = msg.sender;",
          "message": "Function 'Owned.Owned' (patch_9.sol#11-13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function changeOwner(address _newOwner) public onlyOwner {",
          "message": "Parameter '_newOwner' of Owned.changeOwner (patch_9.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_dst' of Owned.execute (patch_9.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_value' of Owned.execute (patch_9.sol#26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function execute(address _dst, uint _value, bytes _data) public onlyOwner {",
          "message": "Parameter '_data' of Owned.execute (patch_9.sol#26) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}