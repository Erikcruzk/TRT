{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Integer Overflow",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": null,
          "vulnerability_code": "        balances[msg.sender] += msg.value;",
          "message": null
        },
        {
          "name": "Re-Entrancy Vulnerability",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "        msg.sender.transfer(balances[msg.sender]); //replaced low level call with transfer",
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "    function() public payable {\n        balances[msg.sender] += msg.value;",
          "message": "keepMyEther.fallback (patch_1.sol#6-8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function withdraw() public {\n        require(balances[msg.sender] > 0); //added require statement\n        msg.sender.transfer(balances[msg.sender]); //replaced low level call with transfer\n        balances[msg.sender] = 0;",
          "message": "keepMyEther.withdraw (patch_1.sol#10-14) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;",
          "message": "Detected issues with version pragma in patch_1.sol:\n\t- pragma solidity^0.4.23 (patch_1.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 15,
          "vulnerability_code": "contract keepMyEther {\n    mapping(address => uint256) public balances;\n\n    function() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() public {\n        require(balances[msg.sender] > 0); //added require statement\n        msg.sender.transfer(balances[msg.sender]); //replaced low level call with transfer\n        balances[msg.sender] = 0;\n    }",
          "message": "Contract 'keepMyEther' (patch_1.sol#3-15) is not in CapWords\n"
        }
      ]
    }
  }
}