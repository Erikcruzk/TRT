{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "    function() public payable {\n        balances[msg.sender] += msg.value;",
          "message": "keepMyEther.fallback (patch_14.sol#6-8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function withdraw() public {\n        uint256 amount = balances[msg.sender];\n        balances[msg.sender] = 0;\n        require(msg.sender.call.value(amount)());",
          "message": "keepMyEther.withdraw (patch_14.sol#10-14) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;",
          "message": "Detected issues with version pragma in patch_14.sol:\n\t- pragma solidity^0.4.23 (patch_14.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function withdraw() public {\n        uint256 amount = balances[msg.sender];\n        balances[msg.sender] = 0;\n        require(msg.sender.call.value(amount)());",
          "message": "Low level call in keepMyEther.withdraw (patch_14.sol#10-14):\n\t-require(bool)(msg.sender.call.value(amount)()) patch_14.sol#13\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 15,
          "vulnerability_code": "contract keepMyEther {\n    mapping(address => uint256) public balances;\n\n    function() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() public {\n        uint256 amount = balances[msg.sender];\n        balances[msg.sender] = 0;\n        require(msg.sender.call.value(amount)());\n    }",
          "message": "Contract 'keepMyEther' (patch_14.sol#3-15) is not in CapWords\n"
        }
      ]
    }
  }
}