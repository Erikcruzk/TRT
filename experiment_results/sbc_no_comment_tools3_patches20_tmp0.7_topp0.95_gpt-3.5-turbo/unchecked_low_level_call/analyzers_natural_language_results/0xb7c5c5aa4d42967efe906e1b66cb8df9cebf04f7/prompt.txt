/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.23;

contract keepMyEther {
    mapping(address => uint256) public balances;

    function() public payable {
        balances[msg.sender] += msg.value;
    }

    function withdraw() public {
        msg.sender.call.value(balances[msg.sender])();
        balances[msg.sender] = 0;
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Slither Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 10-13:
    function withdraw() public {
        msg.sender.call.value(balances[msg.sender])();
        balances[msg.sender] = 0;
///  Message:Low level call in keepMyEther.withdraw (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#10-13):
///   	-msg.sender.call.value(balances[msg.sender])() 0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#11



/// Repaired Solidity Smart Contract