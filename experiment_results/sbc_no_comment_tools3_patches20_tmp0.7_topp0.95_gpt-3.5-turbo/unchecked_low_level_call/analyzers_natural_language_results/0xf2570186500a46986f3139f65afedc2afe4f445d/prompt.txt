/// Your task is to repair the following Solidity Smart Contract
pragma solidity ^0.4.16;

contract RealOldFuckMaker {
    address fuck = 0xc63e7b1DEcE63A77eD7E4Aeef5efb3b05C81438D;

    function makeOldFucks(uint32 number) {
        uint32 i;
        for (i = 0; i < number; i++) {
            fuck.call(bytes4(sha3("giveBlockReward()")));
        }
    }
}

/// This Solidity Smart Contract has been analyzed by smart contract analyzers. Here are the results from these analyzers.

/// 1. Slither Analysis Results
/// 1.1. Vulnerability: unchecked_low_level_call at Line 6-11:
    function makeOldFucks(uint32 number) {
        uint32 i;
        for (i = 0; i < number; i++) {
            fuck.call(bytes4(sha3("giveBlockReward()")));
        }
///  Message:Low level call in RealOldFuckMaker.makeOldFucks (0xf2570186500a46986f3139f65afedc2afe4f445d.sol#6-11):
///   	-fuck.call(bytes4(sha3()(giveBlockReward()))) 0xf2570186500a46986f3139f65afedc2afe4f445d.sol#9



/// Repaired Solidity Smart Contract