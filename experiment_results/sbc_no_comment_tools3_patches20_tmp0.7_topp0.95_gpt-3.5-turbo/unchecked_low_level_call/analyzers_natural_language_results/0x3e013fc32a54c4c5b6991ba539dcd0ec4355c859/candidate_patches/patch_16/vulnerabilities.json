{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_9"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "MultiplicatorX4.fallback (patch_16.sol#6) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 11,
          "vulnerability_code": "    function withdraw() public {\n        require(msg.sender == owner);\n        owner.transfer(this.balance);",
          "message": "MultiplicatorX4.withdraw (patch_16.sol#8-11) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function command(address _adr, bytes _data) public payable {\n        require(msg.sender == owner);\n        require(_adr != address(0));\n        require(_data.length > 0);\n\n        _adr.call.value(msg.value)(_data);",
          "message": "MultiplicatorX4.command (patch_16.sol#13-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function multiplicate(address _adr) public payable {\n        require(_adr != address(0));\n        require(msg.value >= this.balance);\n\n        _adr.transfer(this.balance + msg.value);",
          "message": "MultiplicatorX4.multiplicate (patch_16.sol#21-26) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.18;",
          "message": "Detected issues with version pragma in patch_16.sol:\n\t- pragma solidity^0.4.18 (patch_16.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function command(address _adr, bytes _data) public payable {\n        require(msg.sender == owner);\n        require(_adr != address(0));\n        require(_data.length > 0);\n\n        _adr.call.value(msg.value)(_data);",
          "message": "Low level call in MultiplicatorX4.command (patch_16.sol#13-19):\n\t-_adr.call.value(msg.value)(_data) patch_16.sol#18\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function command(address _adr, bytes _data) public payable {",
          "message": "Parameter '_adr' of MultiplicatorX4.command (patch_16.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function command(address _adr, bytes _data) public payable {",
          "message": "Parameter '_data' of MultiplicatorX4.command (patch_16.sol#13) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function multiplicate(address _adr) public payable {",
          "message": "Parameter '_adr' of MultiplicatorX4.multiplicate (patch_16.sol#21) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        _adr.call.value(msg.value)(_data);",
          "message": null
        }
      ]
    }
  }
}