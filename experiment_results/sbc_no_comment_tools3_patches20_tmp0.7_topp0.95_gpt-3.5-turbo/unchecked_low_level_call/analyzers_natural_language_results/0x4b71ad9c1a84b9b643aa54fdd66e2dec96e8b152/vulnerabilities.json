{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "calls-loop",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "            caddress.call(id,from,_tos[i],v);",
          "message": "airPort.transfer has external calls inside a loop:\n\t- caddress.call(id,from,_tos[i],v) (0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function transfer(address from,address caddress,address[] _tos,uint v)public returns (bool){\n        require(_tos.length > 0);\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i=0;i<_tos.length;i++){\n            // <yes> <report> UNCHECKED_LL_CALLS\n            caddress.call(id,from,_tos[i],v);\n        }\n        return true;",
          "message": "airPort.transfer (0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function transfer(address from,address caddress,address[] _tos,uint v)public returns (bool){\n        require(_tos.length > 0);\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i=0;i<_tos.length;i++){\n            // <yes> <report> UNCHECKED_LL_CALLS\n            caddress.call(id,from,_tos[i],v);\n        }\n        return true;",
          "message": "Low level call in airPort.transfer (0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12-20):\n\t-caddress.call(id,from,_tos[i],v) 0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#17\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 21,
          "vulnerability_code": "contract airPort{\n    \n    function transfer(address from,address caddress,address[] _tos,uint v)public returns (bool){\n        require(_tos.length > 0);\n        bytes4 id=bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i=0;i<_tos.length;i++){\n            // <yes> <report> UNCHECKED_LL_CALLS\n            caddress.call(id,from,_tos[i],v);\n        }\n        return true;\n    }",
          "message": "Contract 'airPort' (0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#10-21) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transfer(address from,address caddress,address[] _tos,uint v)public returns (bool){",
          "message": "Parameter '_tos' of airPort.transfer (0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol#12) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "            caddress.call(id,from,_tos[i],v);",
          "message": null
        }
      ]
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}