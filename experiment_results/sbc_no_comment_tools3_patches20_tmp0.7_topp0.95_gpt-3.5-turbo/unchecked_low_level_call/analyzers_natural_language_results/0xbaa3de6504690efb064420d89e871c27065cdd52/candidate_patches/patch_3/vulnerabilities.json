{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function transferOwner(address _newOwner) public onlyOwner {\n        require(_newOwner != address(0));\n        owner = _newOwner;",
          "message": "Proxy.transferOwner (patch_3.sol#15-18) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 23,
          "vulnerability_code": "    function proxy(address _target, bytes _data) public payable onlyOwner {\n        require(_target != address(0));\n        require(_target.call.value(msg.value)(_data));",
          "message": "Proxy.proxy (patch_3.sol#20-23) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 36,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function() public payable {\n        deposit();",
          "message": "VaultProxy.fallback (patch_3.sol#36-38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": 49,
          "vulnerability_code": "    function withdraw(uint256 _amount) public onlyOwner {\n        require(_amount > 0 && deposits[msg.sender] >= _amount);\n        deposits[msg.sender] -= _amount;\n        msg.sender.transfer(_amount);",
          "message": "VaultProxy.withdraw (patch_3.sol#45-49) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.23;",
          "message": "Detected issues with version pragma in patch_3.sol:\n\t- pragma solidity^0.4.23 (patch_3.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 23,
          "vulnerability_code": "    function proxy(address _target, bytes _data) public payable onlyOwner {\n        require(_target != address(0));\n        require(_target.call.value(msg.value)(_data));",
          "message": "Low level call in Proxy.proxy (patch_3.sol#20-23):\n\t-require(bool)(_target.call.value(msg.value)(_data)) patch_3.sol#22\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferOwner(address _newOwner) public onlyOwner {",
          "message": "Parameter '_newOwner' of Proxy.transferOwner (patch_3.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function proxy(address _target, bytes _data) public payable onlyOwner {",
          "message": "Parameter '_target' of Proxy.proxy (patch_3.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function proxy(address _target, bytes _data) public payable onlyOwner {",
          "message": "Parameter '_data' of Proxy.proxy (patch_3.sol#20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 45,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdraw(uint256 _amount) public onlyOwner {",
          "message": "Parameter '_amount' of VaultProxy.withdraw (patch_3.sol#45) is not in mixedCase\n"
        }
      ]
    }
  }
}