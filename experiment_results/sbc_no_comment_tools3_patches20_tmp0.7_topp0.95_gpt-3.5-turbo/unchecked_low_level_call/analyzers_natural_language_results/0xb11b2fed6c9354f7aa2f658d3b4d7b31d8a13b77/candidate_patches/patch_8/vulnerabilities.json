{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 18,
          "vulnerability_code": "    function transferOwner(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"New owner address cannot be null.\");\n        owner = newOwner;",
          "message": "Proxy.transferOwner (patch_8.sol#15-18) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0), \"Target address cannot be null.\");\n        require(msg.value > 0, \"Value must be greater than 0.\");\n        require(target.call.value(msg.value)(data), \"Low level call failed.\");",
          "message": "Proxy.proxy (patch_8.sol#20-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "DepositProxy.fallback (patch_8.sol#30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": 37,
          "vulnerability_code": "    function vault() public payable {\n        if (msg.sender == tx.origin) {\n            owner = msg.sender;\n            deposit();\n        }",
          "message": "DepositProxy.vault (patch_8.sol#32-37) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 44,
          "vulnerability_to_line": 49,
          "vulnerability_code": "    function withdraw(uint256 amount) public onlyOwner {\n        require(amount > 0, \"Amount must be greater than 0.\");\n        require(deposits[msg.sender] >= amount, \"Insufficient balance.\");\n        deposits[msg.sender] -= amount;\n        msg.sender.transfer(amount);",
          "message": "DepositProxy.withdraw (patch_8.sol#44-49) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 20,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0), \"Target address cannot be null.\");\n        require(msg.value > 0, \"Value must be greater than 0.\");\n        require(target.call.value(msg.value)(data), \"Low level call failed.\");",
          "message": "Low level call in Proxy.proxy (patch_8.sol#20-24):\n\t-require(bool,string)(target.call.value(msg.value)(data),Low level call failed.) patch_8.sol#23\n"
        }
      ]
    }
  }
}