{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function transferOwner(address newOwner) public onlyOwner {\n        owner = newOwner;",
          "message": "Proxy.transferOwner (patch_7.sol#15-17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0));\n        require(target.call.value(msg.value)(data));",
          "message": "Proxy.proxy (patch_7.sol#19-22) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "DepositProxy.fallback (patch_7.sol#28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function vault() public payable {\n        if (msg.sender == tx.origin) {\n            owner = msg.sender;\n            deposit();\n        }",
          "message": "DepositProxy.vault (patch_7.sol#30-35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 46,
          "vulnerability_code": "    function withdraw(uint256 amount) public onlyOwner {\n        require(amount > 0 && deposits[msg.sender] >= amount);\n        msg.sender.transfer(amount);",
          "message": "DepositProxy.withdraw (patch_7.sol#43-46) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 22,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0));\n        require(target.call.value(msg.value)(data));",
          "message": "Low level call in Proxy.proxy (patch_7.sol#19-22):\n\t-require(bool)(target.call.value(msg.value)(data)) patch_7.sol#21\n"
        }
      ]
    }
  }
}