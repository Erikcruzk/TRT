{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": 13,
          "vulnerability_code": "    function transferOwner(address _owner) public onlyOwner {\n        owner = _owner;",
          "message": "Proxy.transferOwner (patch_4.sol#11-13) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0), \"Target address cannot be zero.\");\n        require(msg.value > 0, \"No ether sent to proxy contract.\");\n        require(target.call.value(msg.value)(data), \"Low-level call failed.\");",
          "message": "Proxy.proxy (patch_4.sol#15-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "DepositProxy.fallback (patch_4.sol#25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function vault() public payable {\n        require(msg.sender == tx.origin, \"Only externally-owned accounts can call this function.\");\n        owner = msg.sender;\n        deposit();",
          "message": "DepositProxy.vault (patch_4.sol#27-31) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 38,
          "vulnerability_to_line": 43,
          "vulnerability_code": "    function withdraw(uint256 amount) public onlyOwner {\n        require(amount > 0, \"Withdrawal amount must be greater than 0.\");\n        require(deposits[msg.sender] >= amount, \"Insufficient balance.\");\n        deposits[msg.sender] -= amount;\n        msg.sender.transfer(amount);",
          "message": "DepositProxy.withdraw (patch_4.sol#38-43) should be declared external\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function proxy(address target, bytes data) public payable {\n        require(target != address(0), \"Target address cannot be zero.\");\n        require(msg.value > 0, \"No ether sent to proxy contract.\");\n        require(target.call.value(msg.value)(data), \"Low-level call failed.\");",
          "message": "Low level call in Proxy.proxy (patch_4.sol#15-19):\n\t-require(bool,string)(target.call.value(msg.value)(data),Low-level call failed.) patch_4.sol#18\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function transferOwner(address _owner) public onlyOwner {",
          "message": "Parameter '_owner' of Proxy.transferOwner (patch_4.sol#11) is not in mixedCase\n"
        }
      ]
    }
  }
}