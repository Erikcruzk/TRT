{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function deposit() public payable {\n        require(balances[msg.sender] + msg.value >= balances[msg.sender]);\n        balances[msg.sender] += msg.value;",
          "message": "Wallet.deposit (patch_17.sol#12-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 21,
          "vulnerability_code": "    function withdraw(uint256 amount) public {\n        require(amount <= balances[msg.sender]);\n        msg.sender.transfer(amount);\n        balances[msg.sender] -= amount;",
          "message": "Wallet.withdraw (patch_17.sol#17-21) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": 28,
          "vulnerability_code": "    function refund() public {\n        uint256 balance = balances[msg.sender];\n        require(balance > 0);\n        balances[msg.sender] = 0;\n        msg.sender.transfer(balance);",
          "message": "Wallet.refund (patch_17.sol#23-28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 30,
          "vulnerability_to_line": 34,
          "vulnerability_code": "    function migrateTo(address payable to) public {\n        require(creator == msg.sender);\n        uint256 balance = address(this).balance;\n        to.transfer(balance);",
          "message": "Wallet.migrateTo (patch_17.sol#30-34) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.5.16;",
          "message": "Detected issues with version pragma in patch_17.sol:\n\t- pragma solidity^0.5.16 (patch_17.sol#1): it allows old versions\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": false,
      "errors": [
        "exception (RuntimeError: Source map error, unknown name(SHR) or instr_name(INVALID))"
      ],
      "vulnerability_findings": []
    }
  }
}