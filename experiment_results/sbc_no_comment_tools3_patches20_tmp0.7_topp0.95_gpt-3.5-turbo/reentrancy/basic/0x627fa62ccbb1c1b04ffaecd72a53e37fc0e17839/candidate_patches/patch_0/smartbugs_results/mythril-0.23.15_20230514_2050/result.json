{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 12,
            "contract": "Ownable",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105bc8061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80638da5cb5b1461004e578063a6f9dae11461006c578063bd9b6d8614610088578063d4ee1d9014610092575b5f80fd5b6100566100b0565b60405161006391906103a6565b60405180910390f35b610086600480360381019061008191906103ed565b6100d3565b005b610090610211565b005b61009a610342565b6040516100a791906103a6565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015790610498565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610500565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610568565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61039082610367565b9050919050565b6103a081610386565b82525050565b5f6020820190506103b95f830184610397565b92915050565b5f80fd5b6103cc81610386565b81146103d6575f80fd5b50565b5f813590506103e7816103c3565b92915050565b5f60208284031215610402576104016103bf565b5b5f61040f848285016103d9565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f610482602183610418565b915061048d82610428565b604082019050919050565b5f6020820190508181035f8301526104af81610476565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6104ea600f83610418565b91506104f5826104b6565b602082019050919050565b5f6020820190508181035f830152610517816104de565b9050919050565b7f4f6e6c79206e6577206f776e65722063616e20636f6e6669726d0000000000005f82015250565b5f610552601a83610418565b915061055d8261051e565b602082019050919050565b5f6020820190508181035f83015261057f81610546565b905091905056fea26469706673582212201e62c401878c7172562f40bf0fbdb19b7fc235f2f616d1244542a545c567477d64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "/Users/erikcruz/Documents/thesis_repos/transformative_smart_contract_repair/experiment_results/sbc_no_comment_tools3_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/reentrancy/basic/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839/candidate_patches/patch_0/patch_0.sol",
            "function": "constructor",
            "line": 7,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 12,
            "contract": "Token",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061094e8061005c5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633ccdbb28146100595780638da5cb5b14610075578063a6f9dae114610093578063bd9b6d86146100af578063d4ee1d90146100b9575b5f80fd5b610073600480360381019061006e9190610609565b6100d7565b005b61007d6102c1565b60405161008a9190610668565b60405180910390f35b6100ad60048036038101906100a89190610681565b6102e4565b005b6100b7610422565b005b6100c1610553565b6040516100ce9190610668565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b9061072c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c990610794565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610237906107fc565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b815260040161027b929190610829565b6020604051808303815f875af1158015610297573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102bb9190610885565b50505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103689061072c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d690610794565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a8906108fa565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105a58261057c565b9050919050565b6105b58161059b565b81146105bf575f80fd5b50565b5f813590506105d0816105ac565b92915050565b5f819050919050565b6105e8816105d6565b81146105f2575f80fd5b50565b5f81359050610603816105df565b92915050565b5f805f606084860312156106205761061f610578565b5b5f61062d868287016105c2565b935050602061063e868287016105f5565b925050604061064f868287016105c2565b9150509250925092565b6106628161059b565b82525050565b5f60208201905061067b5f830184610659565b92915050565b5f6020828403121561069657610695610578565b5b5f6106a3848285016105c2565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6107166021836106ac565b9150610721826106bc565b604082019050919050565b5f6020820190508181035f8301526107438161070a565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f61077e600f836106ac565b91506107898261074a565b602082019050919050565b5f6020820190508181035f8301526107ab81610772565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6107e66015836106ac565b91506107f1826107b2565b602082019050919050565b5f6020820190508181035f830152610813816107da565b9050919050565b610823816105d6565b82525050565b5f60408201905061083c5f830185610659565b610849602083018461081a565b9392505050565b5f8115159050919050565b61086481610850565b811461086e575f80fd5b50565b5f8151905061087f8161085b565b92915050565b5f6020828403121561089a57610899610578565b5b5f6108a784828501610871565b91505092915050565b7f4f6e6c79206e6577206f776e65722063616e20636f6e6669726d0000000000005f82015250565b5f6108e4601a836106ac565b91506108ef826108b0565b602082019050919050565b5f6020820190508181035f830152610911816108d8565b905091905056fea2646970667358221220786c06c317b7b62b646891c47c7fc4ac1117680b53eb651debeef7c35082f8da64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "/Users/erikcruz/Documents/thesis_repos/transformative_smart_contract_repair/experiment_results/sbc_no_comment_tools3_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/reentrancy/basic/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839/candidate_patches/patch_0/patch_0.sol",
            "function": "constructor",
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Low"
        },
        {
            "address": 12,
            "contract": "TokenBank",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x2",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002819055506112758061006b5f395ff3fe608060405260043610610094575f3560e01c8063a6f9dae111610058578063a6f9dae114610187578063afe751e4146101af578063bd9b6d86146101d7578063d0e30db0146101ed578063d4ee1d90146101f7576100a3565b806310e6378a146100a757806318a5bbdc146100cf5780633ccdbb281461010b57806341b3d185146101335780638da5cb5b1461015d576100a3565b366100a3576100a1610221565b005b5f80fd5b3480156100b2575f80fd5b506100cd60048036038101906100c89190610bb4565b6102ba565b005b3480156100da575f80fd5b506100f560048036038101906100f09190610c2d565b610509565b6040516101029190610c67565b60405180910390f35b348015610116575f80fd5b50610131600480360381019061012c9190610c80565b61051e565b005b34801561013e575f80fd5b50610147610708565b6040516101549190610c67565b60405180910390f35b348015610168575f80fd5b5061017161070e565b60405161017e9190610cdf565b60405180910390f35b348015610192575f80fd5b506101ad60048036038101906101a89190610c2d565b610731565b005b3480156101ba575f80fd5b506101d560048036038101906101d09190610cf8565b61086f565b005b3480156101e2575f80fd5b506101eb6109cd565b005b6101f5610221565b005b348015610202575f80fd5b5061020b610afe565b6040516102189190610cdf565b60405180910390f35b6002543411610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90610dc8565b60405180910390fd5b3460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102b19190610e13565b92505081905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033e90610eb6565b60405180910390fd5b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90610f1e565b60405180910390fd5b47811115610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610f86565b60405180910390fd5b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104559190610fa4565b925050819055505f8273ffffffffffffffffffffffffffffffffffffffff168260405161048190611004565b5f6040518083038185875af1925050503d805f81146104bb576040519150601f19603f3d011682016040523d82523d5f602084013e6104c0565b606091505b5050905080610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90611062565b60405180910390fd5b505050565b6003602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a290610eb6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610619576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610610906110ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90611132565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016106c2929190611150565b6020604051808303815f875af11580156106de573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070291906111ac565b50505050565b60025481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590610eb6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610823906110ca565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390610eb6565b60405180910390fd5b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290610f1e565b60405180910390fd5b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109c882828561051e565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5390611221565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5082610b27565b9050919050565b610b6081610b46565b8114610b6a575f80fd5b50565b5f81359050610b7b81610b57565b92915050565b5f819050919050565b610b9381610b81565b8114610b9d575f80fd5b50565b5f81359050610bae81610b8a565b92915050565b5f8060408385031215610bca57610bc9610b23565b5b5f610bd785828601610b6d565b9250506020610be885828601610ba0565b9150509250929050565b5f610bfc82610b27565b9050919050565b610c0c81610bf2565b8114610c16575f80fd5b50565b5f81359050610c2781610c03565b92915050565b5f60208284031215610c4257610c41610b23565b5b5f610c4f84828501610c19565b91505092915050565b610c6181610b81565b82525050565b5f602082019050610c7a5f830184610c58565b92915050565b5f805f60608486031215610c9757610c96610b23565b5b5f610ca486828701610c19565b9350506020610cb586828701610ba0565b9250506040610cc686828701610c19565b9150509250925092565b610cd981610bf2565b82525050565b5f602082019050610cf25f830184610cd0565b92915050565b5f805f60608486031215610d0f57610d0e610b23565b5b5f610d1c86828701610c19565b9350506020610d2d86828701610c19565b9250506040610d3e86828701610ba0565b9150509250925092565b5f82825260208201905092915050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e206d696e696d756d206465706f73697400000000000000000000000000602082015250565b5f610db2603383610d48565b9150610dbd82610d58565b604082019050919050565b5f6020820190508181035f830152610ddf81610da6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e1d82610b81565b9150610e2883610b81565b9250828201905080821115610e4057610e3f610de6565b5b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f610ea0602183610d48565b9150610eab82610e46565b604082019050919050565b5f6020820190508181035f830152610ecd81610e94565b9050919050565b7f486f6c64657220686173206e6f2062616c616e636500000000000000000000005f82015250565b5f610f08601583610d48565b9150610f1382610ed4565b602082019050919050565b5f6020820190508181035f830152610f3581610efc565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610f70601483610d48565b9150610f7b82610f3c565b602082019050919050565b5f6020820190508181035f830152610f9d81610f64565b9050919050565b5f610fae82610b81565b9150610fb983610b81565b9250828203905081811115610fd157610fd0610de6565b5b92915050565b5f81905092915050565b50565b5f610fef5f83610fd7565b9150610ffa82610fe1565b5f82019050919050565b5f61100e82610fe4565b9150819050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61104c600f83610d48565b915061105782611018565b602082019050919050565b5f6020820190508181035f83015261107981611040565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6110b4600f83610d48565b91506110bf82611080565b602082019050919050565b5f6020820190508181035f8301526110e1816110a8565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f61111c601583610d48565b9150611127826110e8565b602082019050919050565b5f6020820190508181035f83015261114981611110565b9050919050565b5f6040820190506111635f830185610cd0565b6111706020830184610c58565b9392505050565b5f8115159050919050565b61118b81611177565b8114611195575f80fd5b50565b5f815190506111a681611182565b92915050565b5f602082840312156111c1576111c0610b23565b5b5f6111ce84828501611198565b91505092915050565b7f4f6e6c79206e6577206f776e65722063616e20636f6e6669726d0000000000005f82015250565b5f61120b601a83610d48565b9150611216826111d7565b602082019050919050565b5f6020820190508181035f830152611238816111ff565b905091905056fea26469706673582212204659feec3bdea1aec7dfc1def14f8b056dabebe878eac4615e7b6cc2b479c87b64736f6c63430008140033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x1"
                    }
                ]
            },
            "filename": "/Users/erikcruz/Documents/thesis_repos/transformative_smart_contract_repair/experiment_results/sbc_no_comment_tools3_patches20_tmp0.7_topp0.95_gpt-3.5-turbo/reentrancy/basic/0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839/candidate_patches/patch_0/patch_0.sol",
            "function": "constructor",
            "line": 48,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
