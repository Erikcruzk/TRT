{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_5"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": 8,
          "vulnerability_code": "    function getBalance(address u) public view returns (uint) {\n        return userBalance[u];",
          "message": "Reentrance.getBalance (patch_18.sol#6-8) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function addToBalance() public payable {\n        userBalance[msg.sender] += msg.value;",
          "message": "Reentrance.addToBalance (patch_18.sol#10-12) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function withdrawBalance() public {\n        uint balance = userBalance[msg.sender];\n        userBalance[msg.sender] = 0;\n        if (!(msg.sender.call.value(balance)())) {\n            revert();\n        }",
          "message": "Reentrance.withdrawBalance (patch_18.sol#14-20) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.15;",
          "message": "Detected issues with version pragma in patch_18.sol:\n\t- pragma solidity^0.4.15 (patch_18.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function withdrawBalance() public {\n        uint balance = userBalance[msg.sender];\n        userBalance[msg.sender] = 0;\n        if (!(msg.sender.call.value(balance)())) {\n            revert();\n        }",
          "message": "Low level call in Reentrance.withdrawBalance (patch_18.sol#14-20):\n\t-! (msg.sender.call.value(balance)()) patch_18.sol#17-19\n"
        }
      ]
    }
  }
}