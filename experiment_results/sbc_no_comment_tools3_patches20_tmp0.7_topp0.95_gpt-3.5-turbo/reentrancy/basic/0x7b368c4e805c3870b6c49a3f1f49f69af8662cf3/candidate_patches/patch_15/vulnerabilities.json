{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_10"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public minSum = 1 ether;",
          "message": "W_WALLET.minSum should be constant (patch_15.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function collect(uint _amount) public {\n        require(acc[msg.sender].balance >= minSum && acc[msg.sender].balance >= _amount && now > acc[msg.sender].unlockTime);\n        acc[msg.sender].balance -= _amount;\n        msg.sender.transfer(_amount);\n        emit LogMessage(msg.sender, _amount, \"Collect\");",
          "message": "W_WALLET.collect (patch_15.sol#21-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 30,
          "vulnerability_code": "    function() public payable {\n        put(0);",
          "message": "W_WALLET.fallback (patch_15.sol#28-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 52,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {\n        Message memory newMessage = Message({\n            sender: _sender,\n            data: _data,\n            value: _value,\n            time: now\n        });\n\n        history.push(newMessage);",
          "message": "Log.addMessage (patch_15.sol#43-52) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 31,
          "vulnerability_code": "contract W_WALLET {\n    struct Holder {\n        uint unlockTime;\n        uint balance;\n    }\n\n    mapping(address => Holder) public acc;\n\n    uint public minSum = 1 ether;\n\n    event LogMessage(address sender, uint value, string message);\n\n    function put(uint _unlockTime) public payable {\n        acc[msg.sender].balance += msg.value;\n        acc[msg.sender].unlockTime = _unlockTime > now ? _unlockTime : now;\n        emit LogMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function collect(uint _amount) public {\n        require(acc[msg.sender].balance >= minSum && acc[msg.sender].balance >= _amount && now > acc[msg.sender].unlockTime);\n        acc[msg.sender].balance -= _amount;\n        msg.sender.transfer(_amount);\n        emit LogMessage(msg.sender, _amount, \"Collect\");\n    }\n\n    function() public payable {\n        put(0);\n    }",
          "message": "Contract 'W_WALLET' (patch_15.sol#3-31) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 15,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function put(uint _unlockTime) public payable {",
          "message": "Parameter '_unlockTime' of W_WALLET.put (patch_15.sol#15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collect(uint _amount) public {",
          "message": "Parameter '_amount' of W_WALLET.collect (patch_15.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_sender' of Log.addMessage (patch_15.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_value' of Log.addMessage (patch_15.sol#43) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _sender, uint _value, string _data) public {",
          "message": "Parameter '_data' of Log.addMessage (patch_15.sol#43) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}