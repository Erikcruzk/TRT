{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_28"
      ],
      "vulnerability_findings": [
        {
          "name": "reentrancy-eth",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            if (msg.sender.call.value(_am)()) {\n                balances[msg.sender] -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Reentrancy in DEP_BANK.Collect (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#31-38):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#33-36)\n\tState variables written after the call(s):\n\t- balances (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#34)\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 13,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (intitalized) throw;",
          "message": "Deprecated standard detected @ 0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#13:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "deprecated-standards",
          "vulnerability_from_line": 18,
          "vulnerability_to_line": null,
          "vulnerability_code": "        if (intitalized) throw;",
          "message": "Deprecated standard detected @ 0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#18:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;",
          "message": "DEP_BANK.SetMinSum (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#12-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);",
          "message": "DEP_BANK.SetLogFile (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#17-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function Initialized() public {\n        intitalized = true;",
          "message": "DEP_BANK.Initialized (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#22-24) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            if (msg.sender.call.value(_am)()) {\n                balances[msg.sender] -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "DEP_BANK.Collect (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#31-38) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": 42,
          "vulnerability_code": "    function() public payable {\n        Deposit();",
          "message": "DEP_BANK.fallback (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#40-42) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": 63,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "LogFile.AddMessage (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#57-63) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in 0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol:\n\t- pragma solidity^0.4.19 (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            if (msg.sender.call.value(_am)()) {\n                balances[msg.sender] -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Low level call in DEP_BANK.Collect (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#31-38):\n\t-msg.sender.call.value(_am)() 0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#33-36\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 43,
          "vulnerability_code": "contract DEP_BANK {\n    mapping(address => uint256) public balances;\n\n    uint public MinSum;\n\n    LogFile Log;\n\n    bool intitalized;\n\n    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;\n    }\n\n    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);\n    }\n\n    function Initialized() public {\n        intitalized = true;\n    }\n\n    function Deposit() public payable {\n        balances[msg.sender] += msg.value;\n        Log.AddMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function Collect(uint _am) public payable {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            if (msg.sender.call.value(_am)()) {\n                balances[msg.sender] -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }\n    }\n\n    function() public payable {\n        Deposit();\n    }",
          "message": "Contract 'DEP_BANK' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#3-43) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function SetMinSum(uint _val) public {\n        if (intitalized) throw;\n        MinSum = _val;",
          "message": "Function 'DEP_BANK.SetMinSum' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#12-15) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetMinSum(uint _val) public {",
          "message": "Parameter '_val' of DEP_BANK.SetMinSum (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function SetLogFile(address _log) public {\n        if (intitalized) throw;\n        Log = LogFile(_log);",
          "message": "Function 'DEP_BANK.SetLogFile' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#17-20) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function SetLogFile(address _log) public {",
          "message": "Parameter '_log' of DEP_BANK.SetLogFile (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 24,
          "vulnerability_code": "    function Initialized() public {\n        intitalized = true;",
          "message": "Function 'DEP_BANK.Initialized' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#22-24) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 26,
          "vulnerability_to_line": 29,
          "vulnerability_code": "    function Deposit() public payable {\n        balances[msg.sender] += msg.value;\n        Log.AddMessage(msg.sender, msg.value, \"Put\");",
          "message": "Function 'DEP_BANK.Deposit' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#26-29) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 38,
          "vulnerability_code": "    function Collect(uint _am) public payable {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            if (msg.sender.call.value(_am)()) {\n                balances[msg.sender] -= _am;\n                Log.AddMessage(msg.sender, _am, \"Collect\");\n            }\n        }",
          "message": "Function 'DEP_BANK.Collect' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#31-38) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function Collect(uint _am) public payable {",
          "message": "Parameter '_am' of DEP_BANK.Collect (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#31) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum;",
          "message": "Variable 'DEP_BANK.MinSum' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    LogFile Log;",
          "message": "Variable 'DEP_BANK.Log' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": 63,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);",
          "message": "Function 'LogFile.AddMessage' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#57-63) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_adr' of LogFile.AddMessage (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_val' of LogFile.AddMessage (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 57,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_data' of LogFile.AddMessage (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 53,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'LogFile.History' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#53) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message LastMsg;",
          "message": "Variable 'LogFile.LastMsg' (0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol#55) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    }
  }
}