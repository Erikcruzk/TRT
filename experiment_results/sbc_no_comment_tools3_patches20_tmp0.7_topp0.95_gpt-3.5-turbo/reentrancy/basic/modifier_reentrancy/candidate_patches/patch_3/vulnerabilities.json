{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT",
        "exception (z3.z3types.Z3Exception: b'Argument (concat (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000004)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000004))\\n        (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000005)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000005))\\n        (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000006)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000006))\\n        (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000007)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000007))\\n        (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000008)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000008))\\n        (ite (bvsle |4_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000009)\\n             #x00\\n             (select |4_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000009))\\n        (ite (bvsle |4_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000a)\\n             #x00\\n             (select |4_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000a))\\n        (ite (bvsle |4_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000b)\\n             #x00\\n             (select |4_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000b))\\n        (ite (bvsle |4_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000c)\\n             #x00\\n             (select |4_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000c))) at position 1 has sort (_ BitVec 72) it does does not match declaration (declare-fun bvand ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))')"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_3"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 7,
          "vulnerability_to_line": 9,
          "vulnerability_code": "    function airDrop() public hasNoBalance supportsToken {\n        tokenBalance[msg.sender] += 20;",
          "message": "ModifierEntrancy.airDrop (patch_3.sol#7-9) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": 44,
          "vulnerability_code": "    function call(address token) public {\n        ModifierEntrancy(token).airDrop();",
          "message": "attack.call (patch_3.sol#42-44) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 31,
          "vulnerability_to_line": 45,
          "vulnerability_code": "contract attack {\n    bool hasBeenCalled;\n\n    function supportsToken() external returns (bytes32) {\n        if (!hasBeenCalled) {\n            hasBeenCalled = true;\n            ModifierEntrancy(msg.sender).airDrop();\n        }\n        return keccak256(\"Nu Token\");\n    }\n\n    function call(address token) public {\n        ModifierEntrancy(token).airDrop();\n    }",
          "message": "Contract 'attack' (patch_3.sol#31-45) is not in CapWords\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}