{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT",
        "exception (z3.z3types.Z3Exception: b'Argument (concat (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000004)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000004))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000005)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000005))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000006)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000006))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000007)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000007))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000008)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000008))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000009)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000009))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000010)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000010))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000011)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000011))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000012)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000012))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000013)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000013))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000014)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000014))) at position 1 has sort (_ BitVec 136) it does does not match declaration (declare-fun bvand ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))')"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_17"
      ],
      "vulnerability_findings": [
        {
          "name": "uninitialized-local",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": null,
          "vulnerability_code": "        Message memory newMsg;",
          "message": "newMsg in LogFile.addMessage (patch_6.sol#59) is a local variable never initialiazed\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function setMinSum(uint _val) public {\n        require(!initialized);\n        MinSum = _val;",
          "message": "PRIVATE_ETH_CELL.setMinSum (patch_6.sol#12-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 20,
          "vulnerability_code": "    function setLogFile(address _log) public {\n        require(!initialized);\n        Log = LogFile(_log);",
          "message": "PRIVATE_ETH_CELL.setLogFile (patch_6.sol#17-20) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 22,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function initialize() public {\n        require(!initialized);\n        initialized = true;",
          "message": "PRIVATE_ETH_CELL.initialize (patch_6.sol#22-25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": 41,
          "vulnerability_code": "    function collect(uint _am) public {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            balances[msg.sender] -= _am;\n            if (msg.sender.send(_am)) {\n                Log.addMessage(msg.sender, _am, \"Collect\");\n            } else {\n                balances[msg.sender] += _am;\n            }\n        }",
          "message": "PRIVATE_ETH_CELL.collect (patch_6.sol#32-41) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 43,
          "vulnerability_to_line": 45,
          "vulnerability_code": "    function() public payable {\n        deposit();",
          "message": "PRIVATE_ETH_CELL.fallback (patch_6.sol#43-45) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": 65,
          "vulnerability_code": "    function addMessage(address _adr, uint _val, string _data) public {\n        Message memory newMsg;\n        newMsg.sender = _adr;\n        newMsg.time = now;\n        newMsg.val = _val;\n        newMsg.data = _data;\n        history.push(newMsg);",
          "message": "LogFile.addMessage (patch_6.sol#58-65) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in patch_6.sol:\n\t- pragma solidity^0.4.19 (patch_6.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 46,
          "vulnerability_code": "contract PRIVATE_ETH_CELL {\n    mapping(address => uint256) public balances;\n\n    uint public MinSum;\n\n    LogFile public Log;\n\n    bool public initialized;\n\n    function setMinSum(uint _val) public {\n        require(!initialized);\n        MinSum = _val;\n    }\n\n    function setLogFile(address _log) public {\n        require(!initialized);\n        Log = LogFile(_log);\n    }\n\n    function initialize() public {\n        require(!initialized);\n        initialized = true;\n    }\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n        Log.addMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function collect(uint _am) public {\n        if (balances[msg.sender] >= MinSum && balances[msg.sender] >= _am) {\n            balances[msg.sender] -= _am;\n            if (msg.sender.send(_am)) {\n                Log.addMessage(msg.sender, _am, \"Collect\");\n            } else {\n                balances[msg.sender] += _am;\n            }\n        }\n    }\n\n    function() public payable {\n        deposit();\n    }",
          "message": "Contract 'PRIVATE_ETH_CELL' (patch_6.sol#3-46) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setMinSum(uint _val) public {",
          "message": "Parameter '_val' of PRIVATE_ETH_CELL.setMinSum (patch_6.sol#12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function setLogFile(address _log) public {",
          "message": "Parameter '_log' of PRIVATE_ETH_CELL.setLogFile (patch_6.sol#17) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collect(uint _am) public {",
          "message": "Parameter '_am' of PRIVATE_ETH_CELL.collect (patch_6.sol#32) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum;",
          "message": "Variable 'PRIVATE_ETH_CELL.MinSum' (patch_6.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    LogFile public Log;",
          "message": "Variable 'PRIVATE_ETH_CELL.Log' (patch_6.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_adr' of LogFile.addMessage (patch_6.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_val' of LogFile.addMessage (patch_6.sol#58) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 58,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function addMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_data' of LogFile.addMessage (patch_6.sol#58) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}