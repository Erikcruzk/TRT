{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint256 public withdrawalLimit = 1 ether;",
          "message": "EtherStore.withdrawalLimit should be constant (patch_14.sol#4)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 15,
          "vulnerability_code": "    function depositFunds() public payable {\n        require(!stopped);\n        balances[msg.sender] += msg.value;",
          "message": "EtherStore.depositFunds (patch_14.sol#12-15) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function withdrawFunds(uint256 _weiToWithdraw) public stopInEmergency {\n        require(balances[msg.sender] >= _weiToWithdraw);\n        require(_weiToWithdraw <= withdrawalLimit);\n        require(now >= lastWithdrawTime[msg.sender] + 1 weeks);\n\n        balances[msg.sender] -= _weiToWithdraw;\n        lastWithdrawTime[msg.sender] = now;\n\n        msg.sender.transfer(_weiToWithdraw);",
          "message": "EtherStore.withdrawFunds (patch_14.sol#17-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": 30,
          "vulnerability_code": "    function emergencyStop() public onlyInEmergency {\n        stopped = true;",
          "message": "EtherStore.emergencyStop (patch_14.sol#28-30) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 32,
          "vulnerability_to_line": 34,
          "vulnerability_code": "    function release() public {\n        stopped = false;",
          "message": "EtherStore.release (patch_14.sol#32-34) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 17,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function withdrawFunds(uint256 _weiToWithdraw) public stopInEmergency {",
          "message": "Parameter '_weiToWithdraw' of EtherStore.withdrawFunds (patch_14.sol#17) is not in mixedCase\n"
        }
      ]
    }
  }
}