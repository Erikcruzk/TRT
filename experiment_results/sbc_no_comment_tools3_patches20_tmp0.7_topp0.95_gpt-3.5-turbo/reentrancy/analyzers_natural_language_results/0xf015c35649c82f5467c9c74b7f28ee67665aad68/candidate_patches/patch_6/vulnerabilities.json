{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT",
        "exception (z3.z3types.Z3Exception: b'Argument (concat (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000004)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000004))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000005)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000005))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000006)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000006))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000007)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000007))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000008)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000008))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000009)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000009))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000010)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000010))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000011)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000011))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000012)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000012))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000013)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000013))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000014)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000014))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000015)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000015))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000016)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000016))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000017)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000017))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000018)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000018))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000019)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000019))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000020)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000020))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000021)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000021))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000022)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000022))) at position 1 has sort (_ BitVec 248) it does does not match declaration (declare-fun bvand ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))')"
      ],
      "vulnerability_findings": []
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_15"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;",
          "message": "MY_BANK.MinSum should be constant (patch_6.sol#11)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": 31,
          "vulnerability_code": "    function collect(uint _am) public {\n        Holder storage acc = Acc[msg.sender];\n        require(acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime);\n        acc.balance -= _am;\n        emit LogMessage(msg.sender, _am, \"Collect\");\n        msg.sender.transfer(_am);",
          "message": "MY_BANK.collect (patch_6.sol#25-31) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 33,
          "vulnerability_to_line": 35,
          "vulnerability_code": "    function() public payable {\n        put(0);",
          "message": "MY_BANK.fallback (patch_6.sol#33-35) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": 57,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        Message memory lastMsg = Message({\n            Sender: _adr,\n            Val: _val,\n            Data: _data,\n            Time: now\n        });\n\n        History.push(lastMsg);",
          "message": "Log.AddMessage (patch_6.sol#48-57) should be declared external\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 36,
          "vulnerability_code": "contract MY_BANK {\n    struct Holder {\n        uint unlockTime;\n        uint balance;\n    }\n    \n    mapping(address => Holder) public Acc;\n    Log LogFile;\n    uint public MinSum = 1 ether;\n\n    event LogMessage(address indexed sender, uint value, string message);\n\n    constructor(address log) public {\n        LogFile = Log(log);\n    }\n\n    function put(uint _unlockTime) public payable {\n        Acc[msg.sender].balance += msg.value;\n        Acc[msg.sender].unlockTime = _unlockTime > now ? _unlockTime : now;\n        emit LogMessage(msg.sender, msg.value, \"Put\");\n    }\n\n    function collect(uint _am) public {\n        Holder storage acc = Acc[msg.sender];\n        require(acc.balance >= MinSum && acc.balance >= _am && now > acc.unlockTime);\n        acc.balance -= _am;\n        emit LogMessage(msg.sender, _am, \"Collect\");\n        msg.sender.transfer(_am);\n    }\n\n    function() public payable {\n        put(0);\n    }",
          "message": "Contract 'MY_BANK' (patch_6.sol#3-36) is not in CapWords\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function put(uint _unlockTime) public payable {",
          "message": "Parameter '_unlockTime' of MY_BANK.put (patch_6.sol#19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 25,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function collect(uint _am) public {",
          "message": "Parameter '_am' of MY_BANK.collect (patch_6.sol#25) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 9,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(address => Holder) public Acc;",
          "message": "Variable 'MY_BANK.Acc' (patch_6.sol#9) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Log LogFile;",
          "message": "Variable 'MY_BANK.LogFile' (patch_6.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 11,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinSum = 1 ether;",
          "message": "Variable 'MY_BANK.MinSum' (patch_6.sol#11) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": 57,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        Message memory lastMsg = Message({\n            Sender: _adr,\n            Val: _val,\n            Data: _data,\n            Time: now\n        });\n\n        History.push(lastMsg);",
          "message": "Function 'Log.AddMessage' (patch_6.sol#48-57) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_adr' of Log.AddMessage (patch_6.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_val' of Log.AddMessage (patch_6.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 48,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_data' of Log.AddMessage (patch_6.sol#48) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'Log.History' (patch_6.sol#46) is not in mixedCase\n"
        }
      ]
    }
  }
}