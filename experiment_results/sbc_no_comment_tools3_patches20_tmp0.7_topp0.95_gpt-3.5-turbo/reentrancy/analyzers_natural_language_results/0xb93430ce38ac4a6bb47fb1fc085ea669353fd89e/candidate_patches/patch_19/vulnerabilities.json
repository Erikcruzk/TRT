{
  "smartbugs_completed": true,
  "analyzer_results": {
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_18"
      ],
      "vulnerability_findings": [
        {
          "name": "constable-states",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinDeposit = 1 ether;",
          "message": "PrivateBank.MinDeposit should be constant (patch_19.sol#6)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function Deposit() public payable {\n        if (msg.value >= MinDeposit) {\n            balances[msg.sender] += msg.value;\n            TransferLog.AddMessage(msg.sender, msg.value, \"Deposit\");\n        }",
          "message": "PrivateBank.Deposit (patch_19.sol#14-19) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function CashOut(uint _am) public {\n        require(_am <= balances[msg.sender]);\n        balances[msg.sender] -= _am;\n        TransferLog.AddMessage(msg.sender, _am, \"CashOut\");\n        msg.sender.transfer(_am);",
          "message": "PrivateBank.CashOut (patch_19.sol#21-26) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 28,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function() public payable {}",
          "message": "PrivateBank.fallback (patch_19.sol#28) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": 50,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        Message memory newMessage = Message({\n            Sender: _adr,\n            Time: now,\n            Val: _val,\n            Data: _data\n        });\n        History.push(newMessage);",
          "message": "Log.AddMessage (patch_19.sol#42-50) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.19;",
          "message": "Detected issues with version pragma in patch_19.sol:\n\t- pragma solidity^0.4.19 (patch_19.sol#1): it allows old versions\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": 12,
          "vulnerability_code": "    function PrivateBank(address _lib) public {\n        TransferLog = Log(_lib);",
          "message": "Function 'PrivateBank.PrivateBank' (patch_19.sol#10-12) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 10,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function PrivateBank(address _lib) public {",
          "message": "Parameter '_lib' of PrivateBank.PrivateBank (patch_19.sol#10) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 14,
          "vulnerability_to_line": 19,
          "vulnerability_code": "    function Deposit() public payable {\n        if (msg.value >= MinDeposit) {\n            balances[msg.sender] += msg.value;\n            TransferLog.AddMessage(msg.sender, msg.value, \"Deposit\");\n        }",
          "message": "Function 'PrivateBank.Deposit' (patch_19.sol#14-19) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": 26,
          "vulnerability_code": "    function CashOut(uint _am) public {\n        require(_am <= balances[msg.sender]);\n        balances[msg.sender] -= _am;\n        TransferLog.AddMessage(msg.sender, _am, \"CashOut\");\n        msg.sender.transfer(_am);",
          "message": "Function 'PrivateBank.CashOut' (patch_19.sol#21-26) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 21,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function CashOut(uint _am) public {",
          "message": "Parameter '_am' of PrivateBank.CashOut (patch_19.sol#21) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 6,
          "vulnerability_to_line": null,
          "vulnerability_code": "    uint public MinDeposit = 1 ether;",
          "message": "Variable 'PrivateBank.MinDeposit' (patch_19.sol#6) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Log TransferLog;",
          "message": "Variable 'PrivateBank.TransferLog' (patch_19.sol#8) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": 50,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {\n        Message memory newMessage = Message({\n            Sender: _adr,\n            Time: now,\n            Val: _val,\n            Data: _data\n        });\n        History.push(newMessage);",
          "message": "Function 'Log.AddMessage' (patch_19.sol#42-50) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_adr' of Log.AddMessage (patch_19.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_val' of Log.AddMessage (patch_19.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 42,
          "vulnerability_to_line": null,
          "vulnerability_code": "    function AddMessage(address _adr, uint _val, string _data) public {",
          "message": "Parameter '_data' of Log.AddMessage (patch_19.sol#42) is not in mixedCase\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 40,
          "vulnerability_to_line": null,
          "vulnerability_code": "    Message[] public History;",
          "message": "Variable 'Log.History' (patch_19.sol#40) is not in mixedCase\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    },
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT",
        "exception (z3.z3types.Z3Exception: b'Argument (concat (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000004)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000004))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000005)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000005))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000006)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000006))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000007)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000007))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000008)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000008))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000009)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000009))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000010)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000010))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000011)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000011))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000012)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000012))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000013)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000013))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000014)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000014))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000015)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000015))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000016)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000016))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000017)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000017))) at position 1 has sort (_ BitVec 160) it does does not match declaration (declare-fun bvand ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))')"
      ],
      "vulnerability_findings": []
    }
  }
}