{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "exception (z3.z3types.Z3Exception: b'Argument (concat (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000004)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000004))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000005)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000005))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000006)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000006))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000007)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000007))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000008)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000008))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000009)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000009))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000000f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000000f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000010)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000010))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000011)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000011))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000012)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000012))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000013)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000013))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000014)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000014))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000015)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000015))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000016)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000016))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000017)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000017))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000018)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000018))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000019)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000019))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001a)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001a))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001b)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001b))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001c)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001c))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001d)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001d))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001e)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001e))\\n        (ite (bvsle |2_calldatasize|\\n                    #x000000000000000000000000000000000000000000000000000000000000001f)\\n             #x00\\n             (select |2_calldata|\\n                     #x000000000000000000000000000000000000000000000000000000000000001f))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000020)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000020))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000021)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000021))\\n        (ite (bvsle |2_calldatasize|\\n                    #x0000000000000000000000000000000000000000000000000000000000000022)\\n             #x00\\n             (select |2_calldata|\\n                     #x0000000000000000000000000000000000000000000000000000000000000022))) at position 1 has sort (_ BitVec 248) it does does not match declaration (declare-fun bvand ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))')"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_6"
      ],
      "vulnerability_findings": [
        {
          "name": "arbitrary-send",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function withdrawReward(address recipient) public {\n        require(rewardsForA[recipient] > 0); //added require statement to check if reward is greater than 0\n        uint amountToWithdraw = rewardsForA[recipient];\n        rewardsForA[recipient] = 0;\n        (bool success, ) = recipient.call.value(amountToWithdraw)(\"\");\n        require(success);",
          "message": "Reentrancy_bonus.withdrawReward (patch_7.sol#8-14) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = recipient.call.value(amountToWithdraw)() (patch_7.sol#12)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 16,
          "vulnerability_to_line": 23,
          "vulnerability_code": "    function getFirstWithdrawalBonus(address recipient) public {\n        require(!claimedBonus[recipient]);\n\n        rewardsForA[recipient] += 100;\n\n        claimedBonus[recipient] = true; //moved this statement above the withdrawReward function call\n        withdrawReward(recipient);",
          "message": "Reentrancy_bonus.getFirstWithdrawalBonus (patch_7.sol#16-23) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.0;",
          "message": "Detected issues with version pragma in patch_7.sol:\n\t- pragma solidity^0.4.0 (patch_7.sol#1): it allows old versions\n"
        },
        {
          "name": "low-level-calls",
          "vulnerability_from_line": 8,
          "vulnerability_to_line": 14,
          "vulnerability_code": "    function withdrawReward(address recipient) public {\n        require(rewardsForA[recipient] > 0); //added require statement to check if reward is greater than 0\n        uint amountToWithdraw = rewardsForA[recipient];\n        rewardsForA[recipient] = 0;\n        (bool success, ) = recipient.call.value(amountToWithdraw)(\"\");\n        require(success);",
          "message": "Low level call in Reentrancy_bonus.withdrawReward (patch_7.sol#8-14):\n\t-(success) = recipient.call.value(amountToWithdraw)() patch_7.sol#12\n"
        },
        {
          "name": "naming-convention",
          "vulnerability_from_line": 3,
          "vulnerability_to_line": 24,
          "vulnerability_code": "contract Reentrancy_bonus {\n    mapping(address => uint) private userBalances;\n    mapping(address => bool) private claimedBonus;\n    mapping(address => uint) private rewardsForA;\n\n    function withdrawReward(address recipient) public {\n        require(rewardsForA[recipient] > 0); //added require statement to check if reward is greater than 0\n        uint amountToWithdraw = rewardsForA[recipient];\n        rewardsForA[recipient] = 0;\n        (bool success, ) = recipient.call.value(amountToWithdraw)(\"\");\n        require(success);\n    }\n\n    function getFirstWithdrawalBonus(address recipient) public {\n        require(!claimedBonus[recipient]);\n\n        rewardsForA[recipient] += 100;\n\n        claimedBonus[recipient] = true; //moved this statement above the withdrawReward function call\n        withdrawReward(recipient);\n    }",
          "message": "Contract 'Reentrancy_bonus' (patch_7.sol#3-24) is not in CapWords\n"
        },
        {
          "name": "unused-state",
          "vulnerability_from_line": 4,
          "vulnerability_to_line": null,
          "vulnerability_code": "    mapping(address => uint) private userBalances;",
          "message": "Reentrancy_bonus.userBalances (patch_7.sol#4) is never used in Reentrancy_bonus\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Callstack Depth Attack Vulnerability",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": null,
          "vulnerability_code": "        (bool success, ) = recipient.call.value(amountToWithdraw)(\"\");",
          "message": null
        }
      ]
    }
  }
}