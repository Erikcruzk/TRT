{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": false,
      "errors": [
        "DOCKER_TIMEOUT"
      ],
      "vulnerability_findings": []
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_7"
      ],
      "vulnerability_findings": [
        {
          "name": "shadowing-local",
          "vulnerability_from_line": 46,
          "vulnerability_to_line": null,
          "vulnerability_code": "    constructor(uint256 totalSupply) public {",
          "message": "ERC20.constructor.totalSupply (local variable @ patch_5.sol#46) shadows:\n\t- ERC20.totalSupply (function @ patch_5.sol#51-53)\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 51,
          "vulnerability_to_line": 53,
          "vulnerability_code": "    function totalSupply() public view returns (uint256) {\n        return _totalSupply;",
          "message": "ERC20.totalSupply (patch_5.sol#51-53) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 55,
          "vulnerability_to_line": 57,
          "vulnerability_code": "    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];",
          "message": "ERC20.balanceOf (patch_5.sol#55-57) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 59,
          "vulnerability_to_line": 61,
          "vulnerability_code": "    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowed[owner][spender];",
          "message": "ERC20.allowance (patch_5.sol#59-61) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 63,
          "vulnerability_to_line": 71,
          "vulnerability_code": "    function transfer(address to, uint256 value) public returns (bool) {\n        require(value > 0, \"Transfer amount must be greater than zero\");\n        require(_balances[msg.sender] >= value, \"Insufficient balance\");\n        require(to != address(0), \"Invalid recipient address\");\n        _balances[msg.sender] = _balances[msg.sender].sub(value);\n        _balances[to] = _balances[to].add(value);\n        emit Transfer(msg.sender, to, value);\n        return true;",
          "message": "ERC20.transfer (patch_5.sol#63-71) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 73,
          "vulnerability_to_line": 78,
          "vulnerability_code": "    function approve(address spender, uint256 value) public returns (bool) {\n        require(spender != address(0), \"Invalid spender address\");\n        _allowed[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;",
          "message": "ERC20.approve (patch_5.sol#73-78) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 80,
          "vulnerability_to_line": 90,
          "vulnerability_code": "    function transferFrom(address from, address to, uint256 value) public returns (bool) {\n        require(value > 0, \"Transfer amount must be greater than zero\");\n        require(_balances[from] >= value, \"Insufficient balance\");\n        require(_allowed[from][msg.sender] >= value, \"Insufficient allowance\");\n        require(to != address(0), \"Invalid recipient address\");\n        _balances[from] = _balances[from].sub(value);\n        _balances[to] = _balances[to].add(value);\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n        emit Transfer(from, to, value);\n        return true;",
          "message": "ERC20.transferFrom (patch_5.sol#80-90) should be declared external\n"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": []
    }
  }
}