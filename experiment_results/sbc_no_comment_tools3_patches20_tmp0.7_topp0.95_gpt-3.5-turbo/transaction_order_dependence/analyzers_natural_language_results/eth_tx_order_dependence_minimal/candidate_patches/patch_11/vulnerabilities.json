{
  "smartbugs_completed": true,
  "analyzer_results": {
    "mythril-0.23.15": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Unprotected Ether Withdrawal (SWC 105)",
          "vulnerability_from_line": 23,
          "vulnerability_to_line": null,
          "vulnerability_code": "        msg.sender.transfer(reward);",
          "message": "Any sender can withdraw Ether from the contract account.\nArbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.\nClassification: SWC-105"
        }
      ]
    },
    "oyente": {
      "successfull_analysis": true,
      "errors": [],
      "vulnerability_findings": [
        {
          "name": "Transaction-Ordering Dependence (TOD)",
          "vulnerability_from_line": null,
          "vulnerability_to_line": null,
          "vulnerability_code": null,
          "message": null
        }
      ]
    },
    "slither": {
      "successfull_analysis": true,
      "errors": [
        "EXIT_CODE_4"
      ],
      "vulnerability_findings": [
        {
          "name": "external-function",
          "vulnerability_from_line": 12,
          "vulnerability_to_line": 17,
          "vulnerability_code": "    function setReward() public payable {\n        require(!claimed);\n        require(msg.sender == owner);\n\n        reward = msg.value;",
          "message": "EthTxOrderDependenceMinimal.setReward (patch_11.sol#12-17) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 19,
          "vulnerability_to_line": 25,
          "vulnerability_code": "    function claimReward(uint256 submission) public {\n        require(!claimed);\n        require(submission < 10);\n\n        msg.sender.transfer(reward);\n        claimed = true;",
          "message": "EthTxOrderDependenceMinimal.claimReward (patch_11.sol#19-25) should be declared external\n"
        },
        {
          "name": "external-function",
          "vulnerability_from_line": 27,
          "vulnerability_to_line": 32,
          "vulnerability_code": "    function withdraw() public {\n        require(claimed);\n        require(msg.sender == owner);\n\n        owner.transfer(address(this).balance);",
          "message": "EthTxOrderDependenceMinimal.withdraw (patch_11.sol#27-32) should be declared external\n"
        },
        {
          "name": "solc-version",
          "vulnerability_from_line": 1,
          "vulnerability_to_line": null,
          "vulnerability_code": "pragma solidity ^0.4.16;",
          "message": "Detected issues with version pragma in patch_11.sol:\n\t- pragma solidity^0.4.16 (patch_11.sol#1): it allows old versions\n"
        }
      ]
    }
  }
}