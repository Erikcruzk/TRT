{
    "solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/Migrations.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 34,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    constructor() public {\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 35,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        owner = msg.sender;\n",
                    "message": "Consider making costructor payable to save gas."
                },
                {
                    "name": "non-payable-constructor",
                    "vulnerability_from_line": 36,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    }\n",
                    "message": "Consider making costructor payable to save gas."
                }
            ]
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_4"
            ],
            "vulnerability_findings": [
                {
                    "name": "external-function",
                    "vulnerability_from_line": 38,
                    "vulnerability_to_line": 40,
                    "vulnerability_code": "    function setCompleted(uint256 completed) public restricted {\n\n        last_completed_migration = completed;\n",
                    "message": "Migrations.setCompleted (Migrations.sol#38-40) should be declared external\n"
                },
                {
                    "name": "external-function",
                    "vulnerability_from_line": 42,
                    "vulnerability_to_line": 45,
                    "vulnerability_code": "    function upgrade(address newAddress) public restricted {\n\n        Migrations upgraded = Migrations(newAddress);\n\n        upgraded.setCompleted(last_completed_migration);\n",
                    "message": "Migrations.upgrade (Migrations.sol#42-45) should be declared external\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.5.4;\n",
                    "message": "Detected issues with version pragma in Migrations.sol:\n\t- pragma solidity0.5.4 (Migrations.sol#21): it allows old versions\n"
                },
                {
                    "name": "naming-convention",
                    "vulnerability_from_line": 26,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "    uint256 public last_completed_migration;\n",
                    "message": "Variable 'Migrations.last_completed_migration' (Migrations.sol#26) is not in mixedCase\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "oyente": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "mythril": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": [
                {
                    "name": "External Call To User-Supplied Address (SWC 107)",
                    "vulnerability_from_line": 44,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "        upgraded.setCompleted(last_completed_migration);\n",
                    "message": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107"
                }
            ]
        },
        "osiris": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        }
    },
    "solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/protocol/lib/Token.sol": {
        "semgrep": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "smartcheck": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "oyente": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "mythril": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "osiris": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        }
    },
    "solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/protocol/lib/Require.sol": {
        "semgrep": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "smartcheck": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "oyente": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "mythril": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        },
        "osiris": {
            "successfull_analysis": false,
            "errors": [
                "Smartbugs results not found"
            ],
            "vulnerability_findings": []
        }
    },
    "solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/protocol/interfaces/IErc20.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_2"
            ],
            "vulnerability_findings": [
                {
                    "name": "erc20-interface",
                    "vulnerability_from_line": 31,
                    "vulnerability_to_line": 99,
                    "vulnerability_code": "interface IErc20 {\n\n    event Transfer(\n\n        address indexed from,\n\n        address indexed to,\n\n        uint256 value\n\n    );\n\n\n\n    event Approval(\n\n        address indexed owner,\n\n        address indexed spender,\n\n        uint256 value\n\n    );\n\n\n\n    function totalSupply(\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function balanceOf(\n\n        address who\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function allowance(\n\n        address owner,\n\n        address spender\n\n    )\n\n        external\n\n        view\n\n        returns (uint256);\n\n\n\n    function transfer(\n\n        address to,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n\n\n    function transferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n    function approve(\n\n        address spender,\n\n        uint256 value\n\n    )\n\n        external;\n\n\n\n    function name()\n\n        external\n\n        view\n\n        returns (string memory);\n\n\n\n    function symbol()\n\n        external\n\n        view\n\n        returns (string memory);\n\n\n\n    function decimals()\n\n        external\n\n        view\n\n        returns (uint8);\n",
                    "message": "IErc20 (IErc20.sol#31-99) has incorrect ERC20 function interface(s):\n\t-transfer (IErc20.sol#65-69)\n\t-transferFrom (IErc20.sol#72-77)\n\t-approve (IErc20.sol#79-83)\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.5.4;\n",
                    "message": "Detected issues with version pragma in IErc20.sol:\n\t- pragma solidity0.5.4 (IErc20.sol#21): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "oyente": {
            "successfull_analysis": false,
            "errors": [
                "execution failed"
            ],
            "vulnerability_findings": []
        },
        "mythril": {
            "successfull_analysis": false,
            "errors": [
                "input files do not contain any valid contracts"
            ],
            "vulnerability_findings": []
        },
        "osiris": {
            "successfull_analysis": false,
            "errors": [
                "Solidity compilation failed"
            ],
            "vulnerability_findings": []
        }
    },
    "solo-17df84db351d5438e1b7437572722b4f52c8b2b4/contracts/protocol/interfaces/IExchangeWrapper.sol": {
        "semgrep": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "slither": {
            "successfull_analysis": true,
            "errors": [
                "EXIT_CODE_2"
            ],
            "vulnerability_findings": [
                {
                    "name": "pragma",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.5.4;\n",
                    "message": "Different versions of Solidity is used in IExchangeWrapper.sol:\n\t- Version used: ['0.5.4', 'ABIEncoderV2']\n\t- IExchangeWrapper.sol#21 declares pragma solidity0.5.4\n\t- IExchangeWrapper.sol#22 declares pragma experimentalABIEncoderV2\n"
                },
                {
                    "name": "solc-version",
                    "vulnerability_from_line": 21,
                    "vulnerability_to_line": null,
                    "vulnerability_code": "pragma solidity 0.5.4;\n",
                    "message": "Detected issues with version pragma in IExchangeWrapper.sol:\n\t- pragma solidity0.5.4 (IExchangeWrapper.sol#21): it allows old versions\n"
                }
            ]
        },
        "smartcheck": {
            "successfull_analysis": true,
            "errors": [],
            "vulnerability_findings": []
        },
        "oyente": {
            "successfull_analysis": false,
            "errors": [
                "execution failed"
            ],
            "vulnerability_findings": []
        },
        "mythril": {
            "successfull_analysis": false,
            "errors": [
                "input files do not contain any valid contracts"
            ],
            "vulnerability_findings": []
        },
        "osiris": {
            "successfull_analysis": false,
            "errors": [
                "Solidity compilation failed"
            ],
            "vulnerability_findings": []
        }
    }
}